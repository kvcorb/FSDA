<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->fanplot</Title>
   <Purpose><!--This is the second line of the .m file-->fanplot plots the fan plot for transformation in linear regression
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Data to plot.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure containing the following fields out.Score = (n-init) x length(la)+1 matrix:
1st col = fwd search index;
2nd col = value of the score test in each step of the fwd search for la(1);
...;
last col = value of the score test in each step of the fwd search for la(end).
out.la = vector containing the values of lambda for which fan plot is constructed.
out.bs = matrix of size p x length(la) containing the units forming the initial subset for each value of lambda.
out. Un = cell of size length(la). out.Un{i} is a (n-init) x 11 matrix which contains the unit(s) included in the subset at each step of the fwd search (necessary only if option datatooltip or databrush are not empty).
out.y = a vector containing the response (necessary only if option databrush is true).
out.X = a matrix containing the explanatory variables (necessary only if option databrush is not empty).</LongDesc>
         <Example> </Example>
         <DataType>struct</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>Score</Value>
               <Description>(n-init) x length(la)+1 matrix: &#xD;
               1st col = fwd search index; &#xD;
               2nd col = value of the score test in each step&#xD;
               of the fwd search for la(1); &#xD;
               ...; &#xD;
               last col  =  value of the score test in each step&#xD;
               of the fwd search for la(end).</Description>
            </ItemCell>
            <ItemCell>
               <Value>la</Value>
               <Description>vector containing the values of lambda for which fan plot&#xD;
               is constructed.</Description>
            </ItemCell>
            <ItemCell>
               <Value>bs</Value>
               <Description>matrix of size p x length(la) containing the units forming&#xD;
               the initial subset for each value of lambda. &#xD;
      out. Un   =  cell of size length(la). out.Un{i} is a (n-init) x 11&#xD;
               matrix which contains the unit(s) included in the subset&#xD;
               at each step of the fwd search (necessary only if option&#xD;
               datatooltip or databrush are not empty).</Description>
            </ItemCell>
            <ItemCell>
               <Value>y</Value>
               <Description>a vector containing the response (necessary only if option&#xD;
              databrush is true).</Description>
            </ItemCell>
            <ItemCell>
               <Value>X</Value>
               <Description>a matrix containing the explanatory variables (necessary&#xD;
              only if option databrush is not empty).</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>label</Name>
         <ShortDesc>Labels.</ShortDesc>
         <TypeInd>Cell array of strings.</TypeInd>
         <LongDesc>Cell containing the labels of the units (optional argument used when datatooltip=1). If this field is not present labels row1, ..., rown will be automatically created and included in the pop up datatooltip window.</LongDesc>
         <Example>'corr',1</Example>
         <DataType>Cell array of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>Confidence level.</ShortDesc>
         <TypeInd>Scalar or vector.</TypeInd>
         <LongDesc>Confidence level for the bands (default is 0.99, that is we plot two horizontal lines in correspondence of value -2.58 and 2.58).</LongDesc>
         <Example>'conflev',[0.9 0.95 0.99]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>Information about the unit selected.</ShortDesc>
         <TypeInd>Empty value or structure.</TypeInd>
         <LongDesc>The default is datatooltip=''.
If datatooltip is not empty the user can use the mouse in order to have information about the unit selected, the step in which the unit enters the search and the associated label. If datatooltip is a structure, it is possible to control the aspect of the data cursor (see function datacursormode for more details or the examples below). The default options of the structure are DisplayStyle='Window' and SnapToDataVertex='on'.</LongDesc>
         <Example>'datatooltip',''</Example>
         <DataType>Empty value or structure</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>Databrush options.</ShortDesc>
         <TypeInd>Empty value, scalar or cell.</TypeInd>
         <LongDesc>DATABRUSH IS AN EMPTY VALUE: If databrush is an empty value (default), no brushing is done. The activation of this option (databrush is a scalar or a cell) enables the user to select a set of trajectories in the current plot and to see them highlighted in the y|X plot (notice that if the plot y|X does not exist it is automatically created). In addition, brushed units can be highlighted in the other following plots (only if they are already open): monitoring residual plot monitoring leverage plot maximum studentized residual $s^2$ and $R^2$ Cook distance and modified Cook distance deletion t statistics.
The window style of the other figures is set equal to that which contains the monitoring residual plot. In other words, if the monitoring residual plot is docked all the other figures will be docked too.
DATABRUSH IS A SCALAR: If databrush is a scalar the default selection tool is a rectangular brush and it is possible to brush only once (that is persist='').
DATABRUSH IS A CELL: If databrush is a cell, it is possible to use all optional arguments of function selectdataFS.m and LXS.m inside the curly brackets of option databrush and the following optional argument:
persist = Persist is an empty value or a scalar containing the strings 'on' or 'off'. If persist = 'on' or 'off' brusing can be done as many time as the user requires. In case persist='off', every time a new brush is performed, units previously brushed are removed. In case persist='on' the unit(s) currently brushed are added to those previously brushed. However in both cases, if the user brushes a different trajectory from the one previously brushed, the previos brushed plots are stored in a figure in the background. The default value of persist is '' that is brushing is allowed only once.
bivarfit = This option adds one or more least square lines, based on SIMPLE REGRESSION of y on Xi, to the plots of y|Xi.
If bivarfit = '' is the default: no line is fitted.
If bivarfit = '1' fits a single ols line to all points of each bivariate plot in the scatter matrix y|X.
If bivarfit = '2' fits two ols lines: one to all points and another to the group of the genuine observations. The group of the potential outliers is not fitted.
If bivarfit = '0' fits one ols line to each group. This is useful for the purpose of fitting mixtures of regression lines.
If bivarfit = 'i1' or 'i2' or 'i3' etc fits an ols line to a specific group, the one with index 'i' equal to 1, 2, 3 etc. Again, useful in case of mixtures.
multivarfit = This option adds one or more least square lines, based on MULTIVARIATE REGRESSION of y on X, to the plots of y|Xi.
If multivarfit = '' is the default: no line is fitted.
If multivarfit = '1' fits a single ols line to all points of each bivariate plot in the scatter matrix y|X. The line added to the scatter plot y|Xi is avconst +Ci*Xi, where Ci is the coefficient of Xi in the multivariate regression and avconst is the effect of all the other explanatory variables different from Xi evaluated at their centroid (that is overline{y}'C)) If multivarfit = '2' exactly equal to multivarfit ='1' but this time we add the line based on the group of unselected observations.</LongDesc>
         <Example>'databrush',1</Example>
         <DataType>Empty value, scalar or cell.</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>titl</Name>
         <ShortDesc>Title.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>A label for the title (default: 'Fan plot')</LongDesc>
         <Example>'titl','Fan plot'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>x-axis label.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>A label for the x-axis (default:
'Subset size m').</LongDesc>
         <Example>'labx','Subset size m'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>y-axis label.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>a label for the y-axis (default:'Score test statistic').</LongDesc>
         <Example>'laby','Score test statistic'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>Min and Max of the x axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and maximum of the x axis. Default value is [init n].</LongDesc>
         <Example>'xlimx',[init n]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>Min and Max of the y axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and maximum of the y axis. Default value for ylimy(1)=max(min(score_test),-20). Default value for ylimy(2)=min(max(score_test),20).</LongDesc>
         <Example>'ylimy',[0 100]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwd</Name>
         <ShortDesc>Linewidth.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls linewidth of the curves which contain the score test. Default line width=2.</LongDesc>
         <Example>'lwd',2</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>Width of the envelope lines.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the width of the lines associated with the envelopes. Default is lwdenv=1.</LongDesc>
         <Example>'lwdenv',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>Font size of the labels.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the font size of the labels of the axes and of the labels inside the plot. Default value is 12.</LongDesc>
         <Example>'FontSize',12</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>Size of the numbers of the axis.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the size of the numbers of the axes. Default value is 10.</LongDesc>
         <Example>'SizeAxesNum',10</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nameX</Name>
         <ShortDesc>Labels of the X variables.</ShortDesc>
         <TypeInd>Cell array of strings.</TypeInd>
         <LongDesc>Cell array of strings of length p containing the labels of the varibles of the regression dataset. If it is empty (default) the sequence X1, ..., Xp will be created automatically.</LongDesc>
         <Example>'nameX',''</Example>
         <DataType>Cell array of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>namey</Name>
         <ShortDesc>Labels of the y variable.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String containing the label of the response variable.</LongDesc>
         <Example>'namey',''</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Handle of the plot.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String which identifies the handle of the plot which is about to be created. The default is to use tag pl_fan. Notice that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created.</LongDesc>
         <Example>'tag','pl_mycov'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson and Riani (2000), Robust Diagnostic Regression Analysis, Springer Verlag, New York.</Item>
      <Item>Atkinson, A.C. and Riani, M. (2002a). Tests in the fan plot for robust, diagnostic transformations in regression, Chemometrics and Intelligent Laboratory Systems, Vol. 60, pp. 87-100.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION--></SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>fanplot with all default options.</Title>
         <Desc>
            <ItemCell>load the wool data</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>XX=load('wool.txt');</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>% FSRfan and fanplot with all default options</ItemCell>
            <ItemCell>[out]=FSRfan(y,X);</ItemCell>
            <ItemCell>fanplot(out);</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>fanplot with optional arguments.</Title>
         <Desc>
            <ItemCell>FSRfan and fanplot with specified lambda</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>% la = vector contanining the most common values of the transformation</ItemCell>
            <ItemCell>% parameter</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out);</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt; FSRfan and fanplot with databrush option.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out,'databrush','1');</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt; FSRfan and fanplot with databrush, persist, label and RemoveLabels options.</Title>
         <Desc>
            <ItemCell>Removelabels is a parameter of SelectdataFS function</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out,'databrush',{ 'persist' 'on' 'Label' 'on' 'RemoveLabels' 'off'});</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt; FSRfan and fanplot with databrush, bivarfit, label and RemoveLabels options.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out,'databrush',{ 'bivarfit' '2' 'Label' 'on' 'RemoveLabels' 'off'});</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt; FSRfan and fanplot with databrush and selectionmode options.</Title>
         <Desc>
            <ItemCell>Example of the use of persistent cumulative brush.</ItemCell>
            <ItemCell>Every time a brushing action is performed current highlightments are added to previous highlightments</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out,'databrush',{'selectionmode','Brush'});</ItemCell>
            <ItemCell>fanplot(out,'databrush',{'selectionmode' 'Lasso' 'persist' 'off'})</ItemCell>
            <ItemCell>fanplot(out,'databrush',{'selectionmode' 'Rect' 'persist' 'on'})</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>fanplot with datatooltip passed as scalar.</Title>
         <Desc>
            <ItemCell>That is using default options for datacursor (i.e. DisplayStyle=window).</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out,'datatooltip',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Construct fan plot specifying the confidence level and the xlimits.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[0 1/3 0.4 0.5];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la,'init',size(X,2)+2,'nsamp',20000);</ItemCell>
            <ItemCell>fanplot(out,'xlimx',[100 300],'conflev',0.95);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt; Example of the use of multivarfit and xlimx.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[0 1/3 0.4 0.5];</ItemCell>
            <ItemCell>[outs]=FSRfan(y,X,'la',la,'init',size(X,2)+2,'nsamp',20000);</ItemCell>
            <ItemCell>fanplot(outs,'xlimx',[10 520],'databrush',{'selectionmode' 'Brush' 'multivarfit' '2'})</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 6.&lt;/i&gt; Example of the use of FlagSize, namey, namex, lwd,FontSize, SizeAxesNum.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell> namey='Sales';</ItemCell>
            <ItemCell> nameX={'Number of visits', 'Age', 'Number of persons in the family'};</ItemCell>
            <ItemCell>%FlagSize controls how large must be the highlighted points. It is a</ItemCell>
            <ItemCell>%parametr of selectdataFS.</ItemCell>
            <ItemCell> fanplot(out,'xlimx',[10 520],'lwd',1.5,'FontSize',11,'SizeAxesNum',11,'nameX',nameX,'namey',namey,'databrush',{'selectionmode' 'Brush'...</ItemCell>
            <ItemCell> 'multivarfit' '2' 'FlagSize' '5'})</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 7.&lt;/i&gt; Only one brush specifying labels for y and X.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>la=[-1 -0.5 0 0.5 1];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la);</ItemCell>
            <ItemCell>fanplot(out,'databrush',{'selectionmode' 'Brush' 'FlagSize' '5'},'nameX',nameX,'namey',namey)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>