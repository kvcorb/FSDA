<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->FSRfan</Title>
   <Purpose><!--This is the second line of the .m file-->FSRfan monitors the values of the score test statistic for each lambda
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>y</Name>
         <ShortDesc>Response variable.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>A vector with n elements that contains the response variable. It can be either a row or a column vector.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>X</Name>
         <ShortDesc>Predictor variables.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>Data matrix of explanatory variables (also called 'regressors') of dimension (n x p-1). Rows of X represent observations, and columns represent variables.
Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations. NOTICE THAT THE INTERCEPT MUST ALWAYS BE INCLUDED.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>intercept</Name>
         <ShortDesc>Indicator for constant term.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If 1, a model with constant term will be fitted (default), else no constant term will be included.</LongDesc>
         <Example>'intercept',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on matrix y and matrix X. Notice that y and X are left unchanged. In other words the additional column of ones for the intercept is not added. As default nocheck=0.</LongDesc>
         <Example>'nocheck',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>la</Name>
         <ShortDesc>values of the transformation parameter for which it is necessary to compute the score test.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Default value of lambda is la=[-1 -0.5 0 0.5 1]; that is the five most common values of lambda</LongDesc>
         <Example>'la',[-1 -0.5]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>h</Name>
         <ShortDesc>The number of observations that have determined the least trimmed (median of) squares estimator.</ShortDesc>
         <TypeInd>Integer.</TypeInd>
         <LongDesc>Generally h is an integer greater or equal than [(n+size(X,2)+1)/2] but smaller then n</LongDesc>
         <Example>'h',5</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nsamp</Name>
         <ShortDesc>Number of subsamples which will be extracted to find the robust estimator.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nsamp=0 all subsets will be extracted. They will be (n choose p). Remark: if the number of all possible subset is &amp;lt;1000 the default is to extract all subsets otherwise just 1000.</LongDesc>
         <Example>'nsamp',1000</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lms</Name>
         <ShortDesc>Criterion to use to find the initlal subset to initialize the search.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If lms=1 (default) Least Median of Squares is computed, else Least trimmed of Squares is computed.</LongDesc>
         <Example>'lms',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>family</Name>
         <ShortDesc>string which identifies the family of transformations which must be used.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>Possible values are 'BoxCox' (default), 'YJ' or 'YJpn'.
The Box-Cox family of power transformations equals $(y^{\lambda}-1)/\lambda$ for $\lambda$ not equal to zero, and $\log(y)$ if $\lambda = 0$.
The Yeo-Johnson (YJ) transformation is the Box-Cox transformation of $y+1$ for nonnegative values, and of $|y|+1$ with parameter $2-\lambda$ for $y$ negative.
Remember that BoxCox can be used just if input y is positive. Yeo-Johnson family of transformations does not have this limitation.
If family is 'YJpn' Yeo-Johnson family is applied but in this case it is also possible to monitor (in the output arguments out.Scorep and out.Scoren) the score test respectively for positive and negative observations.</LongDesc>
         <Example>'family','YJ'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>init</Name>
         <ShortDesc>Search initialization.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>It specifies the initial subset size to start monitoring the value of the score test, if init is not specified it will be set equal to:
p+1, if the sample size is smaller than 40;
min(3*p+1,floor(0.5*(n+p+1))), otherwise.</LongDesc>
         <Example>'init',100 starts monitoring from step m=100</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If plots=1 the fan plot is produced else (default) no plot is produced.
REMARK: all the following options work only if plots=1</LongDesc>
         <Example>'plots',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>confidence level for the bands.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>default is 0.99 that is we plot two horizontal lines in correspondence of value -2.58 and 2.58</LongDesc>
         <Example>'conflev',0.95</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>titl</Name>
         <ShortDesc>a label for the title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>default: 'Fan plot'</LongDesc>
         <Example>'titl','my title'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>a label for the x-axis.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>default: 'Subset size m'</LongDesc>
         <Example>'labx','my labx'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>a label for the y-axis.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>default:'Score test statistic'</LongDesc>
         <Example>'laby','my laby'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>Minimum and maximum of the x axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Default value is [init n]</LongDesc>
         <Example>'xlimx',[0 1]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>Minimum and maximum of the y axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Default value for ylimy(1)=max(min(score_test),-20).
Default value for ylimy(2)=min(max(score_test),20).</LongDesc>
         <Example>'ylimx',[0 1]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwd</Name>
         <ShortDesc>linewidth of the curves which contain the score test.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Default line width=2.</LongDesc>
         <Example>'lwd',5</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>width of the lines associated with the envelopes.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Default is lwdenv=1.</LongDesc>
         <Example>'lwdenv',5</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>font size of the labels of the axes.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Default value is 12.</LongDesc>
         <Example>'FontSize',20</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>Scalar which controls the size of the numbers of the axes.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Default value is 10.</LongDesc>
         <Example>'SizeAxesNum',12</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Level of output to display.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>scalar which controls whether to display or not messages on the screen. Scalar.
If msg==1 (default) messages are displayed on the screen about estimated time to compute the LMS (LTS) for each value of lamabda else no message is displayed on the screen</LongDesc>
         <Example>'msg',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>handle of the plot which is about to be created.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>The default is to use tag 'pl_fan'. Notice that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created</LongDesc>
         <Example>'tag','mytag'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>Score</Value>
               <Description>(n-init) x length(la)+1 matrix containing the values of the score test for each value of the transformation parameter:
1st col = fwd search index;
2nd col = value of the score test in each step of the fwd search for la(1);
...........
end col = value of the score test in each step of the fwd search for la(end).</Description>
            </ItemCell>
            <ItemCell>
               <Value>Scorep</Value>
               <Description>(n-init) x length(la)+1 matrix containing the values of the score test for positive observations for each value of the transformation parameter.
1st col = fwd search index;
2nd col = value of the (positive) score test in each step of the fwd search for la(1);
...........
end col = value of the (positive) score test in each step of the fwd search for la(end).
Note that this output is present only if input option family is 'YJpn'</Description>
            </ItemCell>
            <ItemCell>
               <Value>Scoren</Value>
               <Description>(n-init) x length(la)+1 matrix containing the values of the score test for positive observations for each value of the transformation parameter:
1st col = fwd search index;
2nd col = value of the (negative) score test in each step of the fwd search for la(1);
...........
end col = value of the (negative) score test in each step of the fwd search for la(end).
Note that this output is present only if input option family is 'YJpn'</Description>
            </ItemCell>
            <ItemCell>
               <Value>la</Value>
               <Description>vector containing the values of lambda for which fan plot is constructed</Description>
            </ItemCell>
            <ItemCell>
               <Value>bs</Value>
               <Description>matrix of size p x length(la) containing the units forming the initial subset for each value of lambda</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>cell of size length(la).
out.Un{i} is a n-init) x 11 matrix which contains the unit(s) included in the subset at each step in the search associated with la(i).
REMARK: in every step the new subset is compared with the old subset. Un contains the unit(s) present in the new subset but not in the old one Un(1,:) for example contains the unit included in step init+1 ... Un(end,2) contains the units included in the final step of the search</Description>
            </ItemCell>
            <ItemCell>
               <Value>y</Value>
               <Description>A vector with n elements that contains the response variable which has been used</Description>
            </ItemCell>
            <ItemCell>
               <Value>X</Value>
               <Description>Data matrix of explanatory variables which has been used (it also contains the column of ones if input option intercept was missing or equal to 1)</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson and Riani (2000), Robust Diagnostic Regression Analysis, Springer Verlag, New York.</Item>
      <Item>Atkinson, A.C. and Riani, M. (2002a). Tests in the fan plot for robust, diagnostic transformations in regression, Chemometrics and Intelligent Laboratory Systems, Vol. 60, pp. 87-100.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>Score</Item>
      <Item>ScoreYJ</Item>
      <Item>ScoreYJpn</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>FSRfan with all default options.</Title>
         <Desc>
            <ItemCell>Store values of the score test statistic for the five most common values of $\lambda$.</ItemCell>
            <ItemCell>Produce also a fan plot and display it on the screen.</ItemCell>
            <ItemCell>Common part to all examples: load wool dataset.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>XX=load('wool.txt');</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>% Function FSRfan stores the score test statistic.</ItemCell>
            <ItemCell>% In this case we use the five most common values of lambda are considered</ItemCell>
            <ItemCell>[out]=FSRfan(y,X);</ItemCell>
            <ItemCell>fanplot(out);</ItemCell>
            <ItemCell>%The fan plot shows the log transformation is diffused throughout the data and does not depend on the presence of particular observations.</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>FSRfan with optional arguments.</Title>
         <Desc>
            <ItemCell>Produce a personalized fan plot with required font sizes for labels and axes.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>[out]=FSRfan(y,X,'plots',1,'FontSize',16,'SizeAxesNum',16);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example specifying $\lambda$.</Title>
         <Desc>
            <ItemCell>Produce a fan plot for each value of $\lambda$ inside vector la.</ItemCell>
            <ItemCell>Extract in matrix Un the units which entered the search in each step</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>la=[-1 -0.5 0 0.5];</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la,'plots',1);</ItemCell>
            <ItemCell>Unsel=cell2mat(out.Un);</ItemCell>
            <ItemCell>lla=length(la);</ItemCell>
            <ItemCell>nr=size(Unsel,1)/lla;</ItemCell>
            <ItemCell>Un=[Unsel(1:nr,1) reshape(Unsel(:,2),nr,lla)];</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example specifying the confidence level and the initial starting point for monitoring.</Title>
         <Desc>
            <ItemCell>Construct fan plot specifying the confidence level and the initial starting point for monitoring.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>[out]=FSRfan(y,X,'init',size(X,2)+2,'nsamp',0,'conflev',0.95,'plots',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example with starting point based on LTS.</Title>
         <Desc>
            <ItemCell>Extraction of all subsamples, construct fan plot specifying the confidence level and the initial starting point for monitoring based on p+2 observations strong line width for lines associated with the confidence bands.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>[out]=FSRfan(y,X,'init',size(X,2)+2,'nsamp',0,'lms',0,'lwdenv',3,'plots',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Fan plot using fidelity cards data.</Title>
         <Desc>
            <ItemCell>In the example, la is the vector contanining the most common values of the transformation parameter.</ItemCell>
            <ItemCell>Store the score test statistics for the specified values of lambda and automatically produce the fan plot</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>XX=load('loyalty.txt');</ItemCell>
            <ItemCell>namey='Sales'</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>nameX={'Number of visits', 'Age', 'Number of persons in the family'};</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>% la = vector contanining the most common values of the transformation</ItemCell>
            <ItemCell>% parameter</ItemCell>
            <ItemCell>la=[0 1/3 0.4 0.5];</ItemCell>
            <ItemCell>% Store the score test statistics for the specified values of lambda</ItemCell>
            <ItemCell>% and automatically produce the fan plot</ItemCell>
            <ItemCell>[out]=FSRfan(y,X,'la',la,'init',size(X,2)+2,'plots',1,'lwd',3);</ItemCell>
            <ItemCell>% The fan plot shows the even if the third root is the best value of the</ItemCell>
            <ItemCell>% transformation parameter at the end of the search in earlier steps it</ItemCell>
            <ItemCell>% lies very close to the upper rejection region. The best value of the</ItemCell>
            <ItemCell>% transformation parameter seems to be the one associated with l=0.4</ItemCell>
            <ItemCell>% which is always the confidence bands but at the end of search, due to</ItemCell>
            <ItemCell>% the presence of particular observations it goes below the lower</ItemCell>
            <ItemCell>% rejection line.</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Compare BoxCox with Yeo and Johnson transformation.</Title>
         <Desc>
            <ItemCell>Store values of the score test statistic for the five most common values of $\lambda$.</ItemCell>
            <ItemCell>Produce also a fan plot and display it on the screen.</ItemCell>
            <ItemCell>Common part to all examples: load wool dataset.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>XX=load('wool.txt');</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>% Store the score test statistic using Box Cox transformation.</ItemCell>
            <ItemCell>[outBC]=FSRfan(y,X,'nsamp',0);</ItemCell>
            <ItemCell>% Store the score test statistic using Yeo and Johnson transformation.</ItemCell>
            <ItemCell>[outYJ]=FSRfan(y,X,'family','YJ','nsamp',0);</ItemCell>
            <ItemCell>fanplot(outBC,'titl','Box Cox');</ItemCell>
            <ItemCell>fanplot(outYJ,'titl','Yeo and Johnson','tag','YJ');</ItemCell>
            <ItemCell>disp('Maximum difference in absolute value')</ItemCell>
            <ItemCell>disp(max(max(abs(outYJ.Score-outBC.Score))))</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example of monitoring of score test for positive and negative obseravations.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>rng('default')</ItemCell>
            <ItemCell>rng(10)</ItemCell>
            <ItemCell>close all</ItemCell>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>X=randn(n,3);</ItemCell>
            <ItemCell>beta=[ 1; 1; 1];</ItemCell>
            <ItemCell>sig=0.5;</ItemCell>
            <ItemCell>y=X*beta+sig*randn(n,1);</ItemCell>
            <ItemCell>disp('Fit in the true scale')</ItemCell>
            <ItemCell>disp('R2 of the model in the true scale')</ItemCell>
            <ItemCell>if verLessThanFS(8.1)</ItemCell>
            <ItemCell>    out=regstats(y,X,'linear',{'rsquare'});</ItemCell>
            <ItemCell>    disp(out.rsquare)</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    outlmori=fitlm(X,y);</ItemCell>
            <ItemCell>    disp(outlmori.Rsquared.Ordinary)</ItemCell>
            <ItemCell>end</ItemCell>
            <ItemCell>[~,~,BigAx]=yXplot(y,X,'tag','ori');</ItemCell>
            <ItemCell>title(BigAx,'Data in the original scale')</ItemCell>
            <ItemCell>% Find the data to transform</ItemCell>
            <ItemCell>la=-0.25;</ItemCell>
            <ItemCell>ytra=normYJ(y,[],la,'inverse',true);</ItemCell>
            <ItemCell>if any(isnan(ytra))</ItemCell>
            <ItemCell>    disp('response with missing values')</ItemCell>
            <ItemCell>end</ItemCell>
            <ItemCell>disp('Fit in the transformed scale')</ItemCell>
            <ItemCell>disp('R2 of the model in the wrong (inverse) scale')</ItemCell>
            <ItemCell>if verLessThanFS(8.1)</ItemCell>
            <ItemCell>    out=regstats(ytra,X,'linear',{'rsquare'});</ItemCell>
            <ItemCell>    disp(out.rsquare)</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    outlmtra=fitlm(X,ytra);</ItemCell>
            <ItemCell>    disp(outlmtra.Rsquared.Ordinary)</ItemCell>
            <ItemCell>end</ItemCell>
            <ItemCell>[~,~,BigAx]=yXplot(ytra,X,'tag','tra','namey','Data to transform (zoom of y [0 500])','ylimy',[0 500]);</ItemCell>
            <ItemCell>title(BigAx,'Data in the inverse scale')</ItemCell>
            <ItemCell>la=[ -0.5 -0.25 0];</ItemCell>
            <ItemCell>out=FSRfan(ytra,X,'la',la,'family','YJpn','plots',1,'init',round(n/2),'msg',0);</ItemCell>
            <ItemCell>title('Extended fan plot')</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>