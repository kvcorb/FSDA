<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->bwe</Title>
   <Purpose><!--This is the second line of the .m file-->bwe estimates the bandwidth smoothing parameter for kernel density estimation.
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>X</Name>
         <ShortDesc>Input data.</ShortDesc>
         <TypeInd>Vector or matrix.</TypeInd>
         <LongDesc>The data to be smoothed by kernel density estimation.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>bwopt</Name>
         <ShortDesc>Estimation method.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>Default is Scott's rule.
Other options are:
- 'normal', the normal reference rule, applied only for d=1. It is valid if the underlying density being estimated is Gaussian.
- 'robust', is the normal reference rule, applicable in presence of outliers, again for d=1.
Data Types - char</LongDesc>
         <Example>&lt;code&gt;&lt;/code&gt;</Example>
         <DataType>char&#xD;
                Example - 'method','robust'</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>bw</Name>
         <ShortDesc>Vector or Scalar</ShortDesc>
         <TypeInd>bandwidth estimate.</TypeInd>
         <LongDesc>It is a scalar if the data is uni-dimensional, otherwise is a vector with a bandwidth value for each dimension.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Bowman A.W. and Azzalini A. (1997), "Applied Smoothing Techniques for Data Analysis," Oxford University Press.</Item>
      <Item>Silverman, B.W. (1998). Density Estimation for Statistics and Data Analysis. London: Chapman &amp; Hall/CRC. p. 48. ISBN 0-412-24620-1.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>ksdensity</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Bandwidth and kernel density estimates for a univariate normal sample.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell/>
            <ItemCell>% the normal probability density function</ItemCell>
            <ItemCell>npdf = @(x) (exp(-0.5*x.^2)/sqrt(2*pi));</ItemCell>
            <ItemCell>% normal kernel density</ItemCell>
            <ItemCell>nkde = @(x,unidata,h) mean(npdf((x-unidata)/h)/h); % kernel density</ItemCell>
            <ItemCell>% a univariate normal sample</ItemCell>
            <ItemCell>unidata = randn(200,1);</ItemCell>
            <ItemCell>% bandwidth estimation</ItemCell>
            <ItemCell>h = bwe(unidata);</ItemCell>
            <ItemCell>% plot of kernel density with estimated bandwidth</ItemCell>
            <ItemCell>warning('off');</ItemCell>
            <ItemCell>fplot(@(x) nkde(x,unidata,h),[-10,10],'r')</ItemCell>
            <ItemCell>% plot of the true density</ItemCell>
            <ItemCell>hold on</ItemCell>
            <ItemCell>fplot(@(x) (npdf(x)) ,[-10,10],'k')</ItemCell>
            <ItemCell>% plot of the data</ItemCell>
            <ItemCell>plot(unidata,npdf(unidata),'xb')</ItemCell>
            <ItemCell>warning('on');</ItemCell>
            <ItemCell>axis manual;</ItemCell>
            <ItemCell>title(['estimated bandwidth: ' num2str(h) ]);</ItemCell>
            <ItemCell>legend('estimated density','true density','data');</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Bandwidth and kernel density estimates for a univariate mixture of two normals.</Title>
         <Desc>
            <ItemCell>The smoothing is shown for various bandwidth values.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>% the normal probability density function</ItemCell>
            <ItemCell>npdf = @(x) (exp(-0.5*x.^2)/sqrt(2*pi));</ItemCell>
            <ItemCell>% normal kernel density</ItemCell>
            <ItemCell>nkde = @(x,unidata,h) mean(npdf((x-unidata)/h)/h); % kernel density</ItemCell>
            <ItemCell>% mixture of two univariate normal samples</ItemCell>
            <ItemCell>unidata = [randn(100,1)-5 ; randn(100,1)+5];</ItemCell>
            <ItemCell>i=0;</ItemCell>
            <ItemCell>for smfact = 1:3:7</ItemCell>
            <ItemCell>    i=i+1;</ItemCell>
            <ItemCell>    % bandwidth estimation</ItemCell>
            <ItemCell>    h = bwe(unidata) / smfact;</ItemCell>
            <ItemCell>    subplot(3,1,i);</ItemCell>
            <ItemCell>    % plot of kernel density with estimated bandwidth</ItemCell>
            <ItemCell>    warning('off');</ItemCell>
            <ItemCell>    fplot(@(x) nkde(x,unidata,h),[-10,10],'r')</ItemCell>
            <ItemCell>    % plot of the true density</ItemCell>
            <ItemCell>    hold on;</ItemCell>
            <ItemCell>    fplot(@(x) (npdf(x-5) + npdf(x+5)),[-10,10],'k')</ItemCell>
            <ItemCell>    % plot of the data</ItemCell>
            <ItemCell>    plot(unidata,(npdf(unidata-5) + npdf(unidata+5)),'xb')</ItemCell>
            <ItemCell>    warning('on');</ItemCell>
            <ItemCell>    if i == 1</ItemCell>
            <ItemCell>        xlabel(['bw0 = ' num2str(h) ' (estimated from the data)' ]);</ItemCell>
            <ItemCell>    else</ItemCell>
            <ItemCell>        xlabel(['bw0 / ' num2str(i) ' = ' num2str(h) ]);</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Bandwidth and kernel density estimates for a bivariate dataset.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load fishery;</ItemCell>
            <ItemCell>X = fishery.data;</ItemCell>
            <ItemCell>X = X+10^(-8)*abs(randn(677,2)); % some jittering to avoid dplicate points</ItemCell>
            <ItemCell>h = bwe(X)</ItemCell>
            <ItemCell>h = bwe(X,'scott')</ItemCell>
            <ItemCell>h = bwe(X,'normal')</ItemCell>
            <ItemCell>h = bwe(X,'robust')</ItemCell>
            <ItemCell>%h = bwe(X,'sj')</ItemCell>
            <ItemCell>%h = bwe(X,'botev')</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>