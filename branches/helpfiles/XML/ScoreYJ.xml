<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->ScoreYJ</Title>
   <Purpose><!--This is the second line of the .m file-->Computes the score test for Yeo and Johnson transformation
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>y</Name>
         <ShortDesc>Response variable.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>A vector with n elements that contains the response variable. It can be either a row or a column vector.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>X</Name>
         <ShortDesc>Predictor variables.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>Data matrix of explanatory variables (also called 'regressors') of dimension (n x p-1). Rows of X represent observations, and columns represent variables.
Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>intercept</Name>
         <ShortDesc>Indicator for constant term.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If 1, a model with constant term will be fitted (default), else no constant term will be included.</LongDesc>
         <Example>'intercept',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>la</Name>
         <ShortDesc>transformation parameter.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>It specifies for which values of the transformation parameter it is necessary to compute the score test.
Default value of lambda is la=[-1 -0.5 0 0.5 1]; that is the five most common values of lambda</LongDesc>
         <Example>'la',[0 0.5]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>Lik</Name>
         <ShortDesc>likelihood for the augmented model.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If 1 the value of the likelihood for the augmented model will be produced else (default) only the value of the score test will be given</LongDesc>
         <Example>'Lik',0</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on matrix y and matrix X. Notice that y and X are left unchanged. In other words the additional column of ones for the intercept is not added. As default nocheck=0.</LongDesc>
         <Example>'nocheck',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>outSC</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>Score</Value>
               <Description>score test. Scalar. t test for additional constructed variable</Description>
            </ItemCell>
            <ItemCell>
               <Value>Lik</Value>
               <Description>value of the likelihood. Scalar. This output is produced just if input value Lik =1</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Yeo, In-Kwon and Johnson, Richard (2000). A new family of power transformations to improve normality or symmetry. Biometrika, 87, 954-959.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION--></SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Score with all default options for the wool data.</Title>
         <Desc>
            <ItemCell>Load the wool data.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>XX=load('wool.txt');</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>% Score test using the five most common values of lambda</ItemCell>
            <ItemCell>[outSc]=ScoreYJ(y,X);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Score with optional arguments.</Title>
         <Desc>
            <ItemCell>Loyalty cards data.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>% la = vector containing the values of the transformation</ItemCell>
            <ItemCell>% parameters which have to be tested</ItemCell>
            <ItemCell>la=[0.25 1/3 0.4 0.5];</ItemCell>
            <ItemCell>[outSc]=ScoreYJ(y,X,'la',la,'intercept',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Compare Score test using BoxCox and YeoJohnson for the wool data.</Title>
         <Desc>
            <ItemCell>Wool data.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>XX=load('wool.txt');</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>% Define vector of transformation parameters</ItemCell>
            <ItemCell>la=[-1:0.01:1];</ItemCell>
            <ItemCell>% Score test using YeoJohnson transformation</ItemCell>
            <ItemCell>[outYJ]=ScoreYJ(y,X,'la',la);</ItemCell>
            <ItemCell>% Score test using YeoJohnson transformation</ItemCell>
            <ItemCell>[outBC]=Score(y,X,'la',la);</ItemCell>
            <ItemCell>plot(la',[outBC.Score outYJ.Score])</ItemCell>
            <ItemCell>xlabel('\lambda')</ItemCell>
            <ItemCell>ylabel('Value of the score test')</ItemCell>
            <ItemCell>legend({'BoxCox' 'YeoJohnson'})</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Score test using Darwin data given by Yeo and Yohnson.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell> y=[6.1, -8.4, 1.0, 2.0, 0.7, 2.9, 3.5, 5.1, 1.8, 3.6, 7.0, 3.0, 9.3, 7.5 -6.0]';</ItemCell>
            <ItemCell> n=length(y);</ItemCell>
            <ItemCell> X=ones(n,1);</ItemCell>
            <ItemCell> la=-1:0.01:2.5;</ItemCell>
            <ItemCell> % Given that there are no explanatory variables the test must be</ItemCell>
            <ItemCell> % called with intercept 0</ItemCell>
            <ItemCell> out=ScoreYJ(y,X,'intercept',0,'la',la,'Lik',1);</ItemCell>
            <ItemCell> plot(la',out.Score)</ItemCell>
            <ItemCell> xax=axis;</ItemCell>
            <ItemCell> line(xax(1:2),zeros(1,2))</ItemCell>
            <ItemCell> xlabel('lambda')</ItemCell>
            <ItemCell> ylabel('Value of the score test')</ItemCell>
            <ItemCell> title('Value of the score test is 0 in correspondence of $\hat \lambda =1.305$','Interpreter','Latex')</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>