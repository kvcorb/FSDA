<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->mdrplot</Title>
   <Purpose><!--This is the second line of the .m file-->mdrplot plots the trajectory of minimum deletion residual (mdr)
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Structure containing monitoring of mdr.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure containing the following fields.
out.mdr = minimum deletion residual. A matrix containing the monitoring of minimum deletion residual in each step of the forward search. The first column of mdr must contain the fwd search index This matrix can be created using function FSReda (compulsory argument) out.Un = order of entry of each unit. Matrix containing the order of entry of each unit (necessary if datatooltip is true or databrush is not empty) out.y = response. Vector containing the response (necessary only if option databrush is not empty) out.X = Regressors. A matrix containing the explanatory variables (necessary only if option databrush is not empty) out.Bols = Monitoring of beta coefficients. (n-init+1) x (p+1) matrix containing the monitoring of estimated beta coefficients in each step of the forward search (necessary only if option databrush is not empty and suboption multivarfit is not empty)</LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>mdr</Value>
               <Description>minimum deletion residual. A matrix containing the monitoring of minimum deletion&#xD;
               residual in each step of the forward search. The first&#xD;
               column of mdr must contain the fwd search index&#xD;
               This matrix can be created using function FSReda&#xD;
               (compulsory argument)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>order of entry of each unit. Matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true or databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>y</Value>
               <Description>response. Vector containing the response (necessary only if&#xD;
               option databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>X</Value>
               <Description>Regressors. A matrix containing the explanatory variables&#xD;
               (necessary only if option databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Bols</Value>
               <Description>Monitoring of beta coefficients. (n-init+1) x (p+1) matrix containing the monitoring of&#xD;
               estimated beta coefficients in each step of the forward search&#xD;
               (necessary only if option databrush is not empty and&#xD;
               suboption multivarfit is not empty)</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>quant</Name>
         <ShortDesc>Quantiles for which envelopes have to be computed.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>The default is to produce 1%, 50% and 99% envelopes. In other words the default is quant=[0.01;0.5;0.99];</LongDesc>
         <Example>'quant',[0.05;0.5;0.95]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>sign</Name>
         <ShortDesc>mdr with sign.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If it is equal 1 (default) we distinguish steps for which minimum deletion residual was associated with positive or negative value of the residual. Steps associated with positive values of mdr are plotted in black, while other steps are plotted in red</LongDesc>
         <Example>'sign',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>mplus1</Name>
         <ShortDesc>plot of (m+1)th order statistic.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar, which specifies if it is necessary to plot the curve associated with (m+1)th order statistic</LongDesc>
         <Example>'mplus1',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>envm</Name>
         <ShortDesc>sample size for drawing enevlopes.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which specifies the size of the sample which is used to superimpose the envelope. The default is to add an envelope based on all the observations (size n envelope).</LongDesc>
         <Example>'envm',100</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>min and max for x axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>vector with two elements controlling minimum and maximum on the x axis. Default value is mdr(1,1)-3 and mdr(end,1)*1.3</LongDesc>
         <Example>'xlimx',[20 100]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>min and max for x axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and maximum on the y axis. Default value is min(mdr(:,2)) and max(mdr(:,2));</LongDesc>
         <Example>'ylimy',[2 6]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>Line width.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the width of the lines associated with the envelopes. Default is lwdenv=1</LongDesc>
         <Example>'lwdenv',2</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>plot handle.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String which identifies the handle of the plot which is about to be created. The default is to use tag 'pl_mdr'. Notice that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created</LongDesc>
         <Example>'tag','mymdr'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>interactive clicking.</ShortDesc>
         <TypeInd>Empty value (default) or structure.</TypeInd>
         <LongDesc>If datatooltip is not empty the user can use the mouse in order to have information about the unit selected, the step in which the unit enters the search and the associated label. If datatooltip is a structure, it is possible to control the aspect of the data cursor (see function datacursormode for more details or the examples below). The default options of the structure are DisplayStyle='Window' and SnapToDataVertex='on'</LongDesc>
         <Example>'datatooltip',''</Example>
         <DataType>empty value, numeric or structure</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>label</Name>
         <ShortDesc>row labels.</ShortDesc>
         <TypeInd>Cell of strings.</TypeInd>
         <LongDesc>Cell containing the labels of the units (optional argument used when datatooltip=1. If this field is not present labels row1, ..., rown will be automatically created and included in the pop up datatooltip window)</LongDesc>
         <Example>'label',{'Smith','Johnson','Robert','Stallone'}</Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>interactive mouse brushing.</ShortDesc>
         <TypeInd>Empty value (default), scalar or structure.</TypeInd>
         <LongDesc>DATABRUSH IS AN EMPTY VALUE.
If databrush is an empty value (default), no brushing is done. The activation of this option (databrush is a scalar or a structure) enables the user to select a set of trajectories in the current plot and to see them highlighted in the y|X plot (notice that if the plot y|X does not exist it is automatically created). In addition, brushed units can be highlighted in the monitoring residual plot The window style of the other figures is set equal to that which contains the monitoring residual plot. In other words, if the monitoring residual plot is docked all the other figures will be docked too.
DATABRUSH IS A SCALAR.
If databrush is a scalar the default selection tool is a rectangular brush and it is possible to brush only once (that is persist='').
DATABRUSH IS A STRUCTURE.
If databrush is a structure, it is possible to use all optional arguments of function selectdataFS.m and the following optional argument:
persist. Persist is an empty value or a scalar containing the strings 'on' or 'off' If persist = 'on' or 'off' brusing can be done as many time as the user requires. If persist='on' then the unit(s) currently brushed are added to those previously brushed. If persist='off' every time a new brush is performed units previously brushed are removed. The default value of persist is '' that is brushing is allowed only once. If persist is 'on' it is possible, every time a new brushing is done, to use a different color for the brushed units bivarfit. This option is to add one or more least square lines to the plots of y|X, depending on the selected groups. bivarfit = '' is the default: no line is fitted.
bivarfit = '1' fits a single ols line to all points of each bivariate plot in the scatter matrix y|X.
bivarfit = '2' fits two ols lines: one to all points and another to the last selected group. This is useful when there are only two groups, of which one refers to a set of potential outliers.
bivarfit = '0' fits one ols line for each selected group. This is useful for the purpose of fitting mixtures of regression lines.
bivarfit = 'i1' or 'i2' or 'i3' etc.
fits a ols line to a specific group, the one with index 'i' equal to 1, 2, 3 etc.
multivarfit. If this option is '1', we add to each scatter plot of y|X a line based on the fitted hyperplane coefficients. The line added to the scatter plot y|Xi is mean(y)+Ci*Xi, being Ci the coefficient of Xi. The default value of multivarfit is '', i.e. no line is added.
labeladd. If this option is '1', we label the units of the last selected group with the unit row index in matrices X and y. The default value is labeladd='', i.e. no label is added.</LongDesc>
         <Example>'databrush',1</Example>
         <DataType>single | double | struct</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>Size of axes labels.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the fontsize of the labels of the axes. Default value is 12</LongDesc>
         <Example>'FontSize',14</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>Size of axes numbers.</ShortDesc>
         <TypeInd>Scalar which controls the fontsize of the numbers of the axes.</TypeInd>
         <LongDesc>Default value is 10</LongDesc>
         <Example>'SizeAxesNum',14</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nameX</Name>
         <ShortDesc>Regressors names.</ShortDesc>
         <TypeInd>Cell array of strings.</TypeInd>
         <LongDesc>Cell array of strings of length p containing the labels of the varibles of the regression dataset. If it is empty (default) the sequence X1, ..., Xp will be created automatically</LongDesc>
         <Example>'nameX',{'Age','Income','Married','Profession'}</Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>namey</Name>
         <ShortDesc>response label.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>Character containing the label of the response</LongDesc>
         <Example>'namey','response label'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwd</Name>
         <ShortDesc>Curves line width.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls linewidth of the curve which contains the monitoring of minimum deletion residual.
Default line width=2</LongDesc>
         <Example>'lwd',3</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>titl</Name>
         <ShortDesc>main title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>A label for the title (default: '')</LongDesc>
         <Example>'namey','Plot title'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>x axis title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>A label for the x-axis (default: 'Subset size m')</LongDesc>
         <Example>'labx','Subset size m'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>y axis title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>A label for the y-axis (default: 'Minimum deletion residual')</LongDesc>
         <Example>'laby','mdr'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson and Riani (2000), Robust Diagnostic Regression Analysis, Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>resfwdplot</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Example of the use of function mdrplot with all the default options.</Title>
         <Desc>
            <ItemCell>Steps common to all the examples</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load('loyalty.txt','loyalty');</ItemCell>
            <ItemCell>y=loyalty(:,4);</ItemCell>
            <ItemCell>X=loyalty(:,1:3);</ItemCell>
            <ItemCell>[outLXS]=LXS(y,X,'nsamp',1000);</ItemCell>
            <ItemCell>[out]=FSReda(y,X,outLXS.bs);</ItemCell>
            <ItemCell>mdrplot(out);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of function mdrplot with personalized envelopes.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>mdrplot(out,'quant',[0.99;0.9999]);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>datatooltip passed as scalar.</Title>
         <Desc>
            <ItemCell>Example of the use of function mdrplot with datatooltip passed as scalar (that is using default options for datacursor (i.e.</ItemCell>
            <ItemCell>DisplayStyle =window)</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell> mdrplot(out,'datatooltip',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Datatooltip passed as structure.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>clear tooltip</ItemCell>
            <ItemCell>tooltip.SnapToDataVertex='on'</ItemCell>
            <ItemCell>tooltip.DisplayStyle='datatip'</ItemCell>
            <ItemCell>mdrplot(out,'datatooltip',tooltip);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Use of option sign.</Title>
         <Desc>
            <ItemCell>Example of the information which can be extracted from option sign=1 (default). If the data come from a distribution which has positive asymmetry generally the last part of the search is associated with positive values of the minimum residual among the units belonging to subset The example below shows that the last 60 steps of the curve are associated with a black curve (positive value of mdr)</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>state = 137; state1=4567;</ItemCell>
            <ItemCell>rand('state', state);</ItemCell>
            <ItemCell>randn('state', state1);</ItemCell>
            <ItemCell>X=randn(200,3);</ItemCell>
            <ItemCell>y=chi2rnd(8,200,1);</ItemCell>
            <ItemCell>[outLXS]=LXS(y,X,'nsamp',1000);</ItemCell>
            <ItemCell>[out]=FSReda(y,X,outLXS.bs);</ItemCell>
            <ItemCell>mdrplot(out,'sign',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option envm.</Title>
         <Desc>
            <ItemCell>In this case the resuperimposed envelope is based on n-2 observations</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>drplot(out,'envm',length(out.y)-2);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt; Input option databrush passed as scalar.</Title>
         <Desc>
            <ItemCell>Example of the use of function mdrplot with databrush</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell> mdrplot(out,'databrush',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt; Input option databrush passed as structure.</Title>
         <Desc>
            <ItemCell>Example where databrush is a structure</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.selectionmode='Lasso'</ItemCell>
            <ItemCell> mdrplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt; Input option databrush passed as structure and brush mode.</Title>
         <Desc>
            <ItemCell>Example of the use of brush using brush mode</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.selectionmode='Brush'</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>mdrplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt; Persistent cumulative brush 1.</Title>
         <Desc>
            <ItemCell>Example of the use of persistent non cumulative brush. Every time a brushing action is performed previous highlightments are removed</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.persist='off'</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>mdrplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt; Persistent cumulative brush 2.</Title>
         <Desc>
            <ItemCell>Example of the use of persistent cumulative brush. Every time a brushing action is performed current highlightments are added to previous highlightments</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.selectionmode='Rect'</ItemCell>
            <ItemCell>mdrplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>