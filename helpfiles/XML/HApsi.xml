<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->HApsi</Title>
   <Purpose><!--This is the second line of the .m file-->HApsi computes psi function  using Hampel proposal</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>u</Name>
         <ShortDesc>scaled residuals or Mahalanobis distances</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>n x 1&#xD;
               vector containing residuals or Mahalanobis distances&#xD;
               for the n units of the sample</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ctuning</Name>
         <ShortDesc>tuning parameters</ShortDesc>
         <TypeInd>Scalar or Vector</TypeInd>
         <LongDesc>Scalar or vector of length 4 which specifies the value of the tuning&#xD;
                constant c (scalar greater than 0 which controls the&#xD;
                robustness/efficiency of the estimator)&#xD;
                and the prefixed values of paramters a, b, c&#xD;
                ctuning(1) = tuning constant which will multiply&#xD;
                parameters a, b and c of Hampel rho (psi) function&#xD;
                ctuning(2) = paramter a of Hampel rho (psi) function&#xD;
                ctuning(3) = paramter b of Hampel rho (psi) function&#xD;
                ctuning(4) = paramter c of Hampel rho (psi) function&#xD;
                Remark: if length(ctuning)==1 values of a, b and c will be&#xD;
                set to a=2*ctuning b=4*ctuning c=4*ctuning &#xD;
                With these choices, if ctuning=1  the&#xD;
                resulting influence function is nearly identical to the&#xD;
                biweight with parameter 8.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>psiHA</Name>
         <ShortDesc>n x 1 vector </ShortDesc>
         <TypeInd>Values of Hampel psi&#xD;
                function associated to the residuals or Mahalanobis&#xD;
                distances for the n units of the sample.</TypeInd>
         <LongDesc> </LongDesc>
         <Struct> </Struct>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->
 Function HApsi transforms vector u as follows.&#xD;
 \[&#xD;
  HApsi(u)  = \left\{   &#xD;
  \begin{array}{cc}&#xD;
    u &amp; |u| \leq a                                       \\&#xD;
    a \times \mbox{sign} (u) &amp; a \leq |u| &amp;lt; b                    \\&#xD;
    a \frac{c-|u|}{c-b} \times \mbox{sign} (u) &amp; b \leq |u| &amp;lt;  c \\&#xD;
    0 &amp; |u| &amp;gt;= c &#xD;
  \end{array} \right.&#xD;
 \]&#xD;
&#xD;
             where $a$= ctun *ctuning(2).&#xD;
                   $b$= ctun *ctuning(3).&#xD;
                   $c$= ctun *ctuning(4).&#xD;
&#xD;
             The default is&#xD;
                   $a$= 2*ctun. &#xD;
                   $b$= 4*ctun. &#xD;
                   $c$= 8*ctun. &#xD;
&#xD;
	It is necessary to have 0 &amp;lt;= a &amp;lt;= b &amp;lt;= c&#xD;
&#xD;
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>D. C. Hoaglin, F. Mosteller, J. W. Tukey (1982), Understanding Robust and&#xD;
 Exploratory Data Analysis Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>TBpsi</Item>
      <Item>HYPpsi</Item>
      <Item>OPTpsi</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Obtain bottom panel of Figure 11.10 p.</Title>
         <Desc> </Desc>
         <MATLABcode>
&#xD;
    % Obtain bottom panel of Figure 11.10 p. 375 of&#xD;
    % Hoaglin et al. (1987).&#xD;
    close all&#xD;
    x=-9:0.1:9;&#xD;
    psiHA=HApsi(x,1);&#xD;
    plot(x,psiHA,'LineWidth',2)&#xD;
    xlabel('$u$','Interpreter','Latex','FontSize',14)&#xD;
    ylabel(' Hampel $\psi(u,[2,4,8]) $','Interpreter','Latex')&#xD;
    a=2;&#xD;
    b=4;&#xD;
    c=8;&#xD;
    hold('on')&#xD;
    stem(a,a,'LineWidth',1,'LineStyle',':')&#xD;
    stem(b,a,'LineWidth',1,'LineStyle',':')&#xD;
    stem(-a,-a,'LineWidth',1,'LineStyle',':')&#xD;
    stem(-b,-a,'LineWidth',1,'LineStyle',':')&#xD;
    ax=axis;&#xD;
    ylim([ax(3)-0.1 ax(4)+0.1])&#xD;
    text([a;-a],[-0.1;0.1],{'$a$';'$-a$'},'Interpreter','latex','FontSize',14)&#xD;
    text([b;-b],[-0.1;0.1],{'$b$';'$-b$'},'Interpreter','latex','FontSize',14)&#xD;
    text([c;-c],[-0.1;0.1],{'$c$';'$-c$'},'Interpreter','latex','FontSize',14)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>