<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->tabulateFS</Title>
   <Purpose><!--This is the second line of the .m file-->Create frequency table of unique values of x, excluding possible 0 counts
</Purpose>
   <Description><!--Description section-->tbl = tabulateFS(x) takes a vector x and returns a matrix, tbl. The first column of table contains the unique values of x. The second is the number of instances of each value. The last column contains the percentage of each value. This function differs from MATLAB function tabulate because it excludes 0 counts.
Remark: tabulateFS with no output arguments returns a formatted table in the command window.
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>x</Name>
         <ShortDesc>vector for which frequency table has to be calculated.</ShortDesc>
         <TypeInd>vector of numeric data or categorical variable, character array, or cell array of strings of length n.</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType>double | single| categorical variable | character&#xD;
               array, | cell array of strings</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>tbl</Name>
         <ShortDesc>Matrix of size unique(x)-by-3</ShortDesc>
         <TypeInd>frequency table of data in vector x.</TypeInd>
         <LongDesc>Information in tbl is arranged as follows:
1st column -- The unique values of x;
2nd column -- The number of instances of each value;
3rd column -- The percentage of each value.
If x is a categorical variable, character array, or cell array of strings, tbl is a cell array.
Remark: tabulateFS with no output arguments returns a formatted table in the command window.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION--></References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>tabulate</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Tabulate Fisher iris data.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load fisheriris;</ItemCell>
            <ItemCell>tbl=tabulateFS(species);</ItemCell>
            <ItemCell>disp(tbl)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Explore the difference between tabulate and tabulateFS.</Title>
         <Desc>
            <ItemCell>Run this code to see the output shown in the help file</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>rng('default') % Reinitialize the random number generator to its startup configuration</ItemCell>
            <ItemCell>rng(100)</ItemCell>
            <ItemCell>x=randi([1 10],100,1);</ItemCell>
            <ItemCell>x(100)=30;</ItemCell>
            <ItemCell>% Output of tabulate</ItemCell>
            <ItemCell>disp('Output of MATLAB function tabulate')</ItemCell>
            <ItemCell>disp(tabulate(x));</ItemCell>
            <ItemCell>% Output of tabulateFS</ItemCell>
            <ItemCell>disp('Output of FSDA function tabulateFS')</ItemCell>
            <ItemCell>disp(tabulateFS(x));</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>