<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->SparseTableTest</Title>
   <Purpose><!--This is the second line of the .m file-->SparseTableTest computes independence test for large and sparse contingency tables
</Purpose>
   <Description><!--Description section-->This function implements a new test of indipendence between row variables distribution ('outcomes') and columns ('treatments') which is expecially suited for the analysis of large and sparse $I$-by-$J$ contingency tables. The procedure is based on the collapsing of the original table into a set of 2-by-2 tables for each cell of the original table which has no less than a small number of counts (set in the optional input parameter 'threshold') and testing each of the resulting collapsed tables for independence by any test (Fisher exact test (default), Barnard test or those belonging to the power divergence family of Cressie and Read).
Because of the Bonferroni inequality, a sufficient condition for attaining a significance level $\alpha$ for this test (i.e., the probability of detecting a positive association between two levels of the response variables when in fact there is no such association) is that each test done for each cell of the $I$-by-$J$ table rejects with significance level equal to $\alpha$ divided by the number of comparisons done. An additional bonus of the procedures is that it enables to highlight the most important contribution to the association of each single entry of the original I-by-J-table two way table. The original idea of this test is due to Spyros Arsenis (Joint Research Centre of the European Commission) and has been successfully applied to the analysis of contingency table coming from international trade data.
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>N</Name>
         <ShortDesc>Contingency table (default) or n-by-2 input dataset.</ShortDesc>
         <TypeInd>Matrix or Table.</TypeInd>
         <LongDesc>Matrix or table which contains the input contingency table (say of size I-by-J) or the original data matrix. In this last case N=crosstab(N(:,1),N(:,2)).
By default the procedure assumes that the input is a contingency table.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>threshold</Name>
         <ShortDesc>Threshold to select collapsed contigencey tables.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which specifies above which value collapsed contingency tables have to be produced. The default value of threshold is 2.</LongDesc>
         <Example>'threshold',3</Example>
         <DataType>single | double | int32 | int64</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>alpha</Name>
         <ShortDesc>Significance level.</ShortDesc>
         <TypeInd>Scalar value in the range (0,1).</TypeInd>
         <LongDesc>Significance level of the hypothesis test, specified as the comma-separated pair consisting of 'alpha' and a scalar value in the range (0,1). The default value of alpha is 0.01.</LongDesc>
         <Example>'alpha',0.05</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>testname</Name>
         <ShortDesc>Test to use on collapsed 2-by-2 tables.</ShortDesc>
         <TypeInd>Char or double.</TypeInd>
         <LongDesc>If testname is a number, it identifies the value of $\lambda$ to use of the power divergence family. See function CressieRead.m for further details. If testname is a character, possible values are 'Fisher' (to use the Fisher exact test, see function fishertest) or 'Barnard' (to use Barnard exact test, see function barnardtest). The default value of testname is 1, that is $\chi^2$ test is used. Note also that fishertest has been introduced in MATLAB in release 2014b.</LongDesc>
         <Example>'testname',1</Example>
         <DataType>single | double | char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datamatrix</Name>
         <ShortDesc>Data matrix or contingency table.</ShortDesc>
         <TypeInd>Boolean.</TypeInd>
         <LongDesc>If datamatrix is true the first input argument N is forced to be interpreted as a data matrix, else if the input argument is false N is treated as a contingency table. The default value of datamatrix is false, that is the procedure automatically considers N as a contingency table</LongDesc>
         <Example>'datamatrix',true</Example>
         <DataType>logical</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>TestResults</Value>
               <Description>p-values based on collapsed contingency tables.
I-by-J matrix.
The $(i,j)$-th entry of the TestResults matrix is the p-value of the Fisher exact test based on the collapsed $(i,j)$-th table. If the $(i,j)$-th entry of input matrix UserData is smaller or equal than the input parameter threshold, the test is not performed and the corresponding $(i,j)$-th entry of matrix TestResults is equal to Inf.</Description>
            </ItemCell>
            <ItemCell>
               <Value>RejectedBonf</Value>
               <Description>Results of the tests based on Bonferrroni threshold.
Boolean matrix.
The $(i,j)$-th entry of the RejectedBonf matrix is true if the corresponding test based on the collapsed $(i,j)$-th table is significant. Bonferroni threshold is used.</Description>
            </ItemCell>
            <ItemCell>
               <Value>RejectedSidak</Value>
               <Description>Results of the tests based on Sidak threshold.
Boolean matrix.
The $(i,j)$-th entry of the RejectedSidak matrix is true if the corresponding test based on the collapsed $(i,j)$-th table is significant. Sidak threshold is used.</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->$N$ = $I$-by-$J$-contingency table. The $(i,j)$-th element is equal to $n_{ij}$, $i=1, 2, \ldots, I$ and $j=1, 2, \ldots, J$. The sum of the elements of N is $n$ (the grand total). The sum of the elements of the $i$-th row of the contingency table is denoted with $n_{i.}$ (n_idot in the code). The sum of the elements of the $j$-th column of the contingency table is denoted with $n_{.j}$ (n_dotj in the code).
$P$=$I$-by-$J$-table containing correspondence matrix (proportions). The $(i,j)$-th element is equal to $n_{ij}/n$, $i=1, 2, \ldots, I$ and $j=1, 2, \ldots, J$. The sum of the elements of $P$ is 1.
$P^*$=$I$-by-$J$-table containing correspondence matrix (proportions) under the hypothesis of independence. The $(i,j)$-th element is equal to $p_{ij}^*=p_{i.}p_{.j}$, $i=1, 2, \ldots, I$ and $j=1, 2, \ldots, J$.
The sum of the elements of $P^*$ is 1.
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Arsenin, S., Riani M. (2018), Data mining large contingency tables standard approaches and a new method, submitted</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>fishertest</Item>
      <Item>barnardtest</Item>
      <Item>CressieRead</Item>
      <Item>rcontFS</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>SparseTableTest with all default options.</Title>
         <Desc>
            <ItemCell>For reproducibility</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>rng default;</ItemCell>
            <ItemCell>x1 = unidrnd(3,50,1);</ItemCell>
            <ItemCell>x2 = unidrnd(3,50,1);</ItemCell>
            <ItemCell>% Cross-tabulate x1 and x2.</ItemCell>
            <ItemCell>InputTable = crosstab(x1,x2);</ItemCell>
            <ItemCell>out = SparseTableTest(InputTable);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Cressie and Read test on collapsed contingency table.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>la=2/3;</ItemCell>
            <ItemCell>% Input is a matrix.</ItemCell>
            <ItemCell>% T = Contingency Table for Car Accident Type (rows) by</ItemCell>
            <ItemCell>% Accident Severity (columns)</ItemCell>
            <ItemCell>T=[2365 944 412; 249 585 276];</ItemCell>
            <ItemCell>out=SparseTableTest(T,'testname',la);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Chi-squared test on collapsed contingency table.</Title>
         <Desc>
            <ItemCell>Input is a data matrix and contingency table has to be built</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load smoke</ItemCell>
            <ItemCell>% X = original data matrix</ItemCell>
            <ItemCell>X=smoke.data;</ItemCell>
            <ItemCell>% Chi-squared test is used on collapsed 2-by-2 tables.</ItemCell>
            <ItemCell>% Cells which have a frequency smaller or equal than 15 are ignored.</ItemCell>
            <ItemCell>out=SparseTableTest(X,'datamatrix',true,'threshold',15,'testname',1);</ItemCell>
            <ItemCell>% show the output obtained</ItemCell>
            <ItemCell>RejectedBonf = out.RejectedBonf</ItemCell>
            <ItemCell>RejectedSidak = out.RejectedSidak</ItemCell>
            <ItemCell>TestResults = out.TestResults</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>