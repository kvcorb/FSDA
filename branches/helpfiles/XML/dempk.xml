<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->dempk</Title>
   <Purpose><!--This is the second line of the .m file--> dempk performs a merging of components found by tkmeans
</Purpose>
   <Description><!--Description section-->The function dempk performs either a hierarchical merging of the k components found by tkmeans (using the pairwise overlap values between them and giving g clusters), or if g is a decimal number between 0 and 1 it performs the merging phase according to the threshold g (the same algorithm as overlapmap).
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>Y</Name>
         <ShortDesc>Input data.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>n x v data matrix. n observations and v variables. Rows of Y represent observations, and columns represent variables. Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.</LongDesc>
         <Example> </Example>
         <DataType>single | double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>k</Name>
         <ShortDesc>Number of components searched by tkmeans algorithm.</ShortDesc>
         <TypeInd>Integer scalar.</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType>single | double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>g</Name>
         <ShortDesc>Merging rule.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Number of groups obtained by hierarchical merging, or threshold of the pairwise overlap values (i.e.
omegaStar) if 0&amp;lt;g&amp;lt;1.</LongDesc>
         <Example> </Example>
         <DataType>single | double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>alpha</Name>
         <ShortDesc>Global trimming level.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>alpha is a scalar between 0 and 0.5. If alpha=0 (default) tkmeans reduces to kmeans.</LongDesc>
         <Example>'alpha', 0.05</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen.</ShortDesc>
         <TypeInd>Scalar, char, or struct.</TypeInd>
         <LongDesc>- If plots=0 (default) no plot is produced.
- If plots=1, the components merged are shown using the spmplot function. In particular:
* for v=1, an histogram of the univariate data.
* for v=2, a bivariate scatterplot.
* for v&amp;gt;2, a scatterplot matrix.
When v&amp;gt;=2 plots offers the following additional features (for v=1 the behaviour is forced to be as for plots=1):
- plots='contourf' adds in the background of the bivariate scatterplots a filled contour plot. The colormap of the filled contour is based on grey levels as default.
This argument may also be inserted in a field named 'type' of a structure. In the latter case it is possible to specify the additional field 'cmap', which changes the default colors of the color map used. The field 'cmap' may be a three-column matrix of values in the range [0,1] where each row is an RGB triplet that defines one color.
Check the colormap function for additional informations.
- plots='contour' adds in the background of the bivariate scatterplots a contour plot. The colormap of the contour is based on grey levels as default. This argument may also be inserted in a field named 'type' of a structure.
In the latter case it is possible to specify the additional field 'cmap', which changes the default colors of the color map used. The field 'cmap' may be a three-column matrix of values in the range [0,1] where each row is an RGB triplet that defines one color.
Check the colormap function for additional informations.
- plots='ellipse' superimposes confidence ellipses to each group in the bivariate scatterplots. The size of the ellipse is chi2inv(0.95,2), i.e. the confidence level used by default is 95%. This argument may also be inserted in a field named 'type' of a structure. In the latter case it is possible to specify the additional field 'conflev', which specifies the confidence level to use and it is a value between 0 and 1.
- plots='boxplotb' superimposes on the bivariate scatterplots the bivariate boxplots for each group, using the boxplotb function. This argument may also be inserted in a field named 'type' of a structure.
REMARK - The labels&amp;lt;=0 are automatically excluded from the overlaying phase, considering them as outliers.</LongDesc>
         <Example>'plots', 1</Example>
         <DataType>single | double | string</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tkmeansOpt</Name>
         <ShortDesc>tkmeans optional arguments.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Empty structure (default) or structure containing optional input arguments for tkmeans.
See tkmeans function.</LongDesc>
         <Example>'tkmeansOpt.reftol', 0.0001</Example>
         <DataType>struct</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tkmeansOut</Name>
         <ShortDesc>Saving tkmeans output structure.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>It is set to 1 to save the output structure of tkmeans into the output structure of dempk. Default is 0, i.e. no saving is done.</LongDesc>
         <Example>'tkmeansOut', 1</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>linkagearg</Name>
         <ShortDesc>Linkage used.</ShortDesc>
         <TypeInd>Single linkage is the default, see the MATLAB linkage function for more general information.</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType> </DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>Ysave</Name>
         <ShortDesc>Saving Y.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar that is set to 1 to request that the input matrix Y is saved into the output structure out.
Default is 0, i.e. no saving is done.</LongDesc>
         <Example>'Ysave',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>PairOver</Value>
               <Description>Pairwise overlap triangular matrix (sum of misclassification probabilities) among components found by tkmeans.</Description>
            </ItemCell>
            <ItemCell>
               <Value>mergID</Value>
               <Description>Label for each unit. It is a vector with n elements which assigns each unit to one of the groups obtained according to the merging algorithm applied.
REMARK - out.mergID=0 denotes trimmed units.</Description>
            </ItemCell>
            <ItemCell>
               <Value>tkmeansOut</Value>
               <Description>Output from tkmeans function. The structure is present if option tkmeansOut is set to 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>Original data matrix Y. The field is present if option Ysave is set to 1.</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Melnykov, V., Michael, S. (2017), "Clustering large datasets by merging K-means solutions". Submitted.</Item>
      <Item>Melnykov, V. (2016), "Merging Mixture Components for Clustering Through Pairwise Overlap". Journal of Computational and Graphical Statistics, Vol.25, n.1, 66-90.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>tkmeans</Item>
      <Item>clusterdata</Item>
      <Item>overlapmap</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Example using dempk on data obtained by simdataset, specifying both hierarchical clustering and a threshold value, in order to obtain additional plots.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>k = 10;</ItemCell>
            <ItemCell>v = 2;</ItemCell>
            <ItemCell>n = 5000;</ItemCell>
            <ItemCell>% Generate homogeneous and spherical clusters</ItemCell>
            <ItemCell>rng(100, 'twister');</ItemCell>
            <ItemCell>out = MixSim(k, v, 'sph', true, 'hom', true, 'int', [0 10], 'Display', 'off', 'BarOmega', 0.05, 'Display','off');</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X, id] = simdataset(n, out.Pi, out.Mu, out.S);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>gscatter(X(:,1), X(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('Simulated data with %d groups in %d dimensions and %d units', k, v, n);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex');</ItemCell>
            <ItemCell>% merging algorithm based on hierarchical clustering</ItemCell>
            <ItemCell>g = 3;</ItemCell>
            <ItemCell>DEMP = dempk(X, k*5, g, 'plots', 'contourf');</ItemCell>
            <ItemCell>% merging algorithm based on the threshold value omega star</ItemCell>
            <ItemCell>g = 0.01;</ItemCell>
            <ItemCell>DEMP2 = dempk(X, k*5, g, 'plots', 'contour');</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example using dempk with hierarchical merging on data obtained by simdataset, specifying additional arguments in the call to tkmeans.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>g = 3;</ItemCell>
            <ItemCell>v = 2;</ItemCell>
            <ItemCell>n = 5000;</ItemCell>
            <ItemCell>% null trimming and noise level</ItemCell>
            <ItemCell>alpha0 = 0;</ItemCell>
            <ItemCell>% restriction factor</ItemCell>
            <ItemCell>restr = 30;</ItemCell>
            <ItemCell>% Maximum overlap</ItemCell>
            <ItemCell>maxOm = 0.005;</ItemCell>
            <ItemCell>% Generate heterogeneous and elliptical clusters</ItemCell>
            <ItemCell>rng(500, 'twister');</ItemCell>
            <ItemCell>out = MixSim(g, v, 'sph', false, 'restrfactor', restr, 'int', [0 10], ...</ItemCell>
            <ItemCell>    'Display', 'off', 'MaxOmega', maxOm, 'Display','off');</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X, id] = simdataset(n, out.Pi, out.Mu, out.S);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>gg = gscatter(X(:,1), X(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('Simulated data with %d groups in %d dimensions and %d \nunits, with restriction factor %d and maximum overlap %.2f', ...</ItemCell>
            <ItemCell>    g, v, n, restr, maxOm);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex', 'fontsize', 12);</ItemCell>
            <ItemCell>set(findobj(gg), 'MarkerSize',10);</ItemCell>
            <ItemCell>legend1 = legend(gca,'show');</ItemCell>
            <ItemCell>set(legend1,'LineWidth',1,'Interpreter','latex','FontSize',14, 'Location', 'northwest')</ItemCell>
            <ItemCell>% number of components searched by tkmeans</ItemCell>
            <ItemCell>k = g * 6;</ItemCell>
            <ItemCell>% additional input for tkmeans</ItemCell>
            <ItemCell>tkmeansOpt = struct;</ItemCell>
            <ItemCell>tkmeansOpt.reftol = 0.0001;</ItemCell>
            <ItemCell>tkmeansOpt.msg = 1;</ItemCell>
            <ItemCell>tkmplots = struct;</ItemCell>
            <ItemCell>tkmplots.type = 'contourf';</ItemCell>
            <ItemCell>tkmplots.cmap = [0.3 0.2 0.4; 0.4 0.5 0.5; 0.1 0.7 0.9; 0.5 0.3 0.8; 1 1 1];</ItemCell>
            <ItemCell>tkmeansOpt.plots = tkmplots;</ItemCell>
            <ItemCell>tkmeansOpt.nomes = 0;</ItemCell>
            <ItemCell>% saving tkmeans output</ItemCell>
            <ItemCell>tkmeansOut = 1;</ItemCell>
            <ItemCell>DEMP = dempk(X, k, g, 'tkmeansOpt', tkmeansOpt, 'plots', 'ellipse');</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example using dempk with hierarchical merging on data obtained by simdataset, specifying additional arguments in the call to clusterdata.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>g = 3;</ItemCell>
            <ItemCell>v = 2;</ItemCell>
            <ItemCell>n = 5000;</ItemCell>
            <ItemCell>% null trimming and noise level</ItemCell>
            <ItemCell>alpha0 = 0;</ItemCell>
            <ItemCell>% restriction factor</ItemCell>
            <ItemCell>restr = 30;</ItemCell>
            <ItemCell>% Maximum overlap</ItemCell>
            <ItemCell>maxOm = 0.005;</ItemCell>
            <ItemCell>% Generate heterogeneous and elliptical clusters</ItemCell>
            <ItemCell>rng(500, 'twister');</ItemCell>
            <ItemCell>out = MixSim(g, v, 'sph', false, 'restrfactor', restr, 'int', [0 10], ...</ItemCell>
            <ItemCell>    'Display', 'off', 'MaxOmega', maxOm, 'Display','off');</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X, id] = simdataset(n, out.Pi, out.Mu, out.S);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>gg = gscatter(X(:,1), X(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('Simulated data with %d groups in %d dimensions and %d \nunits, with restriction factor %d and maximum overlap %.2f', ...</ItemCell>
            <ItemCell>    g, v, n, restr, maxOm);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex', 'fontsize', 12);</ItemCell>
            <ItemCell>set(findobj(gg), 'MarkerSize',10);</ItemCell>
            <ItemCell>legend1 = legend(gca,'Group 1','Group 2','Group 3');</ItemCell>
            <ItemCell>set(legend1,'LineWidth',1,'Interpreter','latex','FontSize',12, 'Location', 'northwest')</ItemCell>
            <ItemCell>% number of components searched by tkmeans</ItemCell>
            <ItemCell>disp('RUNNING TKMEANS WITH 18 COMPONENTS; THEN MERGING WITH dempk');</ItemCell>
            <ItemCell>k = g * 6;</ItemCell>
            <ItemCell>% additional input for clusterdata (i.e. hierOpt)</ItemCell>
            <ItemCell>linkagearg = 'weights';</ItemCell>
            <ItemCell>DEMP = dempk(X, k, g, 'linkagearg', linkagearg, 'plots', 'ellipse');</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example using dempk, both setting a threshold and performing a hierarchical merging, for data obtained by simdataset with 10 percent uniform noise.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>g = 3;</ItemCell>
            <ItemCell>v = 2;</ItemCell>
            <ItemCell>n = 5000;</ItemCell>
            <ItemCell>% 10 percent trimming and uniform noise</ItemCell>
            <ItemCell>alpha = 0.1;</ItemCell>
            <ItemCell>noise = alpha*n;</ItemCell>
            <ItemCell>% restriction factor</ItemCell>
            <ItemCell>restr = 30;</ItemCell>
            <ItemCell>% Maximum overlap</ItemCell>
            <ItemCell>maxOm = 0.005;</ItemCell>
            <ItemCell>% Generate heterogeneous and elliptical clusters</ItemCell>
            <ItemCell>rng(500, 'twister');</ItemCell>
            <ItemCell>out = MixSim(g, v, 'sph', false, 'restrfactor', restr, 'int', [0 10], ...</ItemCell>
            <ItemCell>    'Display', 'off', 'MaxOmega', maxOm, 'Display','off');</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X,id] = simdataset(n, out.Pi, out.Mu, out.S, 'noiseunits', noise);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>gg = gscatter(X(:,1), X(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('Simulating %d groups in %d dimensions and %d units with %d%s \nuniform noise, setting a restriction factor %d and maximum overlap %.2f', ...</ItemCell>
            <ItemCell>    g, v, n, alpha*100, '\%', restr, maxOm);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex', 'fontsize', 10);</ItemCell>
            <ItemCell>set(findobj(gg), 'MarkerSize',10);</ItemCell>
            <ItemCell>legend1 = legend(gca,'Outliers','Group 1','Group 2','Group 3');</ItemCell>
            <ItemCell>set(legend1,'LineWidth',1,'Interpreter','latex','FontSize',12, 'Location', 'northwest')</ItemCell>
            <ItemCell>% fixing the number of components searched by tkmeans</ItemCell>
            <ItemCell>k = g * 6;</ItemCell>
            <ItemCell>% dempk with hierarchical merging and trimming equal to the level of noise</ItemCell>
            <ItemCell>DEMP = dempk(X, k, g, 'alpha', alpha, 'plots', 'contourf');</ItemCell>
            <ItemCell>% dempk with a threshold value and trimming equal to the level of noise</ItemCell>
            <ItemCell>g = 0.025;</ItemCell>
            <ItemCell>DEMP = dempk(X, k, g, 'alpha', alpha, 'plots', 'contourf');</ItemCell>
            <ItemCell/>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example using the M5 dataset and various setting for dempk, using hierarchical clustering, in order to identify the real clusters using different strategies.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>Y = load('M5data.txt');</ItemCell>
            <ItemCell>id = Y(:,3);</ItemCell>
            <ItemCell>Y = Y(:, 1:2);</ItemCell>
            <ItemCell>G = max(id);</ItemCell>
            <ItemCell>n = length(Y);</ItemCell>
            <ItemCell>noise = length(Y(id==0, 1));</ItemCell>
            <ItemCell>v = 2; % dimensions</ItemCell>
            <ItemCell>id(id==0) = -1; % changing noise label</ItemCell>
            <ItemCell>gg = gscatter(Y(:,1), Y(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('M5 data set with %d groups in %d dimensions and \n%d units where %d%s of them are noise', G, v, n, noise/n*100, '\%');</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex', 'fontsize', 12);</ItemCell>
            <ItemCell>set(findobj(gg), 'MarkerSize',12);</ItemCell>
            <ItemCell>legend1 = legend(gca,'Outliers','Group 1','Group 2','Group 3');</ItemCell>
            <ItemCell>set(legend1,'LineWidth',1,'Interpreter','latex','FontSize',12, 'Location', 'northwest')</ItemCell>
            <ItemCell>% number of components to search</ItemCell>
            <ItemCell>k = G*5;</ItemCell>
            <ItemCell/>
            <ItemCell>% null trimming and noise level</ItemCell>
            <ItemCell>alpha0 = 0;</ItemCell>
            <ItemCell>% mimimum overlap cut-off value between pair of merged components</ItemCell>
            <ItemCell>omegaStar = 0.045;</ItemCell>
            <ItemCell>DEMP = dempk(Y, k, G, 'alpha', alpha0, 'tkmeansOut', 1, 'plots', 1);</ItemCell>
            <ItemCell>% setting alpha equal to noise level (usually not appropriate)</ItemCell>
            <ItemCell>alpha = noise/n;</ItemCell>
            <ItemCell>DEMP2 = dempk(Y, k, G, 'alpha', alpha, 'tkmeansOut', 1, 'plots', 1);</ItemCell>
            <ItemCell>% setting alpha greater than the noise level (almost always appropriate)</ItemCell>
            <ItemCell>DEMP3 = dempk(Y, k, G, 'alpha', alpha+0.04, 'tkmeansOut', 1, 'plots', 1);</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>