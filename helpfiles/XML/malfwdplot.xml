<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->malfwdplot</Title>
   <Purpose><!--This is the second line of the .m file-->malfwdplot plots the trajectories of scaled Mahalanobis distances along the search
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Structure containing monitoring of Mahalanobis distance.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure containing the following fields.
out.MAL = matrix containing the Mahalanobis distances monitored in each step of the forward search. Every row is associated with a unit (row of data matrix Y).
This matrix can be created using function FSMeda (compulsory argument) out.Un = matrix containing the order of entry of each unit (necessary if datatooltip is true or databrush is not empty) out.Y = n x v data matrix; n observations and v variables</LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>MAL</Value>
               <Description>matrix containing the Mahalanobis distances monitored in each&#xD;
               step of the forward search. Every row is associated with a&#xD;
               unit (row of data matrix Y).&#xD;
               This matrix can be created using function FSMeda&#xD;
               (compulsory argument)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true or databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>n x v data matrix; n observations&#xD;
               and v variables</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>standard</Name>
         <ShortDesc>appearance of the plot in terms of xlim, ylim, axes labels and their font size style, color of the lines, etc.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure standard contains the following fields:
standard.SizeAxesNum = scalar specifying the fontsize of the axes numbers. Default value is 10.
standard.xlim = two elements vector with minimum and maximum of the x axis. Default value is '' (automatic scale).
standard.ylim = two elements vector with minimum and maximum of the y axis. Default value is '' (automatic scale).
standard.titl = a label for the title (default: '').
standard.labx = a label for the x-axis (default: 'Subset size m').
standard.laby = a label for the y-axis (default: 'Mahalanobis distances' or 'Scaled Mahalanobis distances').
standard.SizeAxesLab = Scalar specifying the fontsize of the labels of the axes. Default value is 12.
standard.subsize = numeric vector containing the subset size with length equal to the number of columns of matrix of MD. The default value of subsize is size(MAL,1)-size(MAL,2)+1:size(MAL,1) standard.LineWidth = scalar specifying line width for the trajectories.
standard.Color= cell array of strings containing the colors to be used for the highlighted units.
If length(Color)=1 the same color will be used for all units.
If length(Color)=2 half of the trajectories will appear with Color{1} and the other half with Color{2}. And so on with 3 cell elements, etc.
standard.LineStyle = cell containing the line types.
Remark. The default values of structure standard are:
standard.SizeAxesNum=10;
standard.SizeAxesLab=12;
standard.xlim='' (Automatic scale);
standard.ylim='' (Automatic scale);
standard.titl='' (empty title);
standard.labx='Subset size m';
standard.laby='Mahalanobis distances';
standard.LineWidth=1;
standard.Color={'b'};
standard.LineStyle={'-'}</LongDesc>
         <Example>'standard.LineWidth','1'</Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>SizeAxesNum</Value>
               <Description>scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.</Description>
            </ItemCell>
            <ItemCell>
               <Value>xlim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>ylim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>titl</Value>
               <Description>a label for the title (default: '').</Description>
            </ItemCell>
            <ItemCell>
               <Value>labx</Value>
               <Description>a label for the x-axis (default: 'Subset size m').</Description>
            </ItemCell>
            <ItemCell>
               <Value>laby</Value>
               <Description>a label for the y-axis (default: 'Mahalanobis distances'&#xD;
                       or 'Scaled Mahalanobis distances').</Description>
            </ItemCell>
            <ItemCell>
               <Value>SizeAxesLab</Value>
               <Description>Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.</Description>
            </ItemCell>
            <ItemCell>
               <Value>subsize</Value>
               <Description>numeric vector containing the subset size&#xD;
                       with length equal to the number of columns of&#xD;
                       matrix of MD. The default value of subsize is&#xD;
                       size(MAL,1)-size(MAL,2)+1:size(MAL,1)</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line types.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>fground</Name>
         <ShortDesc>trajectories in foregroud.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure which controls which trajectories are highlighted and how they are plotted to be distinguishable from the others.
It is possible to control the label, the width, the color, the line type and the marker of the highlighted units.
Structure fground contains the following fields:
fground.fthresh = (alternative to funit) numeric vector of length 1 or 2 which specifies the criterion to select the trajectories to highlight.
If length(fthresh)=1 the highlighted trajectories are those units that throughtout the search had at leat once a MD greater (in absolute value) than fthresh. The default value of fthresh is 2.5.
If length(fthresh)=2 the highlighted trajectories are those of units that throughtout the search had a MD at least once bigger than fthresh(2) or smaller than fthresh(1).
fground.funit = (alternative to fthresh) vector containing the list of the units to be highlighted.
If funit is supplied, fthresh is ignored.
fground.flabstep = numeric vector which specifies the steps of the search whre to put labels for the highlighted trajectories (units). The default is to put the labels at the initial and final steps of the search.
flabstep='' means no label.
fground.LineWidth = scalar specifying line width for the highlighted trajectories (units). Default is 1.
fground.Color = cell array of strings containing the colors to be used for the highlighted trajectories (units).
If length(Color)==1 the same color will be used for all highlighted units Remark: if for example length(Color)=2 and there are 6 highlighted units, 3 highlighted trajectories appear with Color{1} and 3 highlighted trajectories with Color{2}.
fground.LineStyle = cell containing the line type of the highlighted trajectories.
fground.fmark = scalar controlling whether to plot highlighted trajectories as markers. if 1 each line is plotted using a different marker else no marker is used (default).
fground.FontSize = scalar controlling font size of the labels of the trajectories in foreground Remark. The default values of structure fground are:
fground.fthresh=2.5;
fground.flabstep=[m0 n];
fground.LineWidth=1;
fground.LineStyle={'-'};
fground.FontSize=12;
Remark. if fground='' no unit is highlighted and no label is inserted into the plot.</LongDesc>
         <Example>'fground.LineWidth','1'</Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>fthresh</Value>
               <Description>(alternative to funit) numeric vector&#xD;
                       of length 1 or 2 which specifies the criterion to&#xD;
                       select the trajectories to highlight.&#xD;
                       If length(fthresh)=1 the highlighted trajectories&#xD;
                       are those units that throughtout the search had&#xD;
                       at leat once a MD greater (in absolute value)&#xD;
                       than fthresh. The default value of fthresh is 2.5.&#xD;
                       If length(fthresh)=2 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       a MD at least once bigger than fthresh(2) or&#xD;
                       smaller than fthresh(1).</Description>
            </ItemCell>
            <ItemCell>
               <Value>funit</Value>
               <Description>(alternative to fthresh) vector&#xD;
                       containing the list of the units to be highlighted.&#xD;
                       If funit is supplied, fthresh is ignored.</Description>
            </ItemCell>
            <ItemCell>
               <Value>flabstep</Value>
               <Description>numeric vector which specifies the steps of&#xD;
                       the search whre to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search.&#xD;
                       flabstep='' means no label.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(Color)==1 the same color will be used for&#xD;
                       all highlighted units Remark: if for example&#xD;
                       length(Color)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with&#xD;
                       Color{1} and 3 highlighted trajectories with&#xD;
                       Color{2}.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line type of&#xD;
                       the highlighted trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>fmark</Value>
               <Description>scalar controlling whether to plot&#xD;
                       highlighted trajectories as markers. if 1 each line&#xD;
                       is plotted using a different marker else no marker&#xD;
                       is used (default).</Description>
            </ItemCell>
            <ItemCell>
               <Value>FontSize</Value>
               <Description>scalar controlling font size of the&#xD;
                       labels of the trajectories in foreground</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>bground</Name>
         <ShortDesc>characterictics of the trajectories in background.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure which specifies the trajectories in background, i.e. the trajectories corresponding to "unimmportant" units in the central part of the data. The structure also specifies the style used in the plot to give them less emphasis, so that to not distract the eye of the analyst from the trajectories of the relevant units.
Structure bground contains the following fields:
bground.bthresh = numeric vector of length 1 or 2 which specifies how to define the unimmportant trajectories.
Unimmportant trajectories will be plotted using a colormap, in greysh or will be hidden.
- If length(bthresh)=1 the irrelevant units are those which always had a MD smaller (in absolute value) than thresh.
- If length(bthresh)=2 the irrelevant units are those which always had a MD greater than bthresh(1) and smaller than bthresh(2).
The default is:
bthresh=2.5 if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100 i.e. to treat all trajectories as important if n&amp;lt;=100 and, if n&amp;gt;100, to reduce emphasis only to trajectories having in all steps of the search a value of scaled MD smaller than 2.5.
bground.bstyle = specifies how to plot the unimportant trajectories as defined in option bthresh.
'faint': unimportant trajectories are plotted using a colormap.
'hide': unimportant trajectories are hidden.
'greysh': unimportant trajectories are displayed in a faint grey.
When n&amp;gt;100 the default option is 'faint'.
When n&amp;lt;=100 and bthresh = -Inf option bstyle is ignored.
% Remark: bground='' is equivalent to bground.bthresh=-Inf that is all trajectories are considered relevant.</LongDesc>
         <Example>'bground.bstyle','faint'</Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>bthresh</Value>
               <Description>numeric vector of length 1 or 2 which&#xD;
                       specifies how to define the unimmportant trajectories.&#xD;
                       Unimmportant trajectories will be plotted using a&#xD;
                       colormap, in greysh or will be hidden.&#xD;
                       - If length(bthresh)=1 the irrelevant units are&#xD;
                         those which always had a MD smaller&#xD;
                         (in absolute value) than thresh.&#xD;
                       - If length(bthresh)=2 the irrelevant units&#xD;
                         are those which always had a MD greater&#xD;
                         than bthresh(1) and smaller than bthresh(2).&#xD;
                       The default is:&#xD;
                           bthresh=2.5 if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100&#xD;
                       i.e. to treat all trajectories as important if&#xD;
                       n&amp;lt;=100 and, if n&amp;gt;100, to reduce emphasis only to&#xD;
                       trajectories having in all steps of the search a&#xD;
                       value of scaled MD smaller than 2.5.</Description>
            </ItemCell>
            <ItemCell>
               <Value>bstyle</Value>
               <Description>specifies how to plot the unimportant&#xD;
                       trajectories as defined in option bthresh.&#xD;
                       'faint': unimportant trajectories are plotted using&#xD;
                           a colormap.&#xD;
                       'hide': unimportant trajectories are hidden.&#xD;
                       'greysh': unimportant trajectories are displayed in&#xD;
                           a faint grey.&#xD;
                       When n&amp;gt;100 the default option is 'faint'.&#xD;
                       When n&amp;lt;=100 and bthresh = -Inf option bstyle is&#xD;
                       ignored.&#xD;
                   %                   Remark: bground='' is equivalent to bground.bthresh=-Inf&#xD;
                   that is all trajectories are considered relevant.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Personalized plot tag.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String which identifies the handle of the plot which is about to be created. The default is to use tag 'pl_mal'.
Note that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created.</LongDesc>
         <Example>'tag','myplot'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>interactive clicking.</ShortDesc>
         <TypeInd>Empty value (default) or structure.</TypeInd>
         <LongDesc>The default is datatooltip=''.
If datatooltip = 1, the user can select with the mouse an individual MD trajectory in order to have information about the corresponding unit, the associated label and the step of the search in which the unit enters the subset.
If datatooltip is a structure it may contain the following the fields datatooltip.DisplayStyle = Determines how the data cursor displays. datatip | window.
- datatip displays data cursor information in a small yellow text box attached to a black square marker at a data point you interactively select.
- window displays data cursor information for the data point you interactively select in a floating window within the figure.
datatooltip.SnapToDataVertex= Specifies whether the data cursor snaps to the nearest data value or is located at the actual pointer position. on | off.
- on data cursor snaps to the nearest data value - off data cursor is located at the actual pointer position.
(see the MATLAB function datacursormode or the examples below). Default values are datatooltip.DisplayStyle = 'Window' and datatooltip.SnapToDataVertex = 'on'.
datatooltip.LineColor = controls the line color of the selected trajectory. Vector with three elements specifying RGB color.
By default, the MD trajectory selected with the mouse is highlighted in red. (a RGB vector can be conveniently chosen with our MATLAB class FSColor, see documentation).
Example - datatooltip.LineColor=[155/255,190/255,61/255];
or using class FScolors:
datatooltip.LineColor='greenish' datatooltip.SubsetLinesColor = highlights the trajectories of the units that are in the subset at a given step of the search. Vector with three elements specifying RGB color.
Example - datatooltip.SubsetLinesColor=[0 0 0];
or using class FScolors:
datatooltip.SubsetLinesColor='black'; highlights in black the trajectories of the units which are inside subset in correpondence of the selected steps.
Remark. This can be done (repeatedly) with a left mouse click on the x axis ('subset size m') in proximity of the step of interest. A right mouse click will terminate the selection by marking with a up-arrow the step corresponding to the highlighted lines.
The highlighted lines by default are in blue, but different colors can be specified as RGB vectors in the field SubsetLinesColor. By default SubsetLinesColor = '', i.e. the modality is not active. Any initialization for SubsetLinesColor which cannot be interpreted as RGB vector will be converted to blue, i.e. SubsetLinesColor will be forced to be [0 0 1].</LongDesc>
         <Example>'datatooltip',''</Example>
         <DataType>empty value, scalar or struct</DataType>
         <Struct>
            <ItemCell>
               <Value>DisplayStyle</Value>
               <Description>Determines how the data&#xD;
                       cursor displays. datatip | window.&#xD;
                       - datatip displays data cursor&#xD;
                       information in a small yellow text box attached to a&#xD;
                       black square marker at a data point you interactively&#xD;
                       select. &#xD;
                       - window displays data cursor information for the&#xD;
                       data point you interactively select in a floating&#xD;
                       window within the figure.</Description>
            </ItemCell>
            <ItemCell>
               <Value>SnapToDataVertex</Value>
               <Description>Specifies whether the&#xD;
                       data cursor snaps to the nearest data value or is&#xD;
                       located at the actual pointer position.  on | off.&#xD;
                       - on data cursor snaps to the nearest data value  &#xD;
                       - off data cursor is located at the actual pointer&#xD;
                       position.&#xD;
                   (see the MATLAB function datacursormode or the examples&#xD;
                   below). Default values are datatooltip.DisplayStyle =&#xD;
                   'Window' and datatooltip.SnapToDataVertex = 'on'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineColor</Value>
               <Description>controls the line color of the&#xD;
                       selected trajectory. Vector with three elements&#xD;
                       specifying RGB color.&#xD;
                       By default, the MD trajectory selected with the&#xD;
                       mouse is highlighted in red. (a RGB vector can be&#xD;
                       conveniently chosen with our MATLAB class FSColor,&#xD;
                       see documentation).&#xD;
                       Example -&#xD;
                       datatooltip.LineColor=[155/255,190/255,61/255]; &#xD;
                       or using class FScolors:&#xD;
                       datatooltip.LineColor='greenish'</Description>
            </ItemCell>
            <ItemCell>
               <Value>SubsetLinesColor</Value>
               <Description>highlights the&#xD;
                       trajectories of the units&#xD;
                       that are in the subset at a given step of the&#xD;
                       search. Vector with three elements&#xD;
                       specifying RGB color.&#xD;
                       Example - datatooltip.SubsetLinesColor=[0 0 0]; &#xD;
                       or using class FScolors:&#xD;
                       datatooltip.SubsetLinesColor='black'; highlights in&#xD;
                       black the trajectories of the units which are&#xD;
                       inside subset in correpondence of the selected&#xD;
                       steps.&#xD;
                   Remark. This can be done (repeatedly) with a left mouse click&#xD;
                       on the x axis ('subset size m') in proximity of the&#xD;
                       step of interest. A right mouse click will&#xD;
                       terminate the selection by marking with a up-arrow&#xD;
                       the step corresponding to the highlighted lines.&#xD;
                       The highlighted lines by default are in blue, but&#xD;
                       different colors can be specified as RGB vectors in&#xD;
                       the field SubsetLinesColor. By default&#xD;
                       SubsetLinesColor = '', i.e. the modality is not&#xD;
                       active. Any initialization for SubsetLinesColor&#xD;
                       which cannot be interpreted as RGB vector will be&#xD;
                       converted to blue, i.e. SubsetLinesColor will be&#xD;
                       forced to be [0 0 1].</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>label</Name>
         <ShortDesc>row labels.</ShortDesc>
         <TypeInd>Cell of strings.</TypeInd>
         <LongDesc>Cell containing the labels of the units (optional argument used when datatooltip=1. If this field is not present labels row1, ..., rown will be automatically created and included in the pop up datatooltip window).</LongDesc>
         <Example>'label',{'Smith','Johnson','Robert','Stallone'}</Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>interactive mouse brushing.</ShortDesc>
         <TypeInd>Empty value, scalar or structure.</TypeInd>
         <LongDesc>If databrush is an empty value (default), no brushing is done.
The activation of this option (databrush is a scalar or a structure) enables the user to select a set of trajectories in the current plot and to see them highlighted in the scatter plot matrix (spm).
If spm does not exist it is automatically created.
In addition, brushed units are automatically highlighted in the minimum MD plot if it is already open.
Please, note that the window style of the other figures is set equal to that which contains the monitoring MD plot. In other words, if the MD plot is docked all the other figures will be docked too.
DATABRUSH IS A SCALAR.
If databrush is a scalar the default selection tool is a rectangular brush and it is possible to brush only once (that is persist='').
DATABRUSH IS A STRUCTURE.
If databrush is a structure, it is possible to use all optional arguments of function selectdataFS.m and the following fields - databrush.persist = repeated brushng enabled. Persist is an empty value or a scalar containing the strings 'on' or 'off'.
The default value of persist is '', that is brushing is allowed only once.
If persist is 'on' or 'off' brushing can be done as many time as the user requires.
If persist='on' then the unit(s) currently brushed are added to those previously brushed. it is possible, every time a new brushing is done, to use a different color for the brushed units.
If persist='off' every time a new brush is performed units previously brushed are removed.
- databrush.Label = add labels of brushed units in the malfwdplot.
- databrush.labeladd = add labels of brushed units in spm.
Character. [] (default) | '1'.
If databrush.labeladd='1', we label in the scatter plot matrix the units of the last selected group with the unit row index in matrices X and y. The default value is labeladd='', i.e. no label is added.</LongDesc>
         <Example>'databrush',1</Example>
         <DataType>single | double | struct</DataType>
         <Struct>
            <ItemCell>
               <Value>persist</Value>
               <Description>repeated brushng enabled. Persist is an empty value or a scalar&#xD;
                     containing the strings 'on' or 'off'.&#xD;
                     The default value of persist is '', that is brushing&#xD;
                     is allowed only once.&#xD;
                     If persist is 'on' or 'off' brushing can be done as&#xD;
                     many time as the user requires.&#xD;
                     If persist='on' then the unit(s) currently brushed&#xD;
                     are added to those previously brushed. it is&#xD;
                     possible, every time a new brushing is done, to use a&#xD;
                     different color for the brushed units.&#xD;
                     If persist='off' every time a new brush is performed&#xD;
                     units previously brushed are removed.&#xD;
                   </Description>
            </ItemCell>
            <ItemCell>
               <Value>Label</Value>
               <Description>add labels of brushed units in the&#xD;
                     malfwdplot.&#xD;
                   </Description>
            </ItemCell>
            <ItemCell>
               <Value>labeladd</Value>
               <Description>add labels of brushed units in spm.&#xD;
                     Character. [] (default) | '1'. &#xD;
                     If databrush.labeladd='1', we label in the scatter&#xD;
                     plot matrix the units of the last selected group with&#xD;
                     the unit row index in matrices X and y. The default&#xD;
                     value is labeladd='', i.e. no label is added.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>nameY</Name>
         <ShortDesc>cell array of strings of length v containing the labels of the variables of the dataset.</ShortDesc>
         <TypeInd>Cell of strings.</TypeInd>
         <LongDesc>If it is empty (default) the sequence Y1, ..., Yv will be used automatically</LongDesc>
         <Example>'nameY',{'var1', var2, 'var3'}</Example>
         <DataType>cell of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>display or save used options.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls whether to display or to save as output the options inside structures standard, fground and bground which have been used to draw the plot.
plotopt=malfwdplot(out,'msg',1) enables to save inside cell plotopt the options which have been used to draw the three types of trajectories (standard, foreground and background) plotopt=malfwdplot(out,'msg',2) saves inside cell plotopt the options which have been used and prints them on the screen</LongDesc>
         <Example>'msg',1</Example>
         <DataType>single or double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>plotopt</Name>
         <ShortDesc>Cell array of strings</ShortDesc>
         <TypeInd>options which have been used to create the plot.</TypeInd>
         <LongDesc>Store all options which have been used to generate the plot inside cell plotopt.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson, Riani and Cerioli (2004), Exploring Multivariate Data with the Forward Search, Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>resfwdplot</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Produce monitoring MD plot with all the default options.</Title>
         <Desc>
            <ItemCell>Generate input structure for malfwdplot</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>n=100;</ItemCell>
            <ItemCell>p=4;</ItemCell>
            <ItemCell>state1=141243498;</ItemCell>
            <ItemCell>randn('state', state1);</ItemCell>
            <ItemCell>Y=randn(n,p);</ItemCell>
            <ItemCell>kk=[1:10];</ItemCell>
            <ItemCell>Y(kk,:)=Y(kk,:)+4;</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'plots',1,'init',30);</ItemCell>
            <ItemCell>% Produce monitoring MD plot with all the default options</ItemCell>
            <ItemCell>malfwdplot(out)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure standard.</Title>
         <Desc>
            <ItemCell>Initialize structure standard</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>standard=struct;</ItemCell>
            <ItemCell>standard.LineStyle={'-';'-.';':'};</ItemCell>
            <ItemCell>% Specify the line width</ItemCell>
            <ItemCell>standard.LineWidth=0.5;</ItemCell>
            <ItemCell>malfwdplot(out,'standard',standard)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>
            <ItemCell>Initialize structure fground</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>fground = struct;</ItemCell>
            <ItemCell>% Specify which trajectories have to be highlighted</ItemCell>
            <ItemCell>fground.funit=[2 5 20 23 35 45];</ItemCell>
            <ItemCell>% Specify the steps in which labels have to be put</ItemCell>
            <ItemCell>n=size(Y,1);</ItemCell>
            <ItemCell>fground.flabstep=[n/2 n*0.75 n+0.5];;</ItemCell>
            <ItemCell>% Specify the line width of the highlighted trajectories</ItemCell>
            <ItemCell>fground.LineWidth=3;</ItemCell>
            <ItemCell>% Produce a monitoring MD plot in which labels are put for units</ItemCell>
            <ItemCell>% [2 5 20 23 35 45] in steps [n/2 n*0.75 n+0.5] of the search</ItemCell>
            <ItemCell>malfwdplot(out,'fground',fground)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure bground.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>bground = struct;</ItemCell>
            <ItemCell>% Specify a threshold to define the "background" trajectories</ItemCell>
            <ItemCell>bground.bthresh=2;</ItemCell>
            <ItemCell>% Trajectories whose MD is always between -btresh and +bthresh</ItemCell>
            <ItemCell>% are shown as specified in bground.bstyle</ItemCell>
            <ItemCell>bground.bstyle='faint';</ItemCell>
            <ItemCell>malfwdplot(out,'bground',bground)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt; Example of the use of option databrush.</Title>
         <Desc>
            <ItemCell>(brushing is done only once using a rectangular selection tool)</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>malfwdplot(out,'databrush',1)</ItemCell>
            <ItemCell>%   An equivalent statement is</ItemCell>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>
            <ItemCell>load Swiss banknotes</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>Y=load('swiss_banknotes.txt');</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'init',30);</ItemCell>
            <ItemCell>% Initialize structure fground</ItemCell>
            <ItemCell>fground = struct;</ItemCell>
            <ItemCell>% Specify which trajectories have to be highlighted</ItemCell>
            <ItemCell>fground.funit=out.Un(end-15:end,2);</ItemCell>
            <ItemCell>% Specify the steps in which labels have to be put</ItemCell>
            <ItemCell>n=size(Y,1);</ItemCell>
            <ItemCell>fground.flabstep=[n/2 n*0.75 n+0.5];;</ItemCell>
            <ItemCell>% Specify the line width of the highlighted trajectories</ItemCell>
            <ItemCell>fground.LineWidth=3;</ItemCell>
            <ItemCell>% Produce a monitoring MD plot in which labels are put for units</ItemCell>
            <ItemCell>% out.Un(end-15:end,2)in steps [n/2 n*0.75 n+0.5] of the search</ItemCell>
            <ItemCell>malfwdplot(out,'fground',fground)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option datatooltip.</Title>
         <Desc>
            <ItemCell>Gives the user the possibility of clicking on the different points and have information about the unit selected, the step of entry into the subset and the associated label</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>malfwdplot(out,'datatooltip',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option datatooltip personalized.</Title>
         <Desc>
            <ItemCell>Gives the user the possibility of clicking on the different points and have information about the unit selected, the step of entry into the subset and the associated label.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>datatooltip = struct;</ItemCell>
            <ItemCell>% In this example the style of the datatooltip is 'datatip'. Click on a</ItemCell>
            <ItemCell>% trajectory when the resfwdplot is displayed.</ItemCell>
            <ItemCell>%</ItemCell>
            <ItemCell>datatooltip.DisplayStyle = 'datatip';</ItemCell>
            <ItemCell>malfwdplot(out,'datatooltip',datatooltip);</ItemCell>
            <ItemCell>%</ItemCell>
            <ItemCell>% Now we use the default style, which is 'window'.</ItemCell>
            <ItemCell>datatooltip.DisplayStyle = 'window';</ItemCell>
            <ItemCell>malfwdplot(out,'datatooltip',datatooltip);</ItemCell>
            <ItemCell>% Here we specify the RGB color used to highlight the selected trajectory.</ItemCell>
            <ItemCell>% Note that we can obtain the RGB vector with our MATLAB class FSColors.</ItemCell>
            <ItemCell>%</ItemCell>
            <ItemCell>datatooltip = struct;</ItemCell>
            <ItemCell>datatooltip.LineColor = FSColors.yellowish.RGB;</ItemCell>
            <ItemCell>malfwdplot(out,'datatooltip',datatooltip);</ItemCell>
            <ItemCell>% now LineColor is not a valid RGB vector, but red (default) will be used</ItemCell>
            <ItemCell>datatooltip.LineColor = [123 41 12 32 1];</ItemCell>
            <ItemCell>malfwdplot(out,'datatooltip',datatooltip);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt; Another example of the use of option datatooltip.</Title>
         <Desc>
            <ItemCell>The user can highlight the trajectories of the units that are in the subset at a given step with a mouse click in proximity of that step. A right click will terminate the exercise.</ItemCell>
            <ItemCell>To activate this modality, we set the field SubsetLinesColor, which specifies the color used to highlight the trajectories.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>datatooltip = struct;</ItemCell>
            <ItemCell>datatooltip.SubsetLinesColor = FSColors.purplish.RGB;</ItemCell>
            <ItemCell>malfwdplot(out,'datatooltip',datatooltip);</ItemCell>
            <ItemCell>% Here we show that the modality is also activated when</ItemCell>
            <ItemCell>% SubsetLinesColor is not a valid RGB vector.</ItemCell>
            <ItemCell>% In this case the default highlight color (blue) is used.</ItemCell>
            <ItemCell>datatooltip = struct;</ItemCell>
            <ItemCell>datatooltip.SubsetLinesColor = 999;</ItemCell>
            <ItemCell>malfwdplot(out,'datatooltip',datatooltip);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt; Example of the use of option databrush.</Title>
         <Desc>
            <ItemCell>(brushing is done only once using a rectangular selection tool)</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>malfwdplot(out,'databrush',1)</ItemCell>
            <ItemCell>%   An equivalent statement is</ItemCell>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt; Example of the use of brush using a rectangular selection tool and a cyan colour.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.FlagColor='c';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt; Example of the use of brush using multile selection circular tools.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Brush';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 6.&lt;/i&gt; Example of the use of brush using lasso selection tool and fleur pointer.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='lasso';</ItemCell>
            <ItemCell>databrush.Pointer='fleur';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 7.&lt;/i&gt; Example of the use of rectangular brush.</Title>
         <Desc>
            <ItemCell>Labels are added for the brushed units. Persistent labels appear in the plot which has been brushed</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 8.&lt;/i&gt; Example of the use of persistent non cumulative brush.</Title>
         <Desc>
            <ItemCell>Every time a brushing action is performed previous highlightments are removed</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.persist='off';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 9.&lt;/i&gt; Example of the use of persistent cumulative brush.</Title>
         <Desc>
            <ItemCell>Every time a brushing action is performed current highlightments are added to previous highlightments</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>malfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>
            <ItemCell>load Swiss banknotes</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>Y=load('swiss_banknotes.txt');</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'init',30);</ItemCell>
            <ItemCell>% Initialize structure fground</ItemCell>
            <ItemCell>fground = struct;</ItemCell>
            <ItemCell>% Specify which trajectories have to be highlighted</ItemCell>
            <ItemCell>fground.funit=out.Un(end-15:end,2);</ItemCell>
            <ItemCell>% Specify the steps in which labels have to be put</ItemCell>
            <ItemCell>n=size(Y,1);</ItemCell>
            <ItemCell>fground.flabstep=[n/2 n*0.75 n+0.5];;</ItemCell>
            <ItemCell>% Specify the line width of the highlighted trajectories</ItemCell>
            <ItemCell>fground.LineWidth=3;</ItemCell>
            <ItemCell>% Produce a monitoring MD plot in which labels are put for units</ItemCell>
            <ItemCell>% out.Un(end-15:end,2)in steps [n/2 n*0.75 n+0.5] of the search</ItemCell>
            <ItemCell>% and store the options to produce the plot inside plotopt</ItemCell>
            <ItemCell>plotopt=malfwdplot(out,'fground',fground,'msg',2)</ItemCell>
            <ItemCell>% In order to reuse the options which have been stored inside plotopt</ItemCell>
            <ItemCell>% use the following sintax</ItemCell>
            <ItemCell>% malfwdplot(out,plotopt{:})</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>