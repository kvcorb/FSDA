<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->FSM</Title>
   <Purpose><!--This is the second line of the .m file-->FSM gives an automatic outlier detection procedure in mult. analysis</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>Y</Name>
         <ShortDesc>Input dataaaa
</ShortDesc>
         <TypeInd>Matrix
</TypeInd>
         <LongDesc>n x v data matrix; n observations and v variables. Rows of
               Y represent observations, and columns represent variables.
               Missing values (NaN's) and infinite values (Inf's) are
               allowed, since observations (rows) with missing or infinite
               values will automatically be excluded from the
               computations.
                
</LongDesc>
         <Example/>
         <DataType>single|double


</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>aa</Value>
               <Description>bb</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>aaa</Name>
         <ShortDesc/>
         <TypeInd/>
         <LongDesc/>
         <Example/>
         <DataType/>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc/>
         <TypeInd/>
         <LongDesc/>
         <Structure>
            <ItemCell>
               <Value>outliers</Value>
               <Description>k x 1 vector containing the list of the units declared as&#xD;
               outliers or NaN if the sample is homogeneous</Description>
            </ItemCell>
            <ItemCell>
               <Value>mmd</Value>
               <Description>(n-init) x 2 matrix. &#xD;
               1st col = fwd search index; &#xD;
               2nd col = value of minimum Mahalanobis Distance in each step&#xD;
               of the fwd search.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>(n-init) x 11 Matrix which contains the unit(s) included&#xD;
               in the subset at each step of the fwd search.&#xD;
               REMARK: in every step the new subset is compared with the&#xD;
               old subset. Un contains the unit(s) present in the new&#xD;
               subset but not in the old one. Un(1,2) for example&#xD;
               contains the unit included in step init+1. Un(end,2)&#xD;
               contains the units included in the final step of the search.</Description>
            </ItemCell>
            <ItemCell>
               <Value>nout</Value>
               <Description>2 x 5 matrix containing the number of times mmd went out&#xD;
               of particular quantiles.&#xD;
               First row contains quantiles 1 99 99.9 99.99 99.999 per cent; &#xD;
               Second row contains the frequency distribution.</Description>
            </ItemCell>
            <ItemCell>
               <Value>loc</Value>
               <Description>1 x v  vector containing location of the data.</Description>
            </ItemCell>
            <ItemCell>
               <Value>cov</Value>
               <Description>v x v robust estimate of covariance matrix.</Description>
            </ItemCell>
            <ItemCell>
               <Value>md</Value>
               <Description>n x 1 vector containing the estimates of the robust&#xD;
               Mahalanobis distances (in squared units). This vector&#xD;
               contains the distances of each observation from the&#xD;
               location of the data, relative to the scatter matrix cov.</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Riani, M., Atkinson A.C., Cerioli A. (2009). Finding an unknown</Item>
      <Item>       number of multivariate outliers. Journal of the Royal Statistical</Item>
      <Item>       Society Series B, Vol. 71, pp. 201-221.</Item>
      <Item>Cerioli A., Farcomeni A. Riani M., (2014). Strong consistency and</Item>
      <Item>       robustness of the Forward Search estimator of multivariate location</Item>
      <Item>       and scatter, Journal of Multivariate Analysis, Vol. 126, </Item>
      <Item>       pp. 167-183, http://dx.doi.org/10.1016/j.jmva.2013.12.010.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>FSMeda</Item>
      <Item>unibiv</Item>
      <Item>FSMmmd</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>FSM with all default options.</Title>
         <Desc/>
         <MATLABcode>
    n=200;
    v=3;
    randn('state', 123456);
    Y=randn(n,v);
    % Contaminated data
    Ycont=Y;
    Ycont(1:5,:)=Ycont(1:5,:)+3;
    [out]=FSM(Ycont);
</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>FSM with optional arguments.</Title>
         <Desc>&#xD;
     FSM with plots showing envelope superimposition.&#xD;


</Desc>
         <MATLABcode>
    n=200;&#xD;
    v=3;&#xD;
    randn('state', 123456);&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [out]=FSM(Ycont,'plots',2);&#xD;


</MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>FSM with plots showing envelope superimposition in normal&#xD;
     coordinates.</Title>
         <Desc/>
         <MATLABcode>
    n=200;
    v=3;
    randn('state', 123456);
    Y=randn(n,v);
    % Contaminated data
    Ycont=Y;
    Ycont(1:5,:)=Ycont(1:5,:)+3;
    plots=struct;
    plots.ncoord=1;
    [out]=FSM(Ycont,'plots',plots);
</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Monitor the exceedances from m=200 without showing plots.</Title>
         <Desc> </Desc>
         <MATLABcode>
    n=1000;&#xD;
    v=10;&#xD;
    Y=randn(n,v);&#xD;
    [out]=FSM(Y,'init',200,'plots',0);&#xD;


</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Choosing an initial subset formed by the three observations with &#xD;
     the smallest Mahalanobis Distance.</Title>
         <Desc> </Desc>
         <MATLABcode>
    n=100;&#xD;
    v=3;&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [out]=FSM(Ycont,'m0',5,'crit','md');&#xD;


</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Forgery Swiss banknotes examples.</Title>
         <Desc> </Desc>
         <MATLABcode>
    load('swiss_banknotes');&#xD;
&#xD;
    % Monitor the exceedances of Minimum Mahalanobis Distance &#xD;
    [out]=FSM(swiss_banknotes.data(101:200,:),'plots',1);&#xD;
&#xD;
    % Control minimum and maximum on the x axis&#xD;
    plots=struct;&#xD;
    plots.xlim=[60 90];&#xD;
    [out]=FSM(swiss_banknotes.data(101:200,:),'plots',plots);&#xD;
&#xD;
    % Monitor the exceedances of Minimum Mahalanobis Distance using normal coordinates for mmd.&#xD;
    plots.ncoord=1;&#xD;
    [out]=FSM(swiss_banknotes.data(101:200,:),'plots',plots);&#xD;


</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>