<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->overlapmap</Title>
   <Purpose><!--This is the second line of the .m file--> overlapmap produce an interactive overlap map  
</Purpose>
   <Description><!--Description section-->The function overlapmap plots the ordered pairwise overlap values between components. These components are ordered according to a specific rule:
first the closest pair is plotted in the lowest left corner, then the components closer to the ones already included are plotted (when all of them have a zero overlap value with the ones already included, the closest pair between all the remaining ones is inserted). The overlap map can either shows with different colors the closeness between components (i.e. in a descriptive manner), or it becomes an interactive plot with a left click on the color bar, which find and visualize the closest components according to a specific threshold value $ \omega^* $ (i.e.
omegaStar), which specifies the minimum paiwise overlap threshold value used to merge the components. The interactive process ends with a right click on the white grid in the upper left corner of the plot, it also updates the results creating in the workspace a new variable 'userOverlap'. See the More About section for further informations.
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>D</Name>
         <ShortDesc>Informations to compute the overlap matrix.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>D is a structure which can have the following fields (not all of them are strictly required).
Admissable fields for the structure D:
D.idx = Label of the units. Vector. It is a vector with n elements which assigns each unit to one of the k groups.
REMARK - labels&amp;lt;=0 denotes trimmed units.
D.Y = Input data. Matrix. Data matrix containining n observations on v variables. Rows of Y represent observations, and columns represent variables. Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.
When this field is specified the algorithm evaluate the statistics of interest to obtain the overlap matrix, it also allows the user to obtain additional plots when the interaction is closed (using spmplot). When this field is not specified the fields D.sigmaopt, D.muopt and D.siz are required.
D.sigmaopt = v-by-v-by-k covariance matrices of the groups.
D.muopt = k-by-v matrix containing cluster centroid locations.
D.siz = Matrix or vector. If it is a matrix of size k-by-3, where:
1st col = labels of the k components.
2nd col = number of observations in each component.
3rd col = percentage of observations in each component.
REMARK: in case there is a field structure named emp containing the same informations, these ones will be used</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>idx</Value>
               <Description>Label of the units. Vector. It is a vector with n &#xD;
               elements which assigns each unit to one of the k groups.&#xD;
               REMARK - labels&amp;lt;=0 denotes trimmed units.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>Input data. Matrix. Data matrix containining n &#xD;
               observations on v variables. Rows of Y represent&#xD;
               observations, and columns represent variables. Missing&#xD;
               values (NaN's) and infinite values (Inf's) are allowed,&#xD;
               since observations (rows) with missing or infinite values&#xD;
               will automatically be excluded from the computations. &#xD;
               When this field is specified the algorithm evaluate the&#xD;
               statistics of interest to obtain the overlap matrix, it&#xD;
               also allows the user to obtain additional plots when the&#xD;
               interaction is closed (using spmplot). When this field is&#xD;
               not specified the fields D.sigmaopt, D.muopt and D.siz are &#xD;
               required.</Description>
            </ItemCell>
            <ItemCell>
               <Value>sigmaopt</Value>
               <Description>v-by-v-by-k covariance matrices of the groups.</Description>
            </ItemCell>
            <ItemCell>
               <Value>muopt</Value>
               <Description>k-by-v matrix containing cluster centroid locations.</Description>
            </ItemCell>
            <ItemCell>
               <Value>siz</Value>
               <Description>Matrix or vector. If it is a matrix of size&#xD;
               k-by-3, where:&#xD;
               1st col = labels of the k components.&#xD;
               2nd col = number of observations in each component.&#xD;
               3rd col = percentage of observations in each&#xD;
               component.&#xD;
       REMARK: in case there is a field structure named emp containing the &#xD;
               same informations, these ones will be used</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>omegaStar</Name>
         <ShortDesc>Pairwise overlap threshold.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>It is the value between pairs of components considered disjunct if their overlap is below omegaStar. If specified, these components would be highlighted in the overlap map with an 'X' mark.
The default value is 0 (i.e. all components should be merged).</LongDesc>
         <Example>'omegaStar', 0.01</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Additional plot on the screen.</ShortDesc>
         <TypeInd>Scalar, char, or struct.</TypeInd>
         <LongDesc>This arguments requires the presence of the field D.Y.
- If plots=0 (default) no additional plot is produced.
- If plots=1, at the end of the interaction with the overlap map (i.e. right click on the white grid), the components merged are shown using the spmplot function. In particular:
* for v=1, an histogram of the univariate data.
* for v=2, a bivariate scatterplot.
* for v&amp;gt;2, a scatterplot matrix.
When v&amp;gt;=2 plots offers the following additional features (for v=1 the behaviour is forced to be as for plots=1):
- plots='contourf' adds in the background of the bivariate scatterplots a filled contour plot. The colormap of the filled contour is based on grey levels as default.
This argument may also be inserted in a field named 'type' of a structure. In the latter case it is possible to specify the additional field 'cmap', which changes the default colors of the color map used. The field 'cmap' may be a three-column matrix of values in the range [0,1] where each row is an RGB triplet that defines one color.
Check the colormap function for additional informations.
- plots='contour' adds in the background of the bivariate scatterplots a contour plot. The colormap of the contour is based on grey levels as default. This argument may also be inserted in a field named 'type' of a structure.
In the latter case it is possible to specify the additional field 'cmap', which changes the default colors of the color map used. The field 'cmap' may be a three-column matrix of values in the range [0,1] where each row is an RGB triplet that defines one color.
Check the colormap function for additional informations.
- plots='ellipse' superimposes confidence ellipses to each group in the bivariate scatterplots. The size of the ellipse is chi2inv(0.95,2), i.e. the confidence level used by default is 95%. This argument may also be inserted in a field named 'type' of a structure. In the latter case it is possible to specify the additional field 'conflev', which specifies the confidence level to use and it is a value between 0 and 1.
- plots='boxplotb' superimposes on the bivariate scatterplots the bivariate boxplots for each group, using the boxplotb function. This argument may also be inserted in a field named 'type' of a structure.
REMARK - The labels&amp;lt;=0 are automatically excluded from the overlaying phase, considering them as outliers.</LongDesc>
         <Example>'plots', 1</Example>
         <DataType>single | double | string</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>userColors</Name>
         <ShortDesc>Color used for the color map.</ShortDesc>
         <TypeInd>Matrix or string.</TypeInd>
         <LongDesc>Check the colormap function for more informations.</LongDesc>
         <Example>'userColors', winter</Example>
         <DataType>single | double | string</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>Ghat</Value>
               <Description>Estimated number of clusters in the data.</Description>
            </ItemCell>
            <ItemCell>
               <Value>PairOver</Value>
               <Description>Pairwise overlap triangular matrix (sum of misclassification probabilities) among components found by tkmeans.</Description>
            </ItemCell>
            <ItemCell>
               <Value>mergID</Value>
               <Description>Label for each unit. It is a vector with n elements which assigns each unit to one of the groups obtained.
REMARK - out.mergID&amp;lt;=0 denotes trimmed units.</Description>
            </ItemCell>
            <ItemCell>
               <Value>merged</Value>
               <Description>Cell array containing the labels of the components merged together.</Description>
            </ItemCell>
            <ItemCell>
               <Value>single</Value>
               <Description>Vector containing the labels of single clusters found, i.e. not merged with any other component.
Optional Output:
userOverlap : Updating of the results. Structure. userOverlap is obtained when the interaction with the overlap map is closed and is added in the Workspace.
It contains the following fields, which represent an update of their corresponding variable in the structure out:
- userOverlap.omegaStar = update of out.omegaStar.
- userOverlap.Ghat = update of out.Ghat.
- userOverlap.merged = update of out.merged.
- userOverlap.single = update of out.single.</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->In the code 'overM' represents a triangular matrix, denoted as $ \Omega $, which contains the pairwise overlap values. The merging phase starts searching the maximum pairwise overlap value in $ \Omega $, i.e. $ \max (\Omega_{k k'}) $, and then deletes this value (e.g. setting it to NaN).
This new matrix obtained is denoted as $ \Omega' $. The respective rows and columns corresponding to the element deleted in $ \Omega' $ are placed in a new matrix $ \Omega'' $. The algorithm progressively continue the same process, searching the highest pairwise overlap value in the components closest to the ones previously found, i.e. in the respective rows or columns of the components $ k $ and $ k' $. When the latter are all zeros, the process starts again considering the remaining values in $ \Omega $.
The values $ \max(\Omega'_{k k'}) $ and the respective $ k $ and $ k' $ labels are sequentially saved in a $ k(k-1)/2 \times 3 $ matrix MergMat.
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION-->&#xD;
 &#xD;
   ...&#xD;
 &#xD;
 
</Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Melnykov, V., Michael, S. (2017), "Clustering large datasets by merging K-means solutions". Submitted.</Item>
      <Item>Melnykov, V. (2016), "Merging Mixture Components for Clustering Through Pairwise Overlap". Journal of Computational and Graphical Statistics, Vol.25, n.1, 66-90.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>dempk</Item>
      <Item>tkmeans</Item>
      <Item>tclust</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Example using tkmeans on geyser data.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell/>
            <ItemCell>close all</ItemCell>
            <ItemCell>Y = load('geyser2.txt');</ItemCell>
            <ItemCell>k = 3;</ItemCell>
            <ItemCell>% using tkmeans</ItemCell>
            <ItemCell>out = tkmeans(Y, k*2, 0.05, 'plots', 1);</ItemCell>
            <ItemCell>overl_1 = overlapmap(out);</ItemCell>
            <ItemCell>% using tkmeans for a higher number of components</ItemCell>
            <ItemCell>out2 = tkmeans(Y, k*4, 0.05, 'plots', 1);</ItemCell>
            <ItemCell>overl_2 = overlapmap(out2);</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example using M5data with tclust and tkmeans, specifying an initial threshold omegaStar, a colormap, and allowing for additional interactive plots.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>rng('default')</ItemCell>
            <ItemCell>rng(2)</ItemCell>
            <ItemCell>Y=load('M5data.txt');</ItemCell>
            <ItemCell>gscatter(Y(:,1),Y(:,2), Y(:,3))</ItemCell>
            <ItemCell>k = 3;</ItemCell>
            <ItemCell>out = tkmeans(Y(:,1:2), k*5, 0.2, 'plots', 'ellipse', 'Ysave', true);</ItemCell>
            <ItemCell>overl = overlapmap(out, 'omegaStar', 0.025, 'plots', 'contour', 'userColors', winter);</ItemCell>
            <ItemCell/>
            <ItemCell>rng('default')</ItemCell>
            <ItemCell>if verLessThan('matlab', '8.5')</ItemCell>
            <ItemCell>    rng(5)</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    rng(1)</ItemCell>
            <ItemCell>end</ItemCell>
            <ItemCell>out_2 = tclust(Y(:,1:2), k*2, 0.2, 1, 'plots', 'contourf', 'Ysave', true);</ItemCell>
            <ItemCell>overl_2 = overlapmap(out_2, 'omegaStar', 0.025, 'plots', 'contourf', 'userColors', summer);</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example using simdataset to create homogeneous and spherical clusters.</Title>
         <Desc>
            <ItemCell>This output is used as input for the overlap map and then also tkmeans and tclust solutions, for a higher number of components.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>k = 8;</ItemCell>
            <ItemCell>v = 4;</ItemCell>
            <ItemCell>n = 5000;</ItemCell>
            <ItemCell>% Generate 10 homogeneous and spherical clusters</ItemCell>
            <ItemCell>rng('default')</ItemCell>
            <ItemCell>rng(10, 'twister');</ItemCell>
            <ItemCell>out = MixSim(k, v, 'sph', true, 'hom', true, 'int', [0 10], 'Display', ...</ItemCell>
            <ItemCell>    'off', 'MaxOmega', 0.005, 'Display','off');</ItemCell>
            <ItemCell>% 5 percent noise</ItemCell>
            <ItemCell>alpha0 = 0.05*n;</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X, id] = simdataset(n, out.Pi, out.Mu, out.S, 'noiseunits', alpha0);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>figure;</ItemCell>
            <ItemCell>spmplot(X, 'group', id);</ItemCell>
            <ItemCell>str = sprintf('Simulated data with %d groups in %d dimensions and %d units', k, v, n);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex');</ItemCell>
            <ItemCell>% overlap map on simdataset output</ItemCell>
            <ItemCell>Inputs.Y = X;</ItemCell>
            <ItemCell>Inputs.idx = id;</ItemCell>
            <ItemCell>overlapmap(Inputs, 'plots', 'contourf');</ItemCell>
            <ItemCell>% overlap map on tkmeans solution for simdataset output</ItemCell>
            <ItemCell>out = tkmeans(X, k*4, 0.05, 'plots', 'contourf', 'Ysave', true);</ItemCell>
            <ItemCell>overlapmap(out, 'plots', 'contourf');</ItemCell>
            <ItemCell>out = tclust(X, 10, 0.05, 100, 'plots', 'contour', 'Ysave', true);</ItemCell>
            <ItemCell>overlapmap(out, 'plots', 'contourf');</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example using simdataset to create heterogeneous and elliptical clusters and using tkmeans output as input for the overlap map.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>k = 3;</ItemCell>
            <ItemCell>v = 2;</ItemCell>
            <ItemCell>n = 50000;</ItemCell>
            <ItemCell>% restriction factor</ItemCell>
            <ItemCell>restr = 30;</ItemCell>
            <ItemCell>% Maximum overlap</ItemCell>
            <ItemCell>maxOm = 0.005;</ItemCell>
            <ItemCell>% Generate heterogeneous and elliptical clusters</ItemCell>
            <ItemCell>rng('default')</ItemCell>
            <ItemCell>rng(500, 'twister');</ItemCell>
            <ItemCell>out = MixSim(k, v, 'sph', false, 'restrfactor', restr, 'int', [0 10], ...</ItemCell>
            <ItemCell>    'Display', 'off', 'MaxOmega', maxOm, 'Display','off');</ItemCell>
            <ItemCell>% null noise</ItemCell>
            <ItemCell>alpha0 = 0;</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X, id] = simdataset(n, out.Pi, out.Mu, out.S, 'noiseunits', alpha0);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>gg = gscatter(X(:,1), X(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('Simulated data with %d groups in %d dimensions and %d units, \n with restriction factor %d and maximum overlap %.2f', ...</ItemCell>
            <ItemCell>    k, v, n, restr, maxOm);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex');</ItemCell>
            <ItemCell/>
            <ItemCell>% use tkmeans for a larger number of cluster and without trimming</ItemCell>
            <ItemCell>tkm = tkmeans(X, k*3, 0,'plots', 2,'Ysave',true, 'plots', 'ellipse');</ItemCell>
            <ItemCell/>
            <ItemCell>% overlap map with interctive mode</ItemCell>
            <ItemCell>overl = overlapmap(tkm, 'omegaStar', 0.01, 'plots', 'contourf');</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example using simdataset to create homogeneous and spherical clusters and using tkmeans.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>clear variables; clc; clf; close all</ItemCell>
            <ItemCell>% Specify k cluster in v dimensions with n obs</ItemCell>
            <ItemCell>k = 10;</ItemCell>
            <ItemCell>v = 2;</ItemCell>
            <ItemCell>n = 5000;</ItemCell>
            <ItemCell>% Generate homogeneous and spherical clusters</ItemCell>
            <ItemCell>rng('default')</ItemCell>
            <ItemCell>rng(100, 'twister');</ItemCell>
            <ItemCell>out = MixSim(k, v, 'sph', true, 'hom', true, 'int', [0 10], 'Display', 'off', 'BarOmega', 0.05, 'Display','off');</ItemCell>
            <ItemCell>% Simulating data</ItemCell>
            <ItemCell>[X, id] = simdataset(n, out.Pi, out.Mu, out.S);</ItemCell>
            <ItemCell>% Plotting data</ItemCell>
            <ItemCell>gscatter(X(:,1), X(:,2), id);</ItemCell>
            <ItemCell>str = sprintf('Simulated data with %d groups in %d dimensions and %d units', k, v, n);</ItemCell>
            <ItemCell>title(str,'Interpreter','Latex');</ItemCell>
            <ItemCell>clickableMultiLegend(num2str((1:k)'));</ItemCell>
            <ItemCell>% use tkmeans for a larger number of cluster and without trimming</ItemCell>
            <ItemCell>tkm = tkmeans(X, k*3, 0,'plots', 2,'Ysave',true, 'plots', 'ellipse');</ItemCell>
            <ItemCell/>
            <ItemCell>% overlap map with interctive mode</ItemCell>
            <ItemCell>overl = overlapmap(tkm, 'omegaStar', 0.01, 'plots', 'contourf');</ItemCell>
            <ItemCell>cascade;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>