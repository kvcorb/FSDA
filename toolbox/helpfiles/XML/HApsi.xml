<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->HApsi</Title>
   <Purpose><!--This is the second line of the .m file-->HApsi computes psi function  using Hampel proposal
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>u</Name>
         <ShortDesc>scaled residuals or Mahalanobis distances.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>n x 1 vector containing residuals or Mahalanobis distances for the n units of the sample</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ctuning</Name>
         <ShortDesc>tuning parameters.</ShortDesc>
         <TypeInd>Scalar or Vector.</TypeInd>
         <LongDesc>Scalar or vector of length 4 which specifies the value of the tuning constant c (scalar greater than 0 which controls the robustness/efficiency of the estimator) and the prefixed values of paramters a, b, c ctuning(1) = tuning constant which will multiply parameters a, b and c of Hampel rho (psi) function ctuning(2) = paramter a of Hampel rho (psi) function ctuning(3) = paramter b of Hampel rho (psi) function ctuning(4) = paramter c of Hampel rho (psi) function Remark: if length(ctuning)==1 values of a, b and c will be set to a=2*ctuning b=4*ctuning c=4*ctuning With these choices, if ctuning=1 the resulting influence function is nearly identical to the biweight with parameter 8.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>psiHA</Name>
         <ShortDesc>n x 1 vector</ShortDesc>
         <TypeInd>Values of Hampel psi function associated to the residuals or Mahalanobis distances for the n units of the sample.</TypeInd>
         <LongDesc> </LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->Function HApsi transforms vector u as follows.
\[
HApsi(u) = \left\{ \begin{array}{cc} u &amp; |u| \leq a \\
a \times \mbox{sign} (u) &amp; a \leq |u| &amp;lt; b \\
a \frac{c-|u|}{c-b} \times \mbox{sign} (u) &amp; b \leq |u| &amp;lt; c \\
0 &amp; |u| &amp;gt;= c \end{array} \right.
\]
where $a$= ctun *ctuning(2).
$b$= ctun *ctuning(3).
$c$= ctun *ctuning(4).
The default is $a$= 2*ctun.
$b$= 4*ctun.
$c$= 8*ctun.
It is necessary to have 0 &amp;lt;= a &amp;lt;= b &amp;lt;= c
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>D. C. Hoaglin, F. Mosteller, J. W. Tukey (1982), Understanding Robust and Exploratory Data Analysis Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>TBpsi</Item>
      <Item>HYPpsi</Item>
      <Item>OPTpsi</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Plot of psi function.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>% Plot of psi function.</ItemCell>
            <ItemCell>% Obtain bottom panel of Figure 11.10 p. 375 of</ItemCell>
            <ItemCell>% Hoaglin et al. (1987).</ItemCell>
            <ItemCell>close all</ItemCell>
            <ItemCell>x=-9:0.1:9;</ItemCell>
            <ItemCell>psiHA=HApsi(x,1);</ItemCell>
            <ItemCell>plot(x,psiHA,'LineWidth',2)</ItemCell>
            <ItemCell>xlabel('$u$','Interpreter','Latex','FontSize',14)</ItemCell>
            <ItemCell>ylabel(' Hampel $\psi(u,[2,4,8]) $','Interpreter','Latex')</ItemCell>
            <ItemCell>a=2;</ItemCell>
            <ItemCell>b=4;</ItemCell>
            <ItemCell>c=8;</ItemCell>
            <ItemCell>hold('on')</ItemCell>
            <ItemCell>stem(a,a,'LineWidth',1,'LineStyle',':')</ItemCell>
            <ItemCell>stem(b,a,'LineWidth',1,'LineStyle',':')</ItemCell>
            <ItemCell>stem(-a,-a,'LineWidth',1,'LineStyle',':')</ItemCell>
            <ItemCell>stem(-b,-a,'LineWidth',1,'LineStyle',':')</ItemCell>
            <ItemCell>ax=axis;</ItemCell>
            <ItemCell>ylim([ax(3)-0.1 ax(4)+0.1])</ItemCell>
            <ItemCell>text([a;-a],[-0.1;0.1],{'$a$';'$-a$'},'Interpreter','latex','FontSize',14)</ItemCell>
            <ItemCell>text([b;-b],[-0.1;0.1],{'$b$';'$-b$'},'Interpreter','latex','FontSize',14)</ItemCell>
            <ItemCell>text([c;-c],[-0.1;0.1],{'$c$';'$-c$'},'Interpreter','latex','FontSize',14)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>