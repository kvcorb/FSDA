<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->fanplot</Title>
   <Purpose><!--This is the second line of the .m file-->fanplot plots the fan plot for transformation in linear regression</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Data to plot</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure containing the following fields&#xD;
     out.Score  =  (n-init) x length(la)+1 matrix: &#xD;
               1st col = fwd search index; &#xD;
               2nd col = value of the score test in each step&#xD;
               of the fwd search for la(1); &#xD;
               ...; &#xD;
               last col  =  value of the score test in each step&#xD;
               of the fwd search for la(end). &#xD;
       out.la   =  vector containing the values of lambda for which fan plot&#xD;
               is constructed. &#xD;
       out.bs   =  matrix of size p x length(la) containing the units forming&#xD;
               the initial subset for each value of lambda. &#xD;
      out. Un   =  cell of size length(la). out.Un{i} is a (n-init) x 11&#xD;
               matrix which contains the unit(s) included in the subset&#xD;
               at each step of the fwd search (necessary only if option&#xD;
               datatooltip or databrush are not empty). &#xD;
         out.y  = a vector containing the response (necessary only if option&#xD;
              databrush is true). &#xD;
         out.X  = a matrix containing the explanatory variables (necessary&#xD;
              only if option databrush is not empty). &#xD;
      </LongDesc>
         <Example> </Example>
         <DataType>struct</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>Score</Value>
               <Description>(n-init) x length(la)+1 matrix: &#xD;
               1st col = fwd search index; &#xD;
               2nd col = value of the score test in each step&#xD;
               of the fwd search for la(1); &#xD;
               ...; &#xD;
               last col  =  value of the score test in each step&#xD;
               of the fwd search for la(end).</Description>
            </ItemCell>
            <ItemCell>
               <Value>la</Value>
               <Description>vector containing the values of lambda for which fan plot&#xD;
               is constructed.</Description>
            </ItemCell>
            <ItemCell>
               <Value>bs</Value>
               <Description>matrix of size p x length(la) containing the units forming&#xD;
               the initial subset for each value of lambda. &#xD;
      out. Un   =  cell of size length(la). out.Un{i} is a (n-init) x 11&#xD;
               matrix which contains the unit(s) included in the subset&#xD;
               at each step of the fwd search (necessary only if option&#xD;
               datatooltip or databrush are not empty).</Description>
            </ItemCell>
            <ItemCell>
               <Value>y</Value>
               <Description>a vector containing the response (necessary only if option&#xD;
              databrush is true).</Description>
            </ItemCell>
            <ItemCell>
               <Value>X</Value>
               <Description>a matrix containing the explanatory variables (necessary&#xD;
              only if option databrush is not empty).</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>label</Name>
         <ShortDesc>Labels</ShortDesc>
         <TypeInd>Cell array of strings</TypeInd>
         <LongDesc>Cell containing the labels of the units (optional&#xD;
                   argument used when datatooltip=1). If this field is not&#xD;
                   present labels row1, ..., rown will be automatically&#xD;
                   created and included in the pop up datatooltip window.&#xD;
                   </LongDesc>
         <Example> 'corr',1&#xD;
                   </Example>
         <DataType>Cell array of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>Confidence level</ShortDesc>
         <TypeInd>Scalar or vector</TypeInd>
         <LongDesc>Confidence level for the bands (default is 0.99, that is&#xD;
                   we plot two horizontal lines in correspondence of value&#xD;
                   -2.58 and 2.58).&#xD;
                   </LongDesc>
         <Example> 'conflev',[0.9 0.95 0.99]&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>Information about the unit selected</ShortDesc>
         <TypeInd>Empty value or structure</TypeInd>
         <LongDesc>The&#xD;
                   default is datatooltip=''.&#xD;
                   If datatooltip is not empty the user can use the mouse&#xD;
                   in order to have information about the unit selected,&#xD;
                   the step in which the unit enters the search and the&#xD;
                   associated label. If datatooltip is a structure, it is&#xD;
                   possible to control the aspect of the data cursor (see&#xD;
                   function datacursormode for more details or the&#xD;
                   examples below). The default options of the structure&#xD;
                   are DisplayStyle='Window' and SnapToDataVertex='on'.&#xD;
                   </LongDesc>
         <Example> 'datatooltip',''&#xD;
                   </Example>
         <DataType>Empty value or structure</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>Databrush options</ShortDesc>
         <TypeInd>Empty value, scalar or cell</TypeInd>
         <LongDesc>DATABRUSH IS AN EMPTY VALUE: If databrush is an empty&#xD;
                   value (default), no brushing is done. The activation of&#xD;
                   this option (databrush is a scalar or a cell) enables&#xD;
                   the user  to select a set of trajectories in the&#xD;
                   current plot and to see them highlighted in the y|X&#xD;
                   plot (notice that if the plot y|X does not exist it is&#xD;
                   automatically created). In addition, brushed units can&#xD;
                   be highlighted in the other following plots (only if&#xD;
                   they are already open): monitoring residual plot&#xD;
                   monitoring leverage plot maximum studentized residual&#xD;
                   $s^2$ and $R^2$ Cook distance and modified Cook distance&#xD;
                   deletion t statistics. &#xD;
                   The window style of the&#xD;
                   other figures is set equal to that which contains the&#xD;
                   monitoring residual plot. In other words, if the&#xD;
                   monitoring residual plot is docked all the other&#xD;
                   figures will be docked too. &#xD;
                   DATABRUSH IS A SCALAR: If databrush is a scalar the default selection tool is a&#xD;
                   rectangular brush and it is possible to brush only once&#xD;
                   (that is persist=''). &#xD;
                   DATABRUSH IS A CELL: If databrush is a cell, it is possible to use all&#xD;
                   optional arguments of function selectdataFS.m and LXS.m inside the curly brackets of&#xD;
                   option databrush and the following optional argument:&#xD;
                  persist = Persist is an empty value or a scalar containing&#xD;
                   the strings 'on' or 'off'. If persist = 'on' or 'off'&#xD;
                   brusing can be done as many time as the&#xD;
                   user requires. In case persist='off', every time a new&#xD;
                   brush is performed, units previously brushed are&#xD;
                   removed. In case persist='on' the unit(s)&#xD;
                   currently brushed are added to those previously&#xD;
                   brushed. However in both cases, if the user brushes a&#xD;
                   different trajectory from the one previously brushed,&#xD;
                   the previos brushed plots are stored in a figure in the&#xD;
                   background. The default value of persist is '' that is&#xD;
                   brushing is allowed only once.&#xD;
                 bivarfit = This option adds one or more least square&#xD;
                   lines, based on SIMPLE REGRESSION of y on Xi, to the&#xD;
                   plots of y|Xi.&#xD;
                   If bivarfit = ''&#xD;
                   is the default: no line is fitted.&#xD;
                   If bivarfit = '1'&#xD;
                   fits a single ols line to all points of each bivariate&#xD;
                   plot in the scatter matrix y|X.&#xD;
                   If bivarfit = '2'&#xD;
                   fits two ols lines: one to all points and another to&#xD;
                   the group of the genuine observations. The group of the&#xD;
                   potential outliers is not fitted.&#xD;
                   If bivarfit = '0'&#xD;
                   fits one ols line to each group. This is useful for the&#xD;
                   purpose of fitting mixtures of regression lines.&#xD;
                   If bivarfit = 'i1' or 'i2' or 'i3' etc&#xD;
                   fits an ols line to a specific group, the one with&#xD;
                   index 'i' equal to 1, 2, 3 etc. Again, useful in case&#xD;
                   of mixtures.&#xD;
                 multivarfit = This option adds one or more least square lines,&#xD;
                   based on MULTIVARIATE REGRESSION of y on X, to the&#xD;
                   plots of y|Xi.&#xD;
                   If multivarfit = ''&#xD;
                   is the default: no line is fitted.&#xD;
                   If multivarfit = '1'&#xD;
                   fits a single ols line to all points of each bivariate&#xD;
                   plot in the scatter matrix y|X. The line added to the&#xD;
                   scatter plot y|Xi is avconst +Ci*Xi, where Ci is the&#xD;
                   coefficient of Xi in the multivariate regression and&#xD;
                   avconst is the effect of all the other explanatory&#xD;
                   variables different from Xi evaluated at their centroid&#xD;
                   (that is overline{y}'C))&#xD;
                   If multivarfit = '2'&#xD;
                   exactly equal to multivarfit ='1' but this time we add the&#xD;
                   line based on the group of unselected observations.&#xD;
                   </LongDesc>
         <Example> 'databrush',1&#xD;
                   </Example>
         <DataType>Empty value, scalar or cell.</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>titl</Name>
         <ShortDesc>Title</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>A label for the title (default: 'Fan plot')&#xD;
                   </LongDesc>
         <Example> 'titl','Fan plot'&#xD;
                   </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>x-axis label</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>A label for the x-axis (default:&#xD;
                   'Subset size m').&#xD;
                   </LongDesc>
         <Example> 'labx','Subset size m'&#xD;
                   </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>y-axis label</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>a label for the y-axis&#xD;
                   (default:'Score test statistic').&#xD;
                   </LongDesc>
         <Example> 'laby','Score test statistic'&#xD;
                   </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>Min and Max of the x axis</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and maximum&#xD;
                   of the x axis. Default value is [init n].&#xD;
                   </LongDesc>
         <Example> 'xlimx',[init n]&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>Min and Max of the y axis</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and&#xD;
                   maximum of the y axis. Default value for&#xD;
                   ylimy(1)=max(min(score_test),-20). Default value for&#xD;
                   ylimy(2)=min(max(score_test),20).&#xD;
                   </LongDesc>
         <Example> 'ylimy',[0 100]&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwd</Name>
         <ShortDesc>Linewidth</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls linewidth of the curves which&#xD;
                   contain the score test. Default line width=2. &#xD;
                   </LongDesc>
         <Example> 'lwd',2&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>Width of the envelope lines</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls the width of the lines associated&#xD;
                   with the envelopes. Default is lwdenv=1.&#xD;
                   </LongDesc>
         <Example> 'lwdenv',1&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>Font size of the labels</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls the font size of the labels of&#xD;
                   the axes and of the labels inside the plot. Default&#xD;
                   value is 12.&#xD;
                   </LongDesc>
         <Example> 'FontSize',12&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>Size of the numbers of the axis</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls the size of the numbers of the&#xD;
                   axes. Default value is 10.&#xD;
                   </LongDesc>
         <Example> 'SizeAxesNum',10&#xD;
                   </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nameX</Name>
         <ShortDesc>Labels of the X variables</ShortDesc>
         <TypeInd>Cell array of strings</TypeInd>
         <LongDesc>Cell array of strings of length p containing the labels&#xD;
                   of the varibles of the regression dataset. If it is empty&#xD;
                 	(default) the sequence X1, ..., Xp will be created&#xD;
                   automatically.&#xD;
                   </LongDesc>
         <Example> 'nameX',''&#xD;
                   </Example>
         <DataType>Cell array of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>namey</Name>
         <ShortDesc>Labels of the y variable</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>String containing the label of the response variable.&#xD;
                   </LongDesc>
         <Example> 'namey',''&#xD;
                   </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Handle of the plot</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>String which identifies the handle of the plot which&#xD;
                   is about to be created. The default is to use tag&#xD;
                   pl_fan. Notice that if the program finds a plot which&#xD;
                   has a tag equal to the one specified by the user, then&#xD;
                   the output of the new plot overwrites the existing one&#xD;
                   in the same window else a new window is created.&#xD;
                   </LongDesc>
         <Example> 'tag','pl_mycov'&#xD;
                   </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson and Riani (2000), Robust Diagnostic Regression Analysis,&#xD;
   Springer Verlag, New York.</Item>
      <Item>Atkinson, A.C. and Riani, M. (2002a). Tests in the fan plot for robust,&#xD;
   diagnostic transformations in regression, Chemometrics and Intelligent&#xD;
   Laboratory Systems, Vol. 60, pp. 87–100.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION--></SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>fanplot with all default options.</Title>
         <Desc>&#xD;
     load the wool data&#xD;</Desc>
         <MATLABcode>
    XX=load('wool.txt');&#xD;
    y=XX(:,end);&#xD;
    X=XX(:,1:end-1);&#xD;
    % FSRfan and fanplot with all default options&#xD;
    [out]=FSRfan(y,X);&#xD;
    fanplot(out);&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>fanplot with optional arguments.</Title>
         <Desc>&#xD;
    FSRfan and fanplot with specified lambda&#xD;</Desc>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    % la = vector contanining the most common values of the transformation&#xD;
    % parameter&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out);&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt;
    FSRfan and fanplot with databrush option.</Title>
         <Desc/>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out,'databrush','1');&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt;
    FSRfan and fanplot with databrush, persist, label and RemoveLabels options.</Title>
         <Desc>&#xD;
    Removelabels is a parameter of SelectdataFS function&#xD;</Desc>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out,'databrush',{ 'persist' 'on' 'Label' 'on' 'RemoveLabels' 'off'});&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt;
    FSRfan and fanplot with databrush, bivarfit, label and  RemoveLabels options.</Title>
         <Desc/>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out,'databrush',{ 'bivarfit' '2' 'Label' 'on' 'RemoveLabels' 'off'});&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt;
    FSRfan and fanplot with databrush  and selectionmode options.</Title>
         <Desc>&#xD;
    Example of the use of persistent cumulative brush.&#xD;
    Every time a brushing action is performed&#xD;
    current highlightments are added to previous highlightments&#xD;
&#xD;</Desc>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out,'databrush',{'selectionmode','Brush'});&#xD;
    fanplot(out,'databrush',{'selectionmode' 'Lasso' 'persist' 'off'})&#xD;
    fanplot(out,'databrush',{'selectionmode' 'Rect' 'persist' 'on'})&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>fanplot with datatooltip passed as scalar.</Title>
         <Desc>&#xD;
    That is using default options for datacursor (i.e. DisplayStyle=window).&#xD;</Desc>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out,'datatooltip',1);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Construct fan plot specifying the confidence level and the xlimits.</Title>
         <Desc/>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[0 1/3 0.4 0.5];&#xD;
    [out]=FSRfan(y,X,'la',la,'init',size(X,2)+2,'nsamp',20000);&#xD;
    fanplot(out,'xlimx',[100 300],'conflev',0.95);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt;
    Example of the use of multivarfit and xlimx.</Title>
         <Desc/>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[0 1/3 0.4 0.5];&#xD;
    [outs]=FSRfan(y,X,'la',la,'init',size(X,2)+2,'nsamp',20000);&#xD;
    fanplot(outs,'xlimx',[10 520],'databrush',{'selectionmode' 'Brush' 'multivarfit' '2'})&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 6.&lt;/i&gt;
    Example of the use of FlagSize, namey, namex, lwd,FontSize, SizeAxesNum.</Title>
         <Desc/>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
     namey='Sales';&#xD;
     nameX={'Number of visits', 'Age', 'Number of persons in the family'};&#xD;
    %FlagSize controls how large must be the highlighted points. It is a&#xD;
    %parametr of selectdataFS.&#xD;
     fanplot(out,'xlimx',[10 520],'lwd',1.5,'FontSize',11,'SizeAxesNum',11,'nameX',nameX,'namey',namey,'databrush',{'selectionmode' 'Brush'...&#xD;
     'multivarfit' '2' 'FlagSize' '5'})&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 7.&lt;/i&gt;
     Only one brush specifying labels for y and X.</Title>
         <Desc/>
         <MATLABcode>
    load('loyalty.txt');&#xD;
    y=loyalty(:,4);&#xD;
    X=loyalty(:,1:3);&#xD;
    la=[-1 -0.5 0 0.5 1];&#xD;
    [out]=FSRfan(y,X,'la',la);&#xD;
    fanplot(out,'databrush',{'selectionmode' 'Brush' 'FlagSize' '5'},'nameX',nameX,'namey',namey)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>