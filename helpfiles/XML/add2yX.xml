<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->add2yX</Title>
   <Purpose><!--This is the second line of the .m file-->add2yX adds objects (personalized clickable multilegends and text labels) to the yXplot
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>H</Name>
         <ShortDesc>handles to the lines on the graphs.</ShortDesc>
         <TypeInd>2D or 3D array.</TypeInd>
         <LongDesc>H is an array of handles to the lines on the graphs. The array's third dimension corresponds to groups in the grouping variable.
For more details see the output arguments of gplotmatrix.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>AX</Name>
         <ShortDesc>handles to the axes of the individual plots.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>AX is a matrix of handles to the axes of the individual plots.
For more details see the output arguments of gplotmatrix.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>BigAx</Name>
         <ShortDesc>handle to big (invisible) axes framing the entire plot matrix.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>For more details see the output arguments of gplotmatrix.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>bivarfit</Name>
         <ShortDesc>Add a line fit.</ShortDesc>
         <TypeInd>Char.</TypeInd>
         <LongDesc>'0' fit a line to each group;
'1' fit 1 line to all data, regardless the groups;
'2' fit a line on all data and a line to relevant data;
'' the default, nothing is added.</LongDesc>
         <Example>'bivarfit','1'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>multivarfit</Name>
         <ShortDesc>Add a multivariate fit.</ShortDesc>
         <TypeInd>Char.</TypeInd>
         <LongDesc>'1' one multivariate fit on all units '2' one multivariate fit on all units and one on relevant data '' the default, nothing is added</LongDesc>
         <Example>'multivarfit','1'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labeladd</Name>
         <ShortDesc>Add labels.</ShortDesc>
         <TypeInd>Char.</TypeInd>
         <LongDesc>'1' add labels to relevant units '' the default, nothing is added</LongDesc>
         <Example>'labeladd','1'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>intercept</Name>
         <ShortDesc>Indicator for constant term.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>intercept = 1 (default) assumes the intercept for the bivarfit and multivarfit. When intercept = 0, the intercept is not used for the fits.</LongDesc>
         <Example>'intercept',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>userleg</Name>
         <ShortDesc>user legend.</ShortDesc>
         <TypeInd>Char.</TypeInd>
         <LongDesc>It is used to control the legend of the plot.
- Default is ''. In this case, existing legends are left as they are and simply made clickable; however, if there is no legend, a default one is created using the syntax 'Group 1', 'Group 2', etc.
- If it is set to '1', the legends are updated depending on the context of use and are made clickable. The context is determined by the occurence of specific words in the Tag of the current figure. The strings/contexts currently addressed are:
'outlier' (for 'Outliers' and 'Normal units'), 'brush' (for 'Brushed units 1', 'Brushed units 2', etc.), 'group' (for 'Group 1', 'Group 2', etc.), '' i.e. the Tag of the figure is not defined;
in this case the legend takes the values in the DisplayName property of the scatter matrix. This is determined by the 'group' option of the spmplot or gplotmatrix functions.
- If it is a cell of strings, e.g. {'FIAT' ; 'BMW' ; 'VOLVO'}, then such strings are used for the legend.</LongDesc>
         <Example>'userleg','1'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->add2yX essentially used within FSDA function yXplot.m. However its logic can be also demonstrated with MATLAB function gplotmatrix.m, as in the examples below.
As default add2yX makes legends in the existing yX plot matrix clickable or creates a clickable multilegend if the legend does not exist.
Note that the function extracts the data from the graphical objects in the plot. At the current stage the objects that can be added to yXplot using add2yX are:
- a bivariate fit on each panel of yXplot (see olsline.m);
- a multivariate fit that is shown on each panel of yXplt;
- the labels of relevant observations, e.g. outliers or brushed groups.
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Tufte E.R. (1983), The visual display of quantitative information, Graphics Press, Cheshire</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>add2spm</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>add2yX with all default options.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>n=100;</ItemCell>
            <ItemCell>p=3;</ItemCell>
            <ItemCell>X=randn(n,p);</ItemCell>
            <ItemCell>y=100+randn(n,1);</ItemCell>
            <ItemCell>sel=51:100;</ItemCell>
            <ItemCell>y(sel)=y(sel)+2;</ItemCell>
            <ItemCell>group=ones(n,1);</ItemCell>
            <ItemCell>group(sel)=2;</ItemCell>
            <ItemCell>[H,AX,BigAx] = gplotmatrix(X,y,group);</ItemCell>
            <ItemCell>% The legengs are not clickable</ItemCell>
            <ItemCell>add2yX(H,AX,BigAx)</ItemCell>
            <ItemCell>% Now the legends become clickable</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Compare gplotmatrix and addyX with yXplot for IRIS data.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load fisheriris;</ItemCell>
            <ItemCell>% Create scatter plot matrix with specific legends</ItemCell>
            <ItemCell>% plot Sepal length (y) againt the other variables</ItemCell>
            <ItemCell>y=meas(:,1);</ItemCell>
            <ItemCell>X=meas(:,2:4);</ItemCell>
            <ItemCell>[H,AX,BigAx]=gplotmatrix(X,y,species,[],[],[],'on');</ItemCell>
            <ItemCell>% The legends are not clickable</ItemCell>
            <ItemCell>add2yX(H,AX,BigAx)</ItemCell>
            <ItemCell>% Now the legends become clickable</ItemCell>
            <ItemCell>% It is easier to call directly function yXplot</ItemCell>
            <ItemCell>[H,AX,BigAx]=yXplot(meas(:,1),meas(:,2:4),species)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of use of option bivarfit.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load fisheriris;</ItemCell>
            <ItemCell>% Create scatter plot matrix with specific legends</ItemCell>
            <ItemCell>% plot Sepal length (y) againt the other variables</ItemCell>
            <ItemCell>y=meas(:,1);</ItemCell>
            <ItemCell>X=meas(:,2:4);</ItemCell>
            <ItemCell>[H,AX,BigAx]=yXplot(meas(:,1),meas(:,2:4),species)</ItemCell>
            <ItemCell>% add a regression line to each group</ItemCell>
            <ItemCell>add2yX(H,AX,BigAx,'bivarfit','0')</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>