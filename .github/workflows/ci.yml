# This is a basic workflow to help you get started with MATLAB Actions

name: FSDA CI tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab (nice)
  workflow_dispatch:
      

jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        release: [latest]
        fxtest: [regression, regressionTS, regressionLTSts, regressionEXT, graphics, multivariate, multivariate-clustering, regression-clustering, mixsim, utilities, tclustMULT, tclustMULTgpcm]

    
    # The type of runner that the job will run on
    runs-on: ${{matrix.platform}}
    
    # Crucial for creating environment variables for runAllMyTestsFS.m
    env:
      CATEGORY_TO_TEST:  ${{matrix.fxtest}}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
          
      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.platform }}-${{ matrix.release }}
            
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2-beta
        with: 
          release: ${{matrix.release}}
          products: |
            Statistics_and_Machine_Learning_Toolbox
            Parallel_Computing_Toolbox
            Optimization_Toolbox
            Econometrics_Toolbox
      # Runs a set of commands using the runners shell
      - name: Check MATLAB Install
        uses: matlab-actions/run-command@v1
        with:
          command: "run runAllMyTestsFS.m" 
          

          
