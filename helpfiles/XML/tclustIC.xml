<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->tclustIC</Title>
   <Purpose><!--This is the second line of the .m file-->tclustIC computes tclust for different number of groups k and restriction factors c</Purpose>
   <Description><!--Description section-->tclustIC (where the last two letters stand for 'Information Criterion')&#xD;
   computes the values of BIC (MIXMIX), ICL (MIXCLA) or CLA (CLACLA), for&#xD;
   different values of k (number of groups) and difference values of c&#xD;
   (restriction factor), for a prespecified level of trimming. If Parallel&#xD;
   Computing toolbox is installed, parfor is used to compute tclust for&#xD;
   different values of c. In order to minimize randomness, given k, the&#xD;
   same subsets are used for each value of c.</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>Y</Name>
         <ShortDesc>Data matrix containining n observations on v variables&#xD;
               Rows of Y represent observations, and columns represent&#xD;
               variables</ShortDesc>
         <TypeInd>Observations (rows) with missing (NaN) or or&#xD;
               infinite (Inf) values will automatically be excluded from&#xD;
               the computations</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType> double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>kk</Name>
         <ShortDesc>Integer vector specifying the number of mixture components &#xD;
               (clusters) for which the BIC is to be calculated</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>The default value of kk is 1:5.&#xD;
                 </LongDesc>
         <Example> 'kk',1:4&#xD;
                 </Example>
         <DataType>int16 | int32 | single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>cc</Name>
         <ShortDesc>A vector specifying the values of the restriction factor&#xD;
               which have to be considered</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>The default value of cc is [1 2 4 8 16 32 64 128]&#xD;
                 </LongDesc>
         <Example> 'cc',[1 2 4 8 128]&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>whichIC</Name>
         <ShortDesc>Character which specifies which information criteria must&#xD;
               be computed for each k (number of groups) and each value of&#xD;
               the restriction factor (c)</ShortDesc>
         <TypeInd>Possible values for whichIC are:&#xD;
               'MIXMIX'  = a mixture model is fitted and to&#xD;
                   compute the information criterion the mixture&#xD;
                   likelihood is used</TypeInd>
         <LongDesc>This option corresponds to the use of&#xD;
                   the Bayesian Information criterion (BIC). In output&#xD;
                   structure out just the matrix out.MIXMIX is given.&#xD;
               'MIXCLA'  = a mixture model is fitted but to compute the &#xD;
                   information criterion the classification likelihood is&#xD;
                   used. This option corresponds to the use of the&#xD;
                   Integrated Complete Likelihood (ICL). In output&#xD;
                   structure out just the matrix out.MIXCLA is given.&#xD;
               'CLACLA' =  everything is based on the classification &#xD;
                   likelihood. This information criterion will be called&#xD;
                   CLA. In output structure out just the matrix out.CLACLA&#xD;
                   is given.&#xD;
               'ALL' = both classification and mixture likelihood are used. &#xD;
                   In this case all the three information criteria CLA,&#xD;
                   ICL and BIC are computed. In output structure out all&#xD;
                   the three matrices out.MIXMIX and out.MIXCLA and&#xD;
                   out.CLACLA are given.&#xD;
                 </LongDesc>
         <Example> 'whichIC','ALL'&#xD;
                 </Example>
         <DataType>character</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>alpha</Name>
         <ShortDesc>global trimming level</ShortDesc>
         <TypeInd>Fraction or number of observations&#xD;
               which have to be trimmed</TypeInd>
         <LongDesc>alpha is a scalar between 0 and&#xD;
               0.5 or an integer specifying the number of observations to&#xD;
               be trimmed. If alpha = 0 all observations are considered.&#xD;
               More in detail, if 0 &amp;lt; alpha &amp;lt; 1 clustering is based on &#xD;
               h = fix(n*(1-alpha)) observations. Else if alpha is an &#xD;
               integer greater than 1 clustering is based on h=n-floor(alpha). &#xD;
               The default value of alpha which is used is 0.&#xD;
                 </LongDesc>
         <Example> 'alpha',0&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nsamp</Name>
         <ShortDesc>number of subsamples to extract</ShortDesc>
         <TypeInd>Scalar or matrix</TypeInd>
         <LongDesc>If nsamp is a scalar it contains the number of subsamples&#xD;
               which will be extracted. If nsamp=0 all subsets will be&#xD;
               extracted.&#xD;
               Remark - if the number of all possible subset is &amp;lt;300 the&#xD;
               default is to extract all subsets, otherwise just 300.&#xD;
               - If nsamp is a matrix it contains in the rows the indexes &#xD;
                 of the subsets which have to be extracted. nsamp in this&#xD;
                 case can be conveniently generated  by function subsets.&#xD;
                 nsamp can have k columns or k*(v+1) columns. If nsamp has&#xD;
                 k columns the k initial centroids each iteration i are&#xD;
                 given by X(nsamp(i,:),:) and the covariance matrices are&#xD;
                 equal to the identity.&#xD;
               - If nsamp has k*(v+1) columns the initial centroids and &#xD;
                 covariance matrices in iteration i are computed as follows&#xD;
                 X1=X(nsamp(i,:),:)&#xD;
                 mean(X1(1:v+1,:)) contains the initial centroid for group 1&#xD;
                 cov(X1(1:v+1,:)) contains the initial cov matrix for group 1               1&#xD;
                 mean(X1(v+2:2*v+2,:)) contains the initial centroid for group 2&#xD;
                 cov((v+2:2*v+2,:)) contains the initial cov matrix for group 2               1&#xD;
                 ...&#xD;
                 mean(X1((k-1)*v+1:k*(v+1))) contains the initial centroids for group k&#xD;
                 cov(X1((k-1)*v+1:k*(v+1))) contains the initial cov matrix for group k&#xD;
               REMARK - if nsamp is not a scalar option option below&#xD;
               startv1 is ignored. More precisely if nsamp has k columns&#xD;
               startv1=0 elseif nsamp has k*(v+1) columns option startv1=1.&#xD;
                 </LongDesc>
         <Example> 'nsamp',1000&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refsteps</Name>
         <ShortDesc>Number of refining iterations</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Number of refining  &#xD;
               iterations in subsample.  Default is 15. refsteps = 0 means&#xD;
               "raw-subsampling" without iterations.&#xD;
                 </LongDesc>
         <Example> 'refsteps',10&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftol</Name>
         <ShortDesc>scalar</ShortDesc>
         <TypeInd>Default value of tolerance for the refining steps</TypeInd>
         <LongDesc>The default value is 1e-14;&#xD;
                 </LongDesc>
         <Example> 'reftol',1e-05&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>equalweights</Name>
         <ShortDesc>cluster weights in the concentration and assignment steps</ShortDesc>
         <TypeInd>Logical</TypeInd>
         <LongDesc>A logical value specifying whether cluster weights&#xD;
               shall be considered in the concentration, assignment steps&#xD;
               and computation of the likelihood.&#xD;
                 </LongDesc>
         <Example> 'equalweights',true&#xD;
                 </Example>
         <DataType>Logical</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>startv1</Name>
         <ShortDesc>how to initialize centroids and cov matrices</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If startv1 is 1 then initial&#xD;
               centroids and and covariance matrices are based on (v+1)&#xD;
               observations randomly chosen, else each centroid is&#xD;
               initialized taking a random row of input data matrix and&#xD;
               covariance matrices are initialized with identity matrices.&#xD;
               Remark 1- in order to start with a routine which is in the&#xD;
               required parameter space, eigenvalue restrictions are&#xD;
               immediately applied. The default value of startv1 is 1.&#xD;
               Remark 2 - option startv1 is used just if nsamp is a scalar&#xD;
               (see for more details the help associated with nsamp).&#xD;
                 </LongDesc>
         <Example> 'startv1',1&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>restr</Name>
         <ShortDesc>The type of restriction to be applied on the cluster scatter &#xD;
               matrices</ShortDesc>
         <TypeInd>Valid values are 'eigen' (default), or 'deter'</TypeInd>
         <LongDesc>eigen implies restriction on the eigenvalues while deter&#xD;
               implies restrictions on the determinant.&#xD;
                 </LongDesc>
         <Example> 'restr','deter'&#xD;
                 </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If plots = 1, a plot of the&#xD;
               BIC (MIXMIX), ICL (MIXCLA)curve and CLACLA is shown on the&#xD;
               screen. The plots which are shown depend on the input&#xD;
               option 'whichIC'.&#xD;
                 </LongDesc>
         <Example> 'plots',1&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>numpool</Name>
         <ShortDesc>scalar</ShortDesc>
         <TypeInd>If numpool &amp;gt; 1, the routine automatically checks if &#xD;
               the Parallel Computing Toolbox is installed and distributes&#xD;
               the random starts over numpool parallel processes</TypeInd>
         <LongDesc>If&#xD;
               numpool &amp;lt;= 1, the random starts are run sequentially. By&#xD;
               default, numpool is set equal to the number of physical&#xD;
               cores available in the CPU (this choice may be inconvenient&#xD;
               if other applications are running concurrently). The same&#xD;
               happens if the numpool value chosen by the user exceeds the&#xD;
               available number of cores. REMARK 1: up to R2013b, there&#xD;
               was a limitation on the maximum number of cores that could&#xD;
               be addressed by the parallel processing toolbox (8 and,&#xD;
               more recently, 12). From R2014a, it is possible to run a&#xD;
               local cluster of more than 12 workers.&#xD;
               REMARK 2: Unless you adjust the cluster profile, the&#xD;
               default maximum number of workers is the same as the&#xD;
               number of computational (physical) cores on the machine.&#xD;
               REMARK 3: In modern computers the number of logical cores&#xD;
               is larger than the number of physical cores. By default,&#xD;
               MATLAB is not using all logical cores because, normally,&#xD;
               hyper-threading is enabled and some cores are reserved to&#xD;
               this feature.&#xD;
               REMARK 4: It is because of Remarks 3 that we have chosen as&#xD;
               default value for numpool the number of physical cores&#xD;
               rather than the number of logical ones. The user can&#xD;
               increase the number of parallel pool workers allocated to&#xD;
               the multiple start monitoring by:&#xD;
               - setting the NumWorkers option in the local cluster profile&#xD;
                 settings to the number of logical cores (Remark 2). To do&#xD;
                 so go on the menu "Home|Parallel|Manage Cluster Profile"&#xD;
                 and set the desired "Number of workers to start on your&#xD;
                 local machine".&#xD;
               - setting numpool to the desired number of workers;&#xD;
               Therefore, *if a parallel pool is not already open*,&#xD;
               UserOption numpool (if set) overwrites the number of&#xD;
               workers set in the local/current profile. Similarly, the&#xD;
               number of workers in the local/current profile overwrites&#xD;
               default value of 'numpool' obtained as feature('numCores')&#xD;
               (i.e. the number of physical cores).&#xD;
              REMARK 5: the parallelization refers to the ...&#xD;
                 </LongDesc>
         <Example> 'numpool',4&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>cleanpool</Name>
         <ShortDesc>cleanpool is 1 if the parallel pool has to be cleaned after&#xD;
               the execution of the routine</ShortDesc>
         <TypeInd>Otherwise it is 0</TypeInd>
         <LongDesc>The&#xD;
               default value of cleanpool is 1. Clearly this option has an&#xD;
               effect just if previous option numpool is &amp;gt; 1.&#xD;
                 </LongDesc>
         <Example> 'cleanpool',1&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Message on the screen</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls whether &#xD;
               to display or not messages about code execution.&#xD;
                 </LongDesc>
         <Example> 'msg',1&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nocheck is equal to 1 &#xD;
               no check is performed on matrix Y. As default nocheck=0.&#xD;
                 </LongDesc>
         <Example> 'nocheck',10&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>Ysave</Name>
         <ShortDesc>Scalar that is set to 1 to request that the input matrix Y&#xD;
               is saved into the output structure out</ShortDesc>
         <TypeInd>Default is 1, that&#xD;
               is  matrix Y is saved inside output structure out</TypeInd>
         <LongDesc>%       </LongDesc>
         <Example> 'Ysave',1&#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc>
            <ItemCell>
               <Value>CLACLA</Value>
               <Description>matrix of size 5-times-8 if kk and cc are not&#xD;
                   specififed else it is a matrix of size length(kk)-times&#xD;
                   length(cc) containinig the value of the penalized&#xD;
                   classification likelihood. This output is present only&#xD;
                   if 'whichIC' is 'CLACLA' or 'whichIC' is 'ALL'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>IDXCLA</Value>
               <Description>cell of size 5-times-8 if kk and cc are not&#xD;
                   specififed else it is a cell of size length(kk)-times&#xD;
                   length(cc). Each element of the cell is a vector of&#xD;
                   length n containinig the assignment of each unit using&#xD;
                   the classification model. This output is present only&#xD;
                   if 'whichIC' is 'CLACLA' or 'whichIC' is 'ALL'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>MIXMIX</Value>
               <Description>matrix of size 5-times-8 if kk and cc are not&#xD;
                   specififed else it is a matrix of size length(kk)-times&#xD;
                   length(cc) containinig the value of the penalized&#xD;
                   mixture likelihood. This output is present only if&#xD;
                   'whichIC' is 'MIXMIX' or 'whichIC' is 'ALL'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>MIXCLA</Value>
               <Description>matrix of size 5-times-8 if kk and cc are not&#xD;
                   specififed else it is a matrix of size length(kk)-times&#xD;
                   length(cc) containinig the value of the ICL. This&#xD;
                   output is present only if 'whichIC' is 'MIXCLA' or&#xD;
                   'whichIC' is 'ALL'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>IDXMIX</Value>
               <Description>cell of size 5-times-8 if kk and cc are not&#xD;
                   specififed else it is a cell of size length(kk)-times&#xD;
                   length(cc). Each element of the cell is a vector of&#xD;
                   length n containinig the assignment of each unit using&#xD;
                   the mixture model. This output is present only if&#xD;
                   'whichIC' is 'MIXMIX', 'MIXCLA' or 'ALL'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>kk</Value>
               <Description>vector containing the values of k (number of&#xD;
                   components) which have been considered. This  vector&#xD;
                   is equal to input optional argument kk if kk had been&#xD;
                   specified else it is equal to 1:5.</Description>
            </ItemCell>
            <ItemCell>
               <Value>cc</Value>
               <Description>vector containing the values of c (values of the&#xD;
                   restriction factor) which have been considered. This&#xD;
                   vector is equal to input optional argument cc if cc had&#xD;
                   been specified else it is equal to [1, 2, 4, 8, 16, 32,&#xD;
                   64, 128].</Description>
            </ItemCell>
            <ItemCell>
               <Value>alpha</Value>
               <Description>scalar containing the trimming level which has&#xD;
                   been used.</Description>
            </ItemCell>
         </LongDesc>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>A. Cerioli, L.A. Garcia-Escudero, A. Mayo-Iscar and M. Riani (2016).&#xD;
 Finding the Number of Groups in Model-Based Clustering via Constrained&#xD;
 Likelihoods, submitted</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>tclust</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Automatic choice of k for geyser data using alpha=0.1.</Title>
         <Desc/>
         <MATLABcode>
    Y=load('geyser2.txt');&#xD;
    out=tclustIC(Y,'cleanpool',false,'plots',1,'alpha',0.1)&#xD;
    % Write out.MIXMIX as MATLAB table&#xD;
    disp('MIXMIX (BIC)')&#xD;
    if verLessThan ('matlab','8.2.0');&#xD;
        VariableNames={'c_1'; 'c_2'; 'c_4'; 'c_8'; 'c_16'; 'c_32'; 'c_64'; 'c_128'};&#xD;
        disp(VariableNames')&#xD;
        disp(out.MIXMIX)&#xD;
        disp('Rows refers to k (number of groups') &#xD;
    else&#xD;
        RowNames=cellstr([repmat('k=',length(out.kk),1) num2str(out.kk')]);&#xD;
        VariableNames=matlab.lang.makeValidName(cellstr([repmat('c=',length(out.cc),1) num2str(out.cc')]));&#xD;
        disp(array2table(out.MIXMIX,'VariableNames',VariableNames','RowNames',RowNames))&#xD;
    end&#xD;
    % Find smallest value inside the table and write the corresponding&#xD;
    % values of k (number of groups) and c (restriction factor)&#xD;
    [valmin,indk]=min(out.MIXMIX);&#xD;
    [minIC,indc]=min(valmin);&#xD;
    disp(['Smallest value of IC is ' num2str(minIC) ' and takes place for'])    &#xD;
    disp(['k=' num2str(out.kk(indk(indc))) ' and  c=' num2str(out.cc(indc))]);&#xD;
&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Automatic choice of k in an example with 3 components and prefixed overlap.</Title>
         <Desc/>
         <MATLABcode>
    restrfact=5;&#xD;
    rng('default') % Reinitialize the random number generator to its startup configuration&#xD;
    rng(20000);&#xD;
    ktrue=3;&#xD;
    % n = number of observations&#xD;
    n=150;&#xD;
    % v= number of dimensions&#xD;
    v=2;&#xD;
    % Imposed average overlap&#xD;
    BarOmega=0.04;&#xD;
    &#xD;
    out=MixSim(ktrue,v,'BarOmega',BarOmega, 'restrfactor',restrfact);&#xD;
    % data generation given centroids and cov matrices&#xD;
    [Y,id]=simdataset(n, out.Pi, out.Mu, out.S);&#xD;
&#xD;
    % Automatic choice of k&#xD;
    out=tclustIC(Y,'cleanpool',false,'plots',1,'nsamp',100);&#xD;
&#xD;
    % Plot of MIXMIX as function of c given k.&#xD;
    figure('units','normalized','outerposition',[0 0 1 1])&#xD;
    % Specify whether to use the same y scale for ALL plots&#xD;
    samescale=1;&#xD;
    kk=out.kk;&#xD;
    cc=out.cc;&#xD;
    lcc=length(cc);&#xD;
    IC=out.MIXMIX;&#xD;
    miny=min(min(IC));&#xD;
    maxy=max(max(IC));&#xD;
    seqcc=1:lcc;&#xD;
    for j=kk&#xD;
        subplot(1,length(kk),j)&#xD;
        hold('on')&#xD;
        plot(1:lcc,IC(j,:),'k')&#xD;
        [minICj,minICjind]=min(IC(j,:));&#xD;
        plot(seqcc(minICjind),minICj,'rs','MarkerSize',10)&#xD;
        xlim([1 length(cc)])&#xD;
        if samescale==1&#xD;
            ylim([miny maxy])&#xD;
        end&#xD;
        L = get(gca,'XLim');&#xD;
        set(gca,'XTick',linspace(L(1),L(2),lcc))&#xD;
        set(gca,'XTickLabel',num2str(cc'))&#xD;
        xlabel('Restr. fact. $c$','Interpreter','Latex')&#xD;
        title(['k=' num2str(j)])&#xD;
    end&#xD;
    suplabel('BIC (MIXMIX)','t')&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>