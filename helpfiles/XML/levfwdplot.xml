<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->levfwdplot</Title>
   <Purpose><!--This is the second line of the .m file-->levfwdplot plots the trajectories of leverage along the search
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Structure containing monitoring of leverage.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure containing the following fields.
out.LEV = matrix containing the leverage monitored in each step of the forward search. Every row is associated with a unit.
This matrix can be created using function FSReda (compulsory argument) out.Un = matrix containing the order of entry of each unit (necessary only if datatooltip or databrush are not empty) out.y = a vector containing the response (necessary only if option databrush is not empty) out.X = a matrix containing the explanatory variables (necessary only if option databrush is not empty) out.Bols = (n-init+1) x (p+1) matrix containing the monitoring of estimated beta coefficients in each step of the forward search (necessary only if option databrush is not empty and suboption lineadd is not empty)</LongDesc>
         <Example> </Example>
         <DataType>struct</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>LEV</Value>
               <Description>matrix containing the leverage monitored in each step of&#xD;
               the forward search. Every row is associated with a unit.&#xD;
               This matrix can be created using function FSReda&#xD;
               (compulsory argument)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>matrix containing the order of entry of each unit&#xD;
               (necessary only if datatooltip or databrush are not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>y</Value>
               <Description>a vector containing the response (necessary only if&#xD;
               option databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>X</Value>
               <Description>a matrix containing the explanatory variables&#xD;
               (necessary only if option databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Bols</Value>
               <Description>(n-init+1) x (p+1) matrix containing the monitoring of&#xD;
               estimated beta coefficients in each step of the forward search&#xD;
               (necessary only if option databrush is not empty and&#xD;
               suboption lineadd is not empty)</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>standard</Name>
         <ShortDesc>appearance of the plot in terms of xlim, ylim, axes labels and their font size style, color of the lines, etc.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure standard contains the following fields:
standard.SizeAxesNum = scalar specifying the fontsize of the axes numbers. Default value is 10.
standard.xlim = two elements vector with minimum and maximum of the x axis. Default value is '' (automatic scale).
standard.ylim = two elements vector with minimum and maximum of the y axis. Default value is '' (automatic scale).
standard.titl = a label for the title (default: '').
standard.labx = a label for the x-axis (default: 'Subset size m').
standard.laby = a label for the y-axis (default:'Leverage').
standard.SizeAxesLab = Scalar specifying the fontsize of the labels of the axes. Default value is 12.
standard.subsize = numeric vector containing the subset size with length equal to the number of columns of the leverage matrix. The default value of subsize is (n-nsteps+1):n standard.LineWidth =: scalar specifying line width for the trajectories.
standard.Color = cell array of strings containing the colors to be used for the highlighted units.
If length(Color)=1 the same color will be used for all units.
If length(Color)=2 half of the trajectories will appear with Color{1} and the other half with Color{2}. And so on with 3 cell elements, etc.
standard.LineStyle = cell containing the line types.
Remark. The default values of structure standard are:
standard.SizeAxesNum=10 standard.SizeAxesLab=12 standard.xlim='' (Automatic scale) standard.ylim='' (Automatic scale) standard.titl='' (empty title) standard.labx='Subset size m' standard.laby='Leverage' standard.LineWidth=1 standard.Color={'b'} standard.LineStyle={'-'}</LongDesc>
         <Example>'standard.LineWidth','1'</Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>SizeAxesNum</Value>
               <Description>scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.</Description>
            </ItemCell>
            <ItemCell>
               <Value>xlim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>ylim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>titl</Value>
               <Description>a label for the title (default: '').</Description>
            </ItemCell>
            <ItemCell>
               <Value>labx</Value>
               <Description>a label for the x-axis (default: 'Subset size m').</Description>
            </ItemCell>
            <ItemCell>
               <Value>laby</Value>
               <Description>a label for the y-axis (default:'Leverage').</Description>
            </ItemCell>
            <ItemCell>
               <Value>SizeAxesLab</Value>
               <Description>Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.</Description>
            </ItemCell>
            <ItemCell>
               <Value>subsize</Value>
               <Description>numeric vector containing the subset size&#xD;
                       with length equal to the number of columns of&#xD;
                       the leverage matrix. The default value of subsize &#xD;
                       is (n-nsteps+1):n</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>: scalar specifying line width for the&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line types.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>fground</Name>
         <ShortDesc>trajectories in foregroud.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure which controls which trajectories are highlighted and how they are plotted to be distinguishable from the others.
It is possible to control the label, the width, the color, the line type and the marker of the highlighted units.
Structure fground contains the following fields:
fground.fthresh = (alternative to funit) numeric vector of length 1 or 2 which specifies the highlighted trajectories.
- If length(fthresh)=1 the highlighted trajectories are those of units that after step [n/2 + 1] have at least once a leverage bigger than fthresh. Alternatively (if option 'xground' is set to be 'res' by the user) the trajectories are highlighted if throughtout the search the units had at leat once a residual (in absolute value) greater than fthresh.
The default value of fthresh is 2p/n for leverage values or 2.5 for residual values.
- If length(fthresh)=2 the highlighted trajectories are those of units that throughtout the search had a leverage value at leat once bigger than fthresh(2) or smaller than fthresh(1).
fground.funit : (alternative to fthresh) vector containing the list of the units to be highlighted. If funit is supplied, fthresh is ignored.
fground.flabstep : numeric vector which specifies the steps of the search where to put labels for the highlighted trajectories (units). The default is to put the labels at the initial and final steps of the search.
flabstep='' means no label.
fground.LineWidth : scalar specifying line width for the highlighted trajectories (units). Default is 1.
fground.Color : cell array of strings containing the colors to be used for the highlighted trajectories (units).
If length(scolor)==1 the same color will be used for all highlighted units Remark: if for example length(scolor)=2 and there are 6 highlighted units, 3 highlighted trajectories appear with selunitcolor{1} and 3 highlighted trajectories with selunitcolor{2} fground.LineStyle : cell containing the line type of the highlighted trajectories.
fground.fmark : scalar controlling whether to plot highlighted trajectories as markers.
if 1 each line is plotted using a different marker else no marker is used (default).
Remark. The default values of structure fground are:
fground.fthresh=2.5 fground.flabstep=[m0 n] fground.LineWidth=1 fground.LineStyle={'-'} Remark. if fground='' no unit is highlighted and no label is inserted into the plot.</LongDesc>
         <Example>'fground.LineWidth','1'</Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>fthresh</Value>
               <Description>(alternative to funit) numeric vector of&#xD;
                       length 1 or 2 which specifies the highlighted&#xD;
                       trajectories.&#xD;
                       -   If length(fthresh)=1 the highlighted trajectories&#xD;
                           are those of units that after step [n/2 + 1]&#xD;
                           have at least once a leverage bigger than&#xD;
                           fthresh. Alternatively (if option 'xground' is&#xD;
                           set to be 'res' by the user) the trajectories  &#xD;
                           are highlighted if throughtout the search the &#xD;
                           units had at leat once a residual (in absolute&#xD;
                           value) greater than fthresh. &#xD;
                           The default value of fthresh is 2p/n for&#xD;
                           leverage values or 2.5 for residual values.&#xD;
                       -   If length(fthresh)=2 the highlighted trajectories&#xD;
                           are those of units that throughtout the search&#xD;
                           had a leverage value at leat once bigger than&#xD;
                           fthresh(2) or smaller than fthresh(1).&#xD;
                   fground.funit : (alternative to fthresh) vector containing the&#xD;
                       list of the units to be highlighted. If funit is&#xD;
                       supplied, fthresh is ignored.&#xD;
                   fground.flabstep : numeric vector which specifies the steps of&#xD;
                       the search where to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search.&#xD;
                       flabstep='' means no label.&#xD;
                   fground.LineWidth : scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.&#xD;
                   fground.Color : cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(scolor)==1 the same color will be used for&#xD;
                       all highlighted units Remark: if for example&#xD;
                       length(scolor)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with&#xD;
                       selunitcolor{1} and 3 highlighted trajectories with&#xD;
                       selunitcolor{2}&#xD;
                   fground.LineStyle : cell containing the line type of the highlighted&#xD;
                       trajectories.&#xD;
                   fground.fmark  : scalar controlling whether to plot highlighted&#xD;
                       trajectories as markers.&#xD;
                       if 1 each line is plotted using a different marker&#xD;
                       else no marker is used (default).</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>bground</Name>
         <ShortDesc>trajectories in background.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure which specifies the trajectories in background, i.e. the trajectories corresponding to "unimmportant" units in the central part of the data. The structure also specifies the style used in the plot to give them less emphasis, so that to not distract the eye of the analyst from the trajectories of the relevant units.
Structure bground contains the following fields:
bground.bthresh = numeric vector of length 1 or 2 which specifies how to define the unimmportant trajectories.
Unimmportant trajectories will be plotted using a colormap, in greysh or will be hidden.
- If length(thresh)=1 the irrelevant units are those which always had a leverage smaller (in absolute value) than thresh.
- If length(bthresh)=2 the irrelevant units are those which always had a leverage greater than bthresh(1) and smaller than bthresh(2).
The default is:
bthresh=2p/n if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100.
Like for fthresh, if the user option xground is 'res', then the background trajectories are set in relation to the residual values and the default threshold becomes bthresh=2.5 if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100.
bground.bstyle = specifies how to plot the unimportant trajectories as defined in option bthresh.
'faint': unimportant trajectories are plotted using a colormap.
'hide': unimportant trajectories are hidden.
'greysh': unimportant trajectories are displayed in a faint grey.
When n&amp;gt;100 the default option is 'faint'.
When n&amp;lt;=100 and bthresh = -Inf option bstyle is ignored.
% Remark: bground='' is equivalent to bground.thresh=-Inf that is all trajectories are considered relevant.</LongDesc>
         <Example>'bground.bstyle','faint'</Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>bthresh</Value>
               <Description>numeric vector of length 1 or 2 which&#xD;
                       specifies how to define the unimmportant trajectories.&#xD;
                       Unimmportant trajectories will be plotted using a&#xD;
                       colormap, in greysh or will be hidden.&#xD;
                       - If length(thresh)=1 the irrelevant units are&#xD;
                         those which always had a leverage smaller&#xD;
                         (in absolute value) than thresh.&#xD;
                       - If length(bthresh)=2 the irrelevant units&#xD;
                         are those which always had a leverage greater&#xD;
                         than bthresh(1) and smaller than bthresh(2).&#xD;
                       The default is:&#xD;
                          bthresh=2p/n if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100.&#xD;
                          Like for fthresh, if the user option xground is&#xD;
                          'res', then the background trajectories are set&#xD;
                          in relation to the residual values and the&#xD;
                          default threshold becomes&#xD;
                          bthresh=2.5 if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100.</Description>
            </ItemCell>
            <ItemCell>
               <Value>bstyle</Value>
               <Description>specifies how to plot the unimportant&#xD;
                       trajectories as defined in option bthresh.&#xD;
                       'faint': unimportant trajectories are plotted using&#xD;
                           a colormap.&#xD;
                       'hide': unimportant trajectories are hidden.&#xD;
                       'greysh': unimportant trajectories are displayed in&#xD;
                           a faint grey.&#xD;
                       When n&amp;gt;100 the default option is 'faint'.&#xD;
                       When n&amp;lt;=100 and bthresh = -Inf option bstyle is&#xD;
                       ignored.&#xD;
                   %                   Remark: bground='' is equivalent to</Description>
            </ItemCell>
            <ItemCell>
               <Value>thresh</Value>
               <Description>-Inf&#xD;
                   that is all trajectories are considered relevant.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>xground</Name>
         <ShortDesc>trajectories to highlight in connection with resfwdplot.</ShortDesc>
         <TypeInd>Character 'lev' (default) | 'res'.</TypeInd>
         <LongDesc>xground = 'lev' (default).
The levfwdplot trajectories are put in foreground or in background depending on the leverage values.
xground = 'res'.
The levfwdplot trajectories are put in foreground or in background depending on the residual values.
See options bground.bthresh and fground.fthresh.</LongDesc>
         <Example>'xground','res'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Personalized tag.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String which identifies the handle of the plot which is about to be created. The default is to use tag 'pl_resfwd'. Note that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created</LongDesc>
         <Example>'tag','myplot'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>interactive clicking.</ShortDesc>
         <TypeInd>Empty value or scalar (default)| structure.</TypeInd>
         <LongDesc>The default is datatooltip=1 If datatooltip is not empty the user can use the mouse in order to have information about the unit selected, the step in which the unit enters the search and the associated label. If datatooltip is a structure, it is possible to control the aspect of the data cursor (see function datacursormode for more details or the examples below). The default options of the structure are DisplayStyle='Window' and SnapToDataVertex='on'.</LongDesc>
         <Example>'datatooltip',''</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>label</Name>
         <ShortDesc>row labels.</ShortDesc>
         <TypeInd>Cell of strings.</TypeInd>
         <LongDesc>Cell containing the labels of the units (optional argument used when datatooltip=1. If this field is not present labels row1, ..., rown will be automatically created and included in the pop up datatooltip window).</LongDesc>
         <Example>'label',{'Smith','Johnson','Robert','Stallone'}</Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>interactive mouse brushing.</ShortDesc>
         <TypeInd>empty value, scalar or structure.</TypeInd>
         <LongDesc>If databrush is an empty value (default), no brushing is done.
The activation of this option (databrush is a scalar or a cell) enables the user to select a set of trajectories in the current plot and to see them highlighted in the y|X plot, i.e. a matrix of scatter plots of y against each column of X, grouped according to the selection(s) done by brushing. If the plot y|X does not exist it is automatically created. In addition, brushed units are automatically highlighted in the minimum deletion residual plot if it is already open.
Please note that the window style of the other figures is set equal to that which contains the monitoring leverage plot. In other words, if the monitoring leverage plot is docked all the other figures will be docked too DATABRUSH IS A SCALAR If databrush is a scalar the default selection tool is a rectangular brush and it is possible to brush only once (that is persist='') DATABRUSH IS A STRUCTURE If databrush is a structure, it is possible to use all optional arguments of function selectdataFS.m and the following optional argument:
- persist. Persist is an empty value or a scalar containing the strings 'on' or 'off'.
The default value of persist is '', that is brushing is allowed only once.
If persist is 'on' or 'off' brushing can be done as many time as the user requires.
If persist='on' then the unit(s) currently brushed are added to those previously brushed. it is possible, every time a new brushing is done, to use a different color for the brushed units.
If persist='off' every time a new brush is performed units previously brushed are removed.
- bivarfit. This option adds one or more least square lines based on SIMPLE REGRESSION to the plots of y|X, depending on the selected groups.
bivarfit = '' is the default: no line is fitted.
bivarfit = '1' fits a single ols line to all points of each bivariate plot in the scatter matrix y|X.
bivarfit = '2' fits two ols lines: one to all points and another to the last selected group. This is useful when there are only two groups, of which one refers to a set of potential outliers.
bivarfit = '0' fits one ols line for each selected group. This is useful for the purpose of fitting mixtures of regression lines.
bivarfit = 'i1' or 'i2' or 'i3' etc.
fits a ols line to a specific group, the one with index 'i' equal to 1, 2, 3 etc.
- multivarfit: This option adds one or more least square lines, based on MULTIVARIATE REGRESSION of y on X, to the plots of y|Xi.
multivarfit = '' is the default: no line is fitted.
multivarfit = '1' fits a single ols line to all points of each bivariate plot in the scatter matrix y|X.
The line added to the scatter plot y|Xi is avconst +Ci*Xi, where Ci is the coefficient of Xi in the multivariate regression and avconst is the effect of all the other explanatory variables different from Xi evaluated at their centroid (that is overline{y}'C)) multivarfit = '2' exactly equal to multivarfit ='1' but this time we add the line based on the group of unselected observations.
- labeladd. If this option is '1', we label the units of the last selected group with the unit row index in matrices X and y. The default value is labeladd='', i.e. no label is added.</LongDesc>
         <Example>'databrush',1</Example>
         <DataType>single | double | struct</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nameX</Name>
         <ShortDesc>Labels of the variables of the regression dataset.</ShortDesc>
         <TypeInd>Cell array of strings.</TypeInd>
         <LongDesc>If it is empty (default) the sequence X1, ..., Xp will be created automatically</LongDesc>
         <Example>'nameX',{'var1', var2, 'var3'}</Example>
         <DataType>cell of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>namey</Name>
         <ShortDesc>label of the response.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>Character containing the label of the response</LongDesc>
         <Example>'namey','response'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>display or save used options.</ShortDesc>
         <TypeInd>Scalar which controls whether to display or to save as output the options inside structures standard, fground and bground which have been used to draw the plot.</TypeInd>
         <LongDesc>plotopt=levfwdplot(out,'msg',1) enables to save inside cell plotopt the options which have been used to draw the three types of trajectories (standard, foreground and background) plotopt=resfwdplot(out,'msg',2) saves inside cell plotopt the options which have been used and prints them on the screen</LongDesc>
         <Example>'msg',1</Example>
         <DataType>single or double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>plotopt</Name>
         <ShortDesc>Cell array of strings</ShortDesc>
         <TypeInd>options which have been used to create the plot.</TypeInd>
         <LongDesc>Store all options which have been used to generate the plot inside cell plotopt.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson and Riani (2000), Robust Diagnostic Regression Analysis, Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>resfwdplot</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Produce monitoring leverage plot with all the default options.</Title>
         <Desc>
            <ItemCell>Generate input structure for the levfwdplot</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>p=3;</ItemCell>
            <ItemCell>randn('state', 123456);</ItemCell>
            <ItemCell>X=randn(n,p);</ItemCell>
            <ItemCell>% Uncontaminated data</ItemCell>
            <ItemCell>y=randn(n,1);</ItemCell>
            <ItemCell>% Contaminated data</ItemCell>
            <ItemCell>y(1:5)=y(1:5)+6;</ItemCell>
            <ItemCell>[out]=LXS(y,X,'nsamp',1000);</ItemCell>
            <ItemCell>[out]=FSReda(y,X,out.bs);</ItemCell>
            <ItemCell>levfwdplot(out);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure standard.</Title>
         <Desc>
            <ItemCell>Initialize structure standard Specify the steps in which labels have to be put</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>standard=struct;</ItemCell>
            <ItemCell>standard.LineStyle={'-';'-.';':'};</ItemCell>
            <ItemCell>% Specify the line width</ItemCell>
            <ItemCell>standard.LineWidth=0.5;</ItemCell>
            <ItemCell>levfwdplot(out,'standard',standard)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>
            <ItemCell>Initialize structure fground</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>fground = struct;</ItemCell>
            <ItemCell>% Specify which trajectories have to be highlighted</ItemCell>
            <ItemCell>fground.funit=[2 5 20 23 35 45];</ItemCell>
            <ItemCell>% Specify the steps in which labels have to be put</ItemCell>
            <ItemCell>n=length(y);</ItemCell>
            <ItemCell>fground.flabstep=[n/2 n*0.75 n+0.5];;</ItemCell>
            <ItemCell>% Specify the line width of the highlighted trajectories</ItemCell>
            <ItemCell>fground.LineWidth=3;</ItemCell>
            <ItemCell>% Produce a monitoring residuals plot in which labels are put for units</ItemCell>
            <ItemCell>% [2 5 20 23 35 45] in steps [n/2 n*0.75 n+0.5] of the search</ItemCell>
            <ItemCell>levfwdplot(out,'fground',fground)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Same as above, but the colormap used for leverage trajectories is based on residual values.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>levfwdplot(out,'fground',fground,'xground','res')</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure bground bground = struct;</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>bground = struct;</ItemCell>
            <ItemCell>% Specify a threshold to define the "background" trajectories</ItemCell>
            <ItemCell>bground.bthresh=0.1;</ItemCell>
            <ItemCell>% Trajectories whose leverage is always between -btresh and +bthresh</ItemCell>
            <ItemCell>% are shown as specified in bground.bstyle</ItemCell>
            <ItemCell>bground.bstyle='hide';</ItemCell>
            <ItemCell>levfwdplot(out,'bground',bground)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option datatooltip.</Title>
         <Desc>
            <ItemCell>Gives the user the possibility of clicking on the different points and have information about the unit selected, the step of entry into the subset and the associated label.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>datatooltip = struct;</ItemCell>
            <ItemCell>% In this example the style of the datatooltip is 'datatip'. Click on a</ItemCell>
            <ItemCell>% trajectory when the levfwdplot is displayed.</ItemCell>
            <ItemCell>datatooltip.DisplayStyle = 'datatip';</ItemCell>
            <ItemCell>levfwdplot(out,'datatooltip',datatooltip);</ItemCell>
            <ItemCell>% Now we use the default style, which is 'window'.</ItemCell>
            <ItemCell>datatooltip.DisplayStyle = 'window';</ItemCell>
            <ItemCell>levfwdplot(out,'datatooltip',datatooltip);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt; Example of the use of option databrush (brushing is done only once using a rectangular selection tool) levfwdplot(out,'databrush',1) An equivalent statement is databrush=struct;</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>levfwdplot(out,'databrush',1)</ItemCell>
            <ItemCell>%   An equivalent statement is</ItemCell>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt; Example of the use of brush using selection with circular tool databrush=struct;</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Brush';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt; Example of the use of brush using lasso selection tool and fleur pointer databrush=struct;</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='lasso';</ItemCell>
            <ItemCell>databrush.Pointer='fleur';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt; Example of the use of rectangular brush with superimposed labels for the brushed units and persistent labels in the plot which has been brushed databrush=struct;</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt; Example of the use of persistent non cumulative brush.</Title>
         <Desc>
            <ItemCell>Every time a brushing action is performed previous highlightments are removed</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>databrush.persist='off';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 6.&lt;/i&gt; Example of the use of persistent cumulative brush.</Title>
         <Desc>
            <ItemCell>Every time a brushing action is performed current highlightments are added to previous highlightments</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='on';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 7.&lt;/i&gt; The same as before, but also fit one ols line to each selected group databrush=struct;</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='on';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.bivarfit='0';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 8.&lt;/i&gt; The same but now fit a single ols line to all data.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.bivarfit='1';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 9.&lt;/i&gt; The same but now fit a first ols line to all data and a second line on the group of observations which remain unselected.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.bivarfit='2';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 10.&lt;/i&gt; The same but now fit a single ols line to the group with index 4.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.bivarfit='i4';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 11.&lt;/i&gt; The same but now add the line mean(y)+Ci*Xi.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.multivarfit='1';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 12.&lt;/i&gt; Example of use of option databrush suboptions multivarfit 2, persist on.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>load('multiple_regression.txt');</ItemCell>
            <ItemCell>y=multiple_regression(:,4);</ItemCell>
            <ItemCell>X=multiple_regression(:,1:3);</ItemCell>
            <ItemCell>[out]=LXS(y,X,'nsamp',10000);</ItemCell>
            <ItemCell>[out]=FSReda(y,X,out.bs);</ItemCell>
            <ItemCell>out1=out;</ItemCell>
            <ItemCell>out1.RES=out.RES.^2;</ItemCell>
            <ItemCell>mdrplot(out,'ylimy',[1 5]);</ItemCell>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.multivarfit='2';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 13.&lt;/i&gt; Fidelity cards data 1.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>XX=load('loyalty.txt');</ItemCell>
            <ItemCell>namey='Sales'</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>y=y.^0.4;</ItemCell>
            <ItemCell>nameX={'Number of visits', 'Age', 'Number of persons in the family'};</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>[out]=LXS(y,X,'nsamp',10000);</ItemCell>
            <ItemCell>[out]=FSReda(y,X,out.bs);</ItemCell>
            <ItemCell>mdrplot(out,'ylimy',[1.6 4.5],'xlimx',[420 510],'lwd',2,'FontSize',16,'SizeAxesNum',16,'lwdenv',2);</ItemCell>
            <ItemCell>mdrplot(out,'ylimy',[1.6 4.5],'envm',489,'xlimx',[420 510],'lwd',2,'FontSize',16,'SizeAxesNum',16,'lwdenv',2);</ItemCell>
            <ItemCell>databrush=struct;</ItemCell>
            <ItemCell>databrush.selectionmode='Rect';</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='on';</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.multivarfit='2';</ItemCell>
            <ItemCell>levfwdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Fidelity cards data 2.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>XX=load('loyalty.txt');</ItemCell>
            <ItemCell>namey='Sales'</ItemCell>
            <ItemCell>y=XX(:,end);</ItemCell>
            <ItemCell>y=y.^0.4;</ItemCell>
            <ItemCell>X=XX(:,1:end-1);</ItemCell>
            <ItemCell>[out]=LXS(y,X,'nsamp',10000);</ItemCell>
            <ItemCell>[out]=FSReda(y,X,out.bs);</ItemCell>
            <ItemCell>plotopt=levfwdplot(out,'msg',2)</ItemCell>
            <ItemCell>% In order to reuse the options which have been stored inside plotopt</ItemCell>
            <ItemCell>% use the following sintax</ItemCell>
            <ItemCell>% levfwdplot(out,plotopt{:})</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>