<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->logmvnpdfFS</Title>
   <Purpose><!--This is the second line of the .m file-->logmvnpdfFS produces log of Multivariate normal probability density function (pdf)
</Purpose>
   <Description><!--Description section-->This function is a much faster version than (log of) Matlab function mvnpdf. If this function is called without optional arguments than it uses matlab function bsxfun to compute the deviations form the means and no mex function.
If this function is called with the four optional input arguments X0, eyed, n and d a mex function based on C code is directly used.
Additional details follow: in order to compute the kernel of the quadratic form at the exponent logmvnpdfFS creates an identity of size length(Mu) and similarly needs to compute length(Mu). These two quantites can be precalculated and supplied as input parameters. If logmvnpdfFS has to be called thousands of times (as it happens for example in each iteration of all procedures of cluster analysis based mixtures of multivariate gaussian distributions). The same argument above applies to scalars n and d which are directly passed to the compiled mex function
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>X</Name>
         <ShortDesc>Input data.</ShortDesc>
         <TypeInd>Scalar, Vector or matrix.</TypeInd>
         <LongDesc>n x d data matrix; n observations and d variables. Rows of Y represent observations, and columns represent variables or coordinates.
The (log of the) probability density of the multivariate normal distribution will be evaluated at each row of the n-by-d matrix Y</LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>Mu</Name>
         <ShortDesc>mean mu of the multivariate normal distribution.</ShortDesc>
         <TypeInd>1-by-d vector.</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>Sigma</Name>
         <ShortDesc>covariance matrix of the multivariate normal distribution.</ShortDesc>
         <TypeInd>d-by-d matrix.</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>X0</Name>
         <ShortDesc>matrix of the same size of X which passes to C function a container.</ShortDesc>
         <TypeInd>Note that options X0, eyed, n, and d must be supplied together.</TypeInd>
         <LongDesc> </LongDesc>
         <Example>&lt;code&gt;'X0',X&#xD;
&lt;/code&gt;</Example>
         <DataType>single|double</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>eyed</Name>
         <ShortDesc>identity matrix of size length(Mu) wchich passes to C function a container.</ShortDesc>
         <TypeInd>Note that options X0, eyed, n, and d must be supplied together.</TypeInd>
         <LongDesc> </LongDesc>
         <Example>&lt;code&gt;'eyed',eye(v)&#xD;
&lt;/code&gt;</Example>
         <DataType>single|double</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>n</Name>
         <ShortDesc>scalar which passes to C function size(X,1).</ShortDesc>
         <TypeInd>Note that options X0, eyed, n, and d must be supplied together.</TypeInd>
         <LongDesc> </LongDesc>
         <Example>&lt;code&gt;'eyed',eye(v)&#xD;
&lt;/code&gt;</Example>
         <DataType>single|double</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>d</Name>
         <ShortDesc>scalar which passes to C function length(Mu).</ShortDesc>
         <TypeInd>Note that options X0, eyed, n, and d must be supplied together.</TypeInd>
         <LongDesc> </LongDesc>
         <Example>&lt;code&gt;'eyed',eye(v)&#xD;
&lt;/code&gt;</Example>
         <DataType>single|double</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Level of output to display.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls whether to display or not messages on the screen. If msg==1 (default) messages are displayed on the screen when cholesky of Sigma is impossibile else no message is displayed on the screen. When Clolesky of Sigma is impossible -Inf output is returned.</LongDesc>
         <Example>&lt;code&gt;'msg',1&#xD;
&lt;/code&gt;</Example>
         <DataType>single | double</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>y</Name>
         <ShortDesc>Vector</ShortDesc>
         <TypeInd>log-density of the multivariate normal.</TypeInd>
         <LongDesc>Vector with length equal to n which returns the log-density of the multivariate normal distribution with mean Mu and covariance Sigma, evaluated at each row of X.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION--></References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>mvnpdf</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Comparison with mvnpdf.</Title>
         <Desc>
            <ItemCell>In this example we check the agreement of the results with MATLAB function mvnpdf.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell> n=20000;</ItemCell>
            <ItemCell> v=2;</ItemCell>
            <ItemCell> X=randn(n,v);</ItemCell>
            <ItemCell> mu = [1 -1]; Sigma = [.9 .4; .4 .3];</ItemCell>
            <ItemCell> y = logmvnpdfFS(X, mu, Sigma);</ItemCell>
            <ItemCell> y1=log(mvnpdf(X,mu,Sigma));</ItemCell>
            <ItemCell> max(abs(y-y1))</ItemCell>
            <ItemCell> % 2.842e-14</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Remark: Options X0, eyed, n, and d must be used together.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell> Remark: Options X0, eyed, n, and d must be used together.</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title> </Title>
         <Desc> </Desc>
         <MATLABcode> </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title> </Title>
         <Desc> </Desc>
         <MATLABcode> </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title> </Title>
         <Desc> </Desc>
         <MATLABcode> </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option msg.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>msg=0;</ItemCell>
            <ItemCell>X0=X;</ItemCell>
            <ItemCell>eyed=eye(v);</ItemCell>
            <ItemCell>y = logmvnpdfFS(X,mu,Sigma,X0,eyed,n,v,msg);</ItemCell>
            <ItemCell>%  enables to control the display of the error message on the cov matrix</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>TIME COMPARISON USING TIC TOC.</Title>
         <Desc>
            <ItemCell>In the examples below we compare the speed of the different solutions logmvnpdfFS with mex function and logmvnpdfFS without mex function In this code computation time is based on tic toc combined with a series of replications nn = sample size vv = number of variables</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>nn=[100 200 500 1000 5000 10000 50000 100000];</ItemCell>
            <ItemCell>vv=[2 5 10 20];</ItemCell>
            <ItemCell>% rep =number of replications</ItemCell>
            <ItemCell>rep = 1000;</ItemCell>
            <ItemCell>ttMat=nan(length(nn) , length(vv));</ItemCell>
            <ItemCell>ttFSwithMex=ttMat;</ItemCell>
            <ItemCell>ttFSnoMex=ttMat;</ItemCell>
            <ItemCell>Mat=0; tMat=0;</ItemCell>
            <ItemCell>FSwithmex=0; tFSwithMex=0;</ItemCell>
            <ItemCell>FSnoMex=0; tFSnoMex=0;</ItemCell>
            <ItemCell>in = 1; iv=1;</ItemCell>
            <ItemCell>for n = nn</ItemCell>
            <ItemCell>    for v = vv</ItemCell>
            <ItemCell>        X0 = zeros(n,v);</ItemCell>
            <ItemCell>        eyed=eye(v);</ItemCell>
            <ItemCell>        for i=1:rep</ItemCell>
            <ItemCell>            X = randn(n,v);</ItemCell>
            <ItemCell>            Mu = randn(1,v);</ItemCell>
            <ItemCell>            Sigma=cov(X);</ItemCell>
            <ItemCell>            %  Matlab function mvnpdf, (black line in plot)</ItemCell>
            <ItemCell>            Mat = tic;</ItemCell>
            <ItemCell>            y0 = mvnpdf(X, Mu, Sigma);</ItemCell>
            <ItemCell>            y0=log(y0);</ItemCell>
            <ItemCell>            tMat = tMat + toc(Mat);</ItemCell>
            <ItemCell>            % logmvnpdfFS using mex file for mean deviations, (blue line in plot)</ItemCell>
            <ItemCell>            FSwithmex = tic;</ItemCell>
            <ItemCell>            yD = logmvnpdfFS(X, Mu, Sigma,X0,eyed,n,v);</ItemCell>
            <ItemCell>            tFSwithMex = tFSwithMex + toc(FSwithmex);</ItemCell>
            <ItemCell>            % logmvnpdfFS and no mex file for mean deviations. (red line in plot)</ItemCell>
            <ItemCell>            FSnoMex = tic;</ItemCell>
            <ItemCell>            yI = logmvnpdfFS(X, Mu, Sigma);</ItemCell>
            <ItemCell>            tFSnoMex = tFSnoMex + toc(FSnoMex);</ItemCell>
            <ItemCell>            if (sum(sum(abs(y0-yD))))&amp;gt;10^-6  || (sum(sum(abs(y0-yI)))) &amp;gt;10^-6</ItemCell>
            <ItemCell>               error('FSDA:logmvnpdfFS:ShouldBeEq','Difference in results: stop');</ItemCell>
            <ItemCell>            end</ItemCell>
            <ItemCell>        end</ItemCell>
            <ItemCell>        ttMat(in,iv) = tMat;</ItemCell>
            <ItemCell>        ttFSwithMex(in,iv) = tFSwithMex;</ItemCell>
            <ItemCell>        ttFSnoMex(in,iv) = tFSnoMex;</ItemCell>
            <ItemCell>        Mat=0; tMat=0;</ItemCell>
            <ItemCell>        FSwithmex=0; tFSwithMex=0;</ItemCell>
            <ItemCell>        FSnoMex=0; tFSnoMex=0;</ItemCell>
            <ItemCell>        disp(['n=' num2str(n) ' -- v=' num2str(v)]);</ItemCell>
            <ItemCell>        iv = iv+1;</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>    in = in+1;</ItemCell>
            <ItemCell>    iv = 1;</ItemCell>
            <ItemCell>end</ItemCell>
            <ItemCell>% Plotting part</ItemCell>
            <ItemCell>a=ver;</ItemCell>
            <ItemCell>a=a.Release;</ItemCell>
            <ItemCell>aa=1;</ItemCell>
            <ItemCell>bb=8;</ItemCell>
            <ItemCell>for ij=1:length(vv);</ItemCell>
            <ItemCell>    subplot(length(vv)/2,2,ij)</ItemCell>
            <ItemCell>    hold('on')</ItemCell>
            <ItemCell>    plot(nn(aa:bb)',ttMat(aa:bb,ij),'k');</ItemCell>
            <ItemCell>    plot(nn(aa:bb)',ttFSwithMex(aa:bb,ij),'b')</ItemCell>
            <ItemCell>    plot(nn(aa:bb)',ttFSnoMex(aa:bb,ij),'r');</ItemCell>
            <ItemCell>    if ij==1</ItemCell>
            <ItemCell>        title(['v (number of variables)=' num2str(vv(ij)) ' version' a])</ItemCell>
            <ItemCell>    else</ItemCell>
            <ItemCell>        title(['v=' num2str(vv(ij))])</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>    ylabel('Seconds')</ItemCell>
            <ItemCell>    xlabel('Number of observations')</ItemCell>
            <ItemCell>    if ij==4</ItemCell>
            <ItemCell>        legend('mvnpdf','FS+mex','FS','location','NorthWest')</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>end</ItemCell>
            <ItemCell>hold off;</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>TIME COMPARISON USING TIMEIT FUNCTION.</Title>
         <Desc>
            <ItemCell>Remark: timeit function is present from MATLAB 2013b</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>if verLessThan('matlab', '8.2.0')</ItemCell>
            <ItemCell>    warning('FSDA:logmvnpdfFS:MatlabTooOld','This example needs routine timeit which has been introduced in Matlab 2013b')</ItemCell>
            <ItemCell>    warning('FSDA:logmvnpdfFS:MatlabTooOld','You have a version of Matlab which is &amp;lt; 2013b and you cannot run this example')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    % nn = sample size</ItemCell>
            <ItemCell>    % vv = number of variables</ItemCell>
            <ItemCell>    nn=[100 200 500 1000 5000 10000 50000 100000];</ItemCell>
            <ItemCell>    vv=[2 5 10 20];</ItemCell>
            <ItemCell>    ttMat=nan(length(nn) , length(vv));</ItemCell>
            <ItemCell>    ttFSwithMex=ttMat;</ItemCell>
            <ItemCell>    ttFSnoMex=ttMat;</ItemCell>
            <ItemCell>    in = 1; iv=1;</ItemCell>
            <ItemCell>    for n = nn</ItemCell>
            <ItemCell>        for v = vv</ItemCell>
            <ItemCell>            X0 = zeros(n,v);</ItemCell>
            <ItemCell>            eyed=eye(v);</ItemCell>
            <ItemCell>            X = randn(n,v);</ItemCell>
            <ItemCell>            Mu = randn(1,v);</ItemCell>
            <ItemCell>            Sigma=cov(X);</ItemCell>
            <ItemCell>            %  Matlab function mvnpdf</ItemCell>
            <ItemCell>            yMat = @() log(mvnpdf(X, Mu, Sigma));</ItemCell>
            <ItemCell>            tMat = timeit(yMat);</ItemCell>
            <ItemCell>            % logmvnpdfFS using mex file for mean deviations.</ItemCell>
            <ItemCell>            yFSwithMex = @() logmvnpdfFS(X, Mu, Sigma,X0,eyed,n,v);</ItemCell>
            <ItemCell>            tFSwithMex = timeit(yFSwithMex);</ItemCell>
            <ItemCell>            % logmvnpdfFS and no mex file for mean deviations.</ItemCell>
            <ItemCell>            yFSnoMex = @() logmvnpdfFS(X, Mu, Sigma);</ItemCell>
            <ItemCell>            tFSnoMex = timeit(yFSnoMex);</ItemCell>
            <ItemCell>            ttMat(in,iv) = tMat;</ItemCell>
            <ItemCell>            ttFSwithMex(in,iv) = tFSwithMex;</ItemCell>
            <ItemCell>            ttFSnoMex(in,iv) = tFSnoMex;</ItemCell>
            <ItemCell>            disp(['n=' num2str(n) ' -- v=' num2str(v)]);</ItemCell>
            <ItemCell>            iv = iv+1;</ItemCell>
            <ItemCell>        end</ItemCell>
            <ItemCell>        in = in+1;</ItemCell>
            <ItemCell>        iv = 1;</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>    % Plotting part</ItemCell>
            <ItemCell>    a=ver;</ItemCell>
            <ItemCell>    a=a.Release;</ItemCell>
            <ItemCell>    aa=1;</ItemCell>
            <ItemCell>    bb=length(nn);</ItemCell>
            <ItemCell>    for ij=1:length(vv);</ItemCell>
            <ItemCell>        subplot(length(vv)/2,2,ij)</ItemCell>
            <ItemCell>        hold('on')</ItemCell>
            <ItemCell>        plot(nn(aa:bb)',ttMat(aa:bb,ij),'k');</ItemCell>
            <ItemCell>        plot(nn(aa:bb)',ttFSwithMex(aa:bb,ij),'b')</ItemCell>
            <ItemCell>        plot(nn(aa:bb)',ttFSnoMex(aa:bb,ij),'r');</ItemCell>
            <ItemCell>        if ij==1</ItemCell>
            <ItemCell>            title(['v (number of variables) =' num2str(vv(ij)) ' version' a])</ItemCell>
            <ItemCell>        else</ItemCell>
            <ItemCell>            title(['v=' num2str(vv(ij))])</ItemCell>
            <ItemCell>        end</ItemCell>
            <ItemCell>        xlabel('Number of observations')</ItemCell>
            <ItemCell>        ylabel('Seconds')</ItemCell>
            <ItemCell>        if ij==4</ItemCell>
            <ItemCell>            legend('mvnpdf','FS+mex','FS','location','NorthWest')</ItemCell>
            <ItemCell>        end</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>    hold off;</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>