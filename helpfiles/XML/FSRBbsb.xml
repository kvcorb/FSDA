<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->FSRBbsb</Title>
   <Purpose><!--This is the second line of the .m file-->FSRBbsb returns the units belonging to the subset in each step of the Bayesian forward search
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>y</Name>
         <ShortDesc>Response variable.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>A vector with n elements that contains the response variable.
Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>X</Name>
         <ShortDesc>Predictor variables.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>Data matrix of explanatory variables (also called 'regressors') of dimension (n x p-1).
Rows of X represent observations, and columns represent variables. Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.
PRIOR INFORMATION $\beta$ is assumed to have a normal distribution with mean $\beta_0$ and (conditional on $\tau_0$) covariance $(1/\tau_0) (X_0'X_0)^{-1}$.
$\beta \sim N( \beta_0, (1/\tau_0) (X_0'X_0)^{-1} )$</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>beta0</Name>
         <ShortDesc>Prior mean of $\beta$.</ShortDesc>
         <TypeInd>p-times-1 vector.</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>R</Name>
         <ShortDesc>Matrix associated with covariance matrix of $\beta$.</ShortDesc>
         <TypeInd>p-times-p positive definite matrix.</TypeInd>
         <LongDesc>It can be interpreted as $X_0'X_0$ where $X_0$ is a n0 x p matrix coming from previous experiments (assuming that the intercept is included in the model) The prior distribution of $\tau_0$ is a gamma distribution with parameters $a_0$ and $b_0$, that is \[ p(\tau_0) \propto \tau^{a_0-1} \exp (-b_0 \tau) \qquad E(\tau_0)= a_0/b_0 \]</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tau0</Name>
         <ShortDesc>Prior estimate of tau.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Prior estimate of $\tau=1/ \sigma^2 =a_0/b_0$.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>n0</Name>
         <ShortDesc>Number of previous experiments.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Sometimes it helps to think of the prior information as coming from n0 previous experiments. Therefore we assume that matrix X0 (which defines R), was made up of n0 observations.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>bsb</Name>
         <ShortDesc>units forming initial subset.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>m x 1 vector containing the units forming initial subset. The default value of bsb is '' (empty value), that is we initialize the search just using prior information.</LongDesc>
         <Example>'bsb',[3,6,9]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>init</Name>
         <ShortDesc>Search initialization.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>It specifies the point where to start monitoring required diagnostics. If it is not specified it is set equal to:
p+1, if the sample size is smaller than 40;
min(3*p+1,floor(0.5*(n+p+1))), otherwise.
The minimum value of init is 0. In this case in the first step we start monitoring at step m=0 (step just based on prior information)</LongDesc>
         <Example>'init',100 starts monitoring from step m=100</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>intercept</Name>
         <ShortDesc>Indicator for constant term.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If 1, a model with constant term will be fitted (default), else no constant term will be included.</LongDesc>
         <Example>'intercept',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If plots=1 the monitoring units plot is displayed on the screen. The default value of plots is 0 (that is no plot is produced on the screen).</LongDesc>
         <Example>'plots',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>bsbsteps</Name>
         <ShortDesc>steps of the fwd search where to save the units forming subset.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>If bsbsteps is 0 we store the units forming subset in all steps. The default is store the units forming subset in all steps if n&amp;lt;5000, else to store the units forming subset at steps init and steps which are multiple of 100. For example, if n=753 and init=6, units forming subset are stored for m=init, 100, 200, 300, 400, 500 and 600.</LongDesc>
         <Example>'bsbsteps',[10,20,30]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on matrix y and matrix X. Notice that y and X are left unchanged. In other words the additional column of ones for the intercept is not added. As default nocheck=0.</LongDesc>
         <Example>'nocheck',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Level of output to display.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>It controls whether to display or not messages about great interchange on the screen If msg==1 (default) messages are displayed on the screen else no message is displayed on the screen</LongDesc>
         <Example>'msg',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>Un</Name>
         <ShortDesc>Matrix</ShortDesc>
         <TypeInd>Units included in each step.</TypeInd>
         <LongDesc>(n-init) x 11 Matrix which contains the unit(s) included in the subset at each step of the search.
REMARK: in every step the new subset is compared with the old subset. Un contains the unit(s) present in the new subset but not in the old one.
Un(1,2) for example contains the unit included in step init+1.
Un(end,2) contains the units included in the final step of the search.</LongDesc>
         <Structure> </Structure>
      </Item>
      <Item>
         <Name>BB</Name>
         <ShortDesc>Matrix</ShortDesc>
         <TypeInd>Units belonging to subset in each step.</TypeInd>
         <LongDesc>n x (n-init+1) matrix which contains the units belonging to the subset at each step of the forward search.
1st col = index forming subset in the initial step ...
last column = units forming subset in the final step (i.e. all units).</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Chaloner K. and Brant R. (1988). A Bayesian Approach to Outlier Detection and Residual Analysis, Biometrika, Vol 75 pp. 651-659.</Item>
      <Item>Riani M., Corbellini A., Atkinson A.C. (2017), Very Robust Bayesian Regression for Fraud Detection, submitted</Item>
      <Item>Atkinson A.C., Corbellini A., Riani M., (2017), Robust Bayesian Regression with the Forward Search: Theory and Data Analysis, Test, DOI 10.1007/s11749-017-0542-6</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>FSRbsb</Item>
      <Item>FSRHbsb</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>FSRBbsb with all default options.</Title>
         <Desc>
            <ItemCell>Common part to all examples: load Houses Price Dataset.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load hprice.txt;</ItemCell>
            <ItemCell/>
            <ItemCell>% setup parameters</ItemCell>
            <ItemCell>n=size(hprice,1);</ItemCell>
            <ItemCell>y=hprice(:,1);</ItemCell>
            <ItemCell>X=hprice(:,2:5);</ItemCell>
            <ItemCell>n0=5;</ItemCell>
            <ItemCell>% set \beta components</ItemCell>
            <ItemCell>beta0=0*ones(5,1);</ItemCell>
            <ItemCell>beta0(2,1)=10;</ItemCell>
            <ItemCell>beta0(3,1)=5000;</ItemCell>
            <ItemCell>beta0(4,1)=10000;</ItemCell>
            <ItemCell>beta0(5,1)=10000;</ItemCell>
            <ItemCell>% $\tau$</ItemCell>
            <ItemCell>s02=1/4.0e-8;</ItemCell>
            <ItemCell>tau0=1/s02;</ItemCell>
            <ItemCell>% R prior settings</ItemCell>
            <ItemCell>R=2.4*eye(5);</ItemCell>
            <ItemCell>R(2,2)=6e-7;</ItemCell>
            <ItemCell>R(3,3)=.15;</ItemCell>
            <ItemCell>R(4,4)=.6;</ItemCell>
            <ItemCell>R(5,5)=.6;</ItemCell>
            <ItemCell>R=inv(R);</ItemCell>
            <ItemCell>Unchk=FSRBbsb(y,X,beta0, R, tau0, n0);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>FSRBbsb with optional arguments.</Title>
         <Desc>
            <ItemCell>Display the monitoring units plot. Suppress all messages about interchange with option msg.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load hprice.txt;</ItemCell>
            <ItemCell/>
            <ItemCell>% setup parameters</ItemCell>
            <ItemCell>n=size(hprice,1);</ItemCell>
            <ItemCell>y=hprice(:,1);</ItemCell>
            <ItemCell>X=hprice(:,2:5);</ItemCell>
            <ItemCell>n0=5;</ItemCell>
            <ItemCell>% set \beta components</ItemCell>
            <ItemCell>beta0=0*ones(5,1);</ItemCell>
            <ItemCell>beta0(2,1)=10;</ItemCell>
            <ItemCell>beta0(3,1)=5000;</ItemCell>
            <ItemCell>beta0(4,1)=10000;</ItemCell>
            <ItemCell>beta0(5,1)=10000;</ItemCell>
            <ItemCell>% $\tau$</ItemCell>
            <ItemCell>s02=1/4.0e-8;</ItemCell>
            <ItemCell>tau0=1/s02;</ItemCell>
            <ItemCell>% R prior settings</ItemCell>
            <ItemCell>R=2.4*eye(5);</ItemCell>
            <ItemCell>R(2,2)=6e-7;</ItemCell>
            <ItemCell>R(3,3)=.15;</ItemCell>
            <ItemCell>R(4,4)=.6;</ItemCell>
            <ItemCell>R(5,5)=.6;</ItemCell>
            <ItemCell>R=inv(R);</ItemCell>
            <ItemCell>[~,Un,BB]=FSRBmdr(y,X,beta0, R, tau0, n0);</ItemCell>
            <ItemCell>[Unchk,BBchk]=FSRBbsb(y,X,beta0,R,tau0,n0,'plots',1,'msg',0);</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Compare units belonging to subsets.</Title>
         <Desc>
            <ItemCell>Test procedures FSRBmdr and FSRBbsb to find out whether they produce the same results in terms of units belonging to subset</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>load hprice.txt;</ItemCell>
            <ItemCell/>
            <ItemCell>% setup parameters</ItemCell>
            <ItemCell>n=size(hprice,1);</ItemCell>
            <ItemCell>y=hprice(:,1);</ItemCell>
            <ItemCell>X=hprice(:,2:5);</ItemCell>
            <ItemCell>n0=5;</ItemCell>
            <ItemCell>% set \beta components</ItemCell>
            <ItemCell>beta0=0*ones(5,1);</ItemCell>
            <ItemCell>beta0(2,1)=10;</ItemCell>
            <ItemCell>beta0(3,1)=5000;</ItemCell>
            <ItemCell>beta0(4,1)=10000;</ItemCell>
            <ItemCell>beta0(5,1)=10000;</ItemCell>
            <ItemCell>% $\tau$</ItemCell>
            <ItemCell>s02=1/4.0e-8;</ItemCell>
            <ItemCell>tau0=1/s02;</ItemCell>
            <ItemCell>% R prior settings</ItemCell>
            <ItemCell>R=2.4*eye(5);</ItemCell>
            <ItemCell>R(2,2)=6e-7;</ItemCell>
            <ItemCell>R(3,3)=.15;</ItemCell>
            <ItemCell>R(4,4)=.6;</ItemCell>
            <ItemCell>R(5,5)=.6;</ItemCell>
            <ItemCell>R=inv(R);</ItemCell>
            <ItemCell>[~,Un,BB]=FSRBmdr(y,X,beta0, R, tau0, n0);</ItemCell>
            <ItemCell>[Unchk,BBchk]=FSRBbsb(y,X,beta0, R, tau0, n0);</ItemCell>
            <ItemCell>% Test for equality BB and BBchk</ItemCell>
            <ItemCell>disp(isequaln(BB,BBchk))</ItemCell>
            <ItemCell>% Test for equality Un and Unchk</ItemCell>
            <ItemCell>disp(isequaln(Un,Unchk))</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>