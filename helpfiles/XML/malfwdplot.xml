<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->malfwdplot</Title>
   <Purpose><!--This is the second line of the .m file-->malfwdplot plots the trajectories of scaled Mahalanobis distances along the search</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Structure containing monitoring of Mahalanobis distance</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure containing the following fields.&#xD;
       out.MAL =   matrix containing the Mahalanobis distances monitored in each&#xD;
               step of the forward search. Every row is associated with a&#xD;
               unit (row of data matrix Y).&#xD;
               This matrix can be created using function FSMeda&#xD;
               (compulsory argument)&#xD;
       out.Un  =   matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true or databrush is not empty)&#xD;
       out.Y   =   n x v data matrix; n observations&#xD;
               and v variables</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>MAL</Value>
               <Description>matrix containing the Mahalanobis distances monitored in each&#xD;
               step of the forward search. Every row is associated with a&#xD;
               unit (row of data matrix Y).&#xD;
               This matrix can be created using function FSMeda&#xD;
               (compulsory argument)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true or databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>n x v data matrix; n observations&#xD;
               and v variables</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>standard</Name>
         <ShortDesc>appearance of the plot&#xD;
                   in terms of xlim, ylim, axes labels and their font size&#xD;
                   style, color of the lines, etc</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure standard contains the following fields:&#xD;
                   standard.SizeAxesNum = scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.&#xD;
                   standard.xlim = two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).&#xD;
                   standard.ylim = two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).&#xD;
                   standard.titl = a label for the title (default: '').&#xD;
                   standard.labx = a label for the x-axis (default: 'Subset size m').&#xD;
                   standard.laby = a label for the y-axis (default: 'Mahalanobis distances'&#xD;
                       or 'Scaled Mahalanobis distances').&#xD;
                   standard.SizeAxesLab = Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.&#xD;
                   standard.subsize = numeric vector containing the subset size&#xD;
                       with length equal to the number of columns of&#xD;
                       matrix of MD. The default value of subsize is&#xD;
                       size(MAL,1)-size(MAL,2)+1:size(MAL,1)&#xD;
                   standard.LineWidth = scalar specifying line width for the&#xD;
                       trajectories.&#xD;
                   standard.Color= cell array of strings containing the colors to&#xD;
                       be used for the highlighted units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.&#xD;
                   standard.LineStyle = cell containing the line types.&#xD;
&#xD;
                   Remark. The default values of structure standard are:&#xD;
                   standard.SizeAxesNum=10;&#xD;
                   standard.SizeAxesLab=12;&#xD;
                   standard.xlim='' (Automatic scale);&#xD;
                   standard.ylim='' (Automatic scale);&#xD;
                   standard.titl='' (empty title);&#xD;
                   standard.labx='Subset size m';&#xD;
                   standard.laby='Mahalanobis distances';&#xD;
                   standard.LineWidth=1;&#xD;
                   standard.Color={'b'};&#xD;
                   standard.LineStyle={'-'}&#xD;
&#xD;
                   </LongDesc>
         <Example> 'standard.LineWidth','1'&#xD;
                   </Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>SizeAxesNum</Value>
               <Description>scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.</Description>
            </ItemCell>
            <ItemCell>
               <Value>xlim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>ylim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>titl</Value>
               <Description>a label for the title (default: '').</Description>
            </ItemCell>
            <ItemCell>
               <Value>labx</Value>
               <Description>a label for the x-axis (default: 'Subset size m').</Description>
            </ItemCell>
            <ItemCell>
               <Value>laby</Value>
               <Description>a label for the y-axis (default: 'Mahalanobis distances'&#xD;
                       or 'Scaled Mahalanobis distances').</Description>
            </ItemCell>
            <ItemCell>
               <Value>SizeAxesLab</Value>
               <Description>Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.</Description>
            </ItemCell>
            <ItemCell>
               <Value>subsize</Value>
               <Description>numeric vector containing the subset size&#xD;
                       with length equal to the number of columns of&#xD;
                       matrix of MD. The default value of subsize is&#xD;
                       size(MAL,1)-size(MAL,2)+1:size(MAL,1)</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line types.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>fground</Name>
         <ShortDesc>trajectories in foregroud</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure which controls which trajectories&#xD;
                   are highlighted and how they are plotted to be&#xD;
                   distinguishable from the others.&#xD;
                   It is possible to control the label, the width, the&#xD;
                   color, the line type and the marker of the highlighted&#xD;
                   units. &#xD;
                   Structure fground contains the following fields:&#xD;
                   fground.fthresh = (alternative to funit) numeric vector&#xD;
                       of length 1 or 2 which specifies the criterion to&#xD;
                       select the trajectories to highlight.&#xD;
                       If length(fthresh)=1 the highlighted trajectories&#xD;
                       are those units that throughtout the search had&#xD;
                       at leat once a MD greater (in absolute value)&#xD;
                       than fthresh. The default value of fthresh is 2.5.&#xD;
                       If length(fthresh)=2 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       a MD at least once bigger than fthresh(2) or&#xD;
                       smaller than fthresh(1).&#xD;
                   fground.funit = (alternative to fthresh) vector&#xD;
                       containing the list of the units to be highlighted.&#xD;
                       If funit is supplied, fthresh is ignored.&#xD;
                   fground.flabstep = numeric vector which specifies the steps of&#xD;
                       the search whre to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search.&#xD;
                       flabstep='' means no label.&#xD;
                   fground.LineWidth = scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.&#xD;
                   fground.Color = cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(Color)==1 the same color will be used for&#xD;
                       all highlighted units Remark: if for example&#xD;
                       length(Color)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with&#xD;
                       Color{1} and 3 highlighted trajectories with&#xD;
                       Color{2}.&#xD;
                   fground.LineStyle = cell containing the line type of&#xD;
                       the highlighted trajectories.&#xD;
                   fground.fmark  = scalar controlling whether to plot&#xD;
                       highlighted trajectories as markers. if 1 each line&#xD;
                       is plotted using a different marker else no marker&#xD;
                       is used (default).&#xD;
                   fground.FontSize  = scalar controlling font size of the&#xD;
                       labels of the trajectories in foreground&#xD;
&#xD;
                   Remark. The default values of structure fground are:&#xD;
                    fground.fthresh=2.5;&#xD;
                    fground.flabstep=[m0 n];&#xD;
                    fground.LineWidth=1;&#xD;
                    fground.LineStyle={'-'};&#xD;
                    fground.FontSize=12;&#xD;
                   Remark. if fground='' no unit is highlighted and no&#xD;
                   label is inserted into the plot.&#xD;
&#xD;
                   </LongDesc>
         <Example> 'fground.LineWidth','1'&#xD;
                   </Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>fthresh</Value>
               <Description>(alternative to funit) numeric vector&#xD;
                       of length 1 or 2 which specifies the criterion to&#xD;
                       select the trajectories to highlight.&#xD;
                       If length(fthresh)=1 the highlighted trajectories&#xD;
                       are those units that throughtout the search had&#xD;
                       at leat once a MD greater (in absolute value)&#xD;
                       than fthresh. The default value of fthresh is 2.5.&#xD;
                       If length(fthresh)=2 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       a MD at least once bigger than fthresh(2) or&#xD;
                       smaller than fthresh(1).</Description>
            </ItemCell>
            <ItemCell>
               <Value>funit</Value>
               <Description>(alternative to fthresh) vector&#xD;
                       containing the list of the units to be highlighted.&#xD;
                       If funit is supplied, fthresh is ignored.</Description>
            </ItemCell>
            <ItemCell>
               <Value>flabstep</Value>
               <Description>numeric vector which specifies the steps of&#xD;
                       the search whre to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search.&#xD;
                       flabstep='' means no label.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(Color)==1 the same color will be used for&#xD;
                       all highlighted units Remark: if for example&#xD;
                       length(Color)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with&#xD;
                       Color{1} and 3 highlighted trajectories with&#xD;
                       Color{2}.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line type of&#xD;
                       the highlighted trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>fmark</Value>
               <Description>scalar controlling whether to plot&#xD;
                       highlighted trajectories as markers. if 1 each line&#xD;
                       is plotted using a different marker else no marker&#xD;
                       is used (default).</Description>
            </ItemCell>
            <ItemCell>
               <Value>FontSize</Value>
               <Description>scalar controlling font size of the&#xD;
                       labels of the trajectories in foreground</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>bground</Name>
         <ShortDesc>characterictics of the trajectories in background</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure which specifies the trajectories in background,&#xD;
                   i.e. the trajectories corresponding to "unimmportant"&#xD;
                   units in the central part of the data. The structure&#xD;
                   also specifies the style used in the plot to give them&#xD;
                   less emphasis, so that to not distract the eye of the&#xD;
                   analyst from the trajectories of the relevant units.&#xD;
                   Structure bground contains the following fields:&#xD;
                   bground.bthresh = numeric vector of length 1 or 2 which&#xD;
                       specifies how to define the unimmportant trajectories.&#xD;
                       Unimmportant trajectories will be plotted using a&#xD;
                       colormap, in greysh or will be hidden.&#xD;
                       - If length(bthresh)=1 the irrelevant units are&#xD;
                         those which always had a MD smaller&#xD;
                         (in absolute value) than thresh.&#xD;
                       - If length(bthresh)=2 the irrelevant units&#xD;
                         are those which always had a MD greater&#xD;
                         than bthresh(1) and smaller than bthresh(2).&#xD;
                       The default is:&#xD;
                           bthresh=2.5 if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100&#xD;
                       i.e. to treat all trajectories as important if&#xD;
                       n&amp;lt;=100 and, if n&amp;gt;100, to reduce emphasis only to&#xD;
                       trajectories having in all steps of the search a&#xD;
                       value of scaled MD smaller than 2.5.&#xD;
                   bground.bstyle = specifies how to plot the unimportant&#xD;
                       trajectories as defined in option bthresh.&#xD;
                       'faint': unimportant trajectories are plotted using&#xD;
                           a colormap.&#xD;
                       'hide': unimportant trajectories are hidden.&#xD;
                       'greysh': unimportant trajectories are displayed in&#xD;
                           a faint grey.&#xD;
                       When n&amp;gt;100 the default option is 'faint'.&#xD;
                       When n&amp;lt;=100 and bthresh = -Inf option bstyle is&#xD;
                       ignored.&#xD;
                   %                   Remark: bground='' is equivalent to bground.bthresh=-Inf&#xD;
                   that is all trajectories are considered relevant.&#xD;
&#xD;
</LongDesc>
         <Example> 'bground.bstyle','faint'&#xD;
                   </Example>
         <DataType>struct</DataType>
         <Struct>
            <ItemCell>
               <Value>bthresh</Value>
               <Description>numeric vector of length 1 or 2 which&#xD;
                       specifies how to define the unimmportant trajectories.&#xD;
                       Unimmportant trajectories will be plotted using a&#xD;
                       colormap, in greysh or will be hidden.&#xD;
                       - If length(bthresh)=1 the irrelevant units are&#xD;
                         those which always had a MD smaller&#xD;
                         (in absolute value) than thresh.&#xD;
                       - If length(bthresh)=2 the irrelevant units&#xD;
                         are those which always had a MD greater&#xD;
                         than bthresh(1) and smaller than bthresh(2).&#xD;
                       The default is:&#xD;
                           bthresh=2.5 if n&amp;gt;100 and bthresh=-inf if n&amp;lt;=100&#xD;
                       i.e. to treat all trajectories as important if&#xD;
                       n&amp;lt;=100 and, if n&amp;gt;100, to reduce emphasis only to&#xD;
                       trajectories having in all steps of the search a&#xD;
                       value of scaled MD smaller than 2.5.</Description>
            </ItemCell>
            <ItemCell>
               <Value>bstyle</Value>
               <Description>specifies how to plot the unimportant&#xD;
                       trajectories as defined in option bthresh.&#xD;
                       'faint': unimportant trajectories are plotted using&#xD;
                           a colormap.&#xD;
                       'hide': unimportant trajectories are hidden.&#xD;
                       'greysh': unimportant trajectories are displayed in&#xD;
                           a faint grey.&#xD;
                       When n&amp;gt;100 the default option is 'faint'.&#xD;
                       When n&amp;lt;=100 and bthresh = -Inf option bstyle is&#xD;
                       ignored.&#xD;
                   %                   Remark: bground='' is equivalent to bground.bthresh=-Inf&#xD;
                   that is all trajectories are considered relevant.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Personalized plot tag</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>String which identifies the&#xD;
                   handle of the plot which is about to be created. The&#xD;
                   default is to use tag 'pl_mal'. &#xD;
                   Note that if the program finds a plot which has a tag&#xD;
                   equal to the one specified by the user, then the output&#xD;
                   of the new plot overwrites the existing one in the same&#xD;
                   window else a new window is created.&#xD;
                   </LongDesc>
         <Example> 'tag','myplot'&#xD;
                   </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>interactive clicking</ShortDesc>
         <TypeInd>Empty value (default) or&#xD;
                   structure</TypeInd>
         <LongDesc>The default is datatooltip=''.&#xD;
                   If datatooltip = 1, the user can select with the&#xD;
                   mouse an individual MD trajectory in order to&#xD;
                   have information about the corresponding unit, the&#xD;
                   associated label and the step of the search in which&#xD;
                   the unit enters the subset.&#xD;
                   If datatooltip is a structure it may contain the&#xD;
                   following the fields &#xD;
                   datatooltip.DisplayStyle = Determines how the data&#xD;
                       cursor displays. datatip | window.&#xD;
                       - datatip displays data cursor&#xD;
                       information in a small yellow text box attached to a&#xD;
                       black square marker at a data point you interactively&#xD;
                       select. &#xD;
                       - window displays data cursor information for the&#xD;
                       data point you interactively select in a floating&#xD;
                       window within the figure.&#xD;
                   datatooltip.SnapToDataVertex=  Specifies whether the&#xD;
                       data cursor snaps to the nearest data value or is&#xD;
                       located at the actual pointer position.  on | off.&#xD;
                       - on data cursor snaps to the nearest data value  &#xD;
                       - off data cursor is located at the actual pointer&#xD;
                       position.&#xD;
                   (see the MATLAB function datacursormode or the examples&#xD;
                   below). Default values are datatooltip.DisplayStyle =&#xD;
                   'Window' and datatooltip.SnapToDataVertex = 'on'.&#xD;
                   datatooltip.LineColor = controls the line color of the&#xD;
                       selected trajectory. Vector with three elements&#xD;
                       specifying RGB color.&#xD;
                       By default, the MD trajectory selected with the&#xD;
                       mouse is highlighted in red. (a RGB vector can be&#xD;
                       conveniently chosen with our MATLAB class FSColor,&#xD;
                       see documentation).&#xD;
                       Example -&#xD;
                       datatooltip.LineColor=[155/255,190/255,61/255]; &#xD;
                       or using class FScolors:&#xD;
                       datatooltip.LineColor='greenish'&#xD;
                   datatooltip.SubsetLinesColor = highlights the&#xD;
                       trajectories of the units&#xD;
                       that are in the subset at a given step of the&#xD;
                       search. Vector with three elements&#xD;
                       specifying RGB color.&#xD;
                       Example - datatooltip.SubsetLinesColor=[0 0 0]; &#xD;
                       or using class FScolors:&#xD;
                       datatooltip.SubsetLinesColor='black'; highlights in&#xD;
                       black the trajectories of the units which are&#xD;
                       inside subset in correpondence of the selected&#xD;
                       steps.&#xD;
                   Remark. This can be done (repeatedly) with a left mouse click&#xD;
                       on the x axis ('subset size m') in proximity of the&#xD;
                       step of interest. A right mouse click will&#xD;
                       terminate the selection by marking with a up-arrow&#xD;
                       the step corresponding to the highlighted lines.&#xD;
                       The highlighted lines by default are in blue, but&#xD;
                       different colors can be specified as RGB vectors in&#xD;
                       the field SubsetLinesColor. By default&#xD;
                       SubsetLinesColor = '', i.e. the modality is not&#xD;
                       active. Any initialization for SubsetLinesColor&#xD;
                       which cannot be interpreted as RGB vector will be&#xD;
                       converted to blue, i.e. SubsetLinesColor will be&#xD;
                       forced to be [0 0 1].&#xD;
                   </LongDesc>
         <Example> 'datatooltip',''&#xD;
                   </Example>
         <DataType>empty value, scalar or struct</DataType>
         <Struct>
            <ItemCell>
               <Value>DisplayStyle</Value>
               <Description>Determines how the data&#xD;
                       cursor displays. datatip | window.&#xD;
                       - datatip displays data cursor&#xD;
                       information in a small yellow text box attached to a&#xD;
                       black square marker at a data point you interactively&#xD;
                       select. &#xD;
                       - window displays data cursor information for the&#xD;
                       data point you interactively select in a floating&#xD;
                       window within the figure.</Description>
            </ItemCell>
            <ItemCell>
               <Value>SnapToDataVertex</Value>
               <Description>Specifies whether the&#xD;
                       data cursor snaps to the nearest data value or is&#xD;
                       located at the actual pointer position.  on | off.&#xD;
                       - on data cursor snaps to the nearest data value  &#xD;
                       - off data cursor is located at the actual pointer&#xD;
                       position.&#xD;
                   (see the MATLAB function datacursormode or the examples&#xD;
                   below). Default values are datatooltip.DisplayStyle =&#xD;
                   'Window' and datatooltip.SnapToDataVertex = 'on'.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineColor</Value>
               <Description>controls the line color of the&#xD;
                       selected trajectory. Vector with three elements&#xD;
                       specifying RGB color.&#xD;
                       By default, the MD trajectory selected with the&#xD;
                       mouse is highlighted in red. (a RGB vector can be&#xD;
                       conveniently chosen with our MATLAB class FSColor,&#xD;
                       see documentation).&#xD;
                       Example -&#xD;
                       datatooltip.LineColor=[155/255,190/255,61/255]; &#xD;
                       or using class FScolors:&#xD;
                       datatooltip.LineColor='greenish'</Description>
            </ItemCell>
            <ItemCell>
               <Value>SubsetLinesColor</Value>
               <Description>highlights the&#xD;
                       trajectories of the units&#xD;
                       that are in the subset at a given step of the&#xD;
                       search. Vector with three elements&#xD;
                       specifying RGB color.&#xD;
                       Example - datatooltip.SubsetLinesColor=[0 0 0]; &#xD;
                       or using class FScolors:&#xD;
                       datatooltip.SubsetLinesColor='black'; highlights in&#xD;
                       black the trajectories of the units which are&#xD;
                       inside subset in correpondence of the selected&#xD;
                       steps.&#xD;
                   Remark. This can be done (repeatedly) with a left mouse click&#xD;
                       on the x axis ('subset size m') in proximity of the&#xD;
                       step of interest. A right mouse click will&#xD;
                       terminate the selection by marking with a up-arrow&#xD;
                       the step corresponding to the highlighted lines.&#xD;
                       The highlighted lines by default are in blue, but&#xD;
                       different colors can be specified as RGB vectors in&#xD;
                       the field SubsetLinesColor. By default&#xD;
                       SubsetLinesColor = '', i.e. the modality is not&#xD;
                       active. Any initialization for SubsetLinesColor&#xD;
                       which cannot be interpreted as RGB vector will be&#xD;
                       converted to blue, i.e. SubsetLinesColor will be&#xD;
                       forced to be [0 0 1].</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>label</Name>
         <ShortDesc>row labels</ShortDesc>
         <TypeInd>Cell of strings</TypeInd>
         <LongDesc>Cell containing the labels&#xD;
                   of the units (optional argument used when&#xD;
                   datatooltip=1. If this field is not present labels&#xD;
                   row1, ..., rown will be automatically created and&#xD;
                   included in the pop up datatooltip window).&#xD;
                   </LongDesc>
         <Example> 'label',{'Smith','Johnson','Robert','Stallone'}&#xD;
                   </Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>interactive mouse brushing</ShortDesc>
         <TypeInd>Empty value, scalar or structure</TypeInd>
         <LongDesc>If databrush is an empty value (default), no brushing&#xD;
                   is done.&#xD;
                   The activation of this option (databrush is a scalar or&#xD;
                   a structure) enables the user  to select a set of&#xD;
                   trajectories in the current plot and to see them&#xD;
                   highlighted in the scatter plot matrix (spm).&#xD;
                   If spm does not exist it is automatically created.&#xD;
                   In addition, brushed units are automatically highlighted in the&#xD;
                   minimum MD plot if it is already open.&#xD;
                   Please, note that the window style of the other figures is set&#xD;
                   equal to that which contains the monitoring MD&#xD;
                   plot. In other words, if the MD plot&#xD;
                   is docked all the other figures will be docked too.&#xD;
                   DATABRUSH IS A SCALAR.&#xD;
                   If databrush is a scalar the default selection tool is&#xD;
                   a rectangular brush and it is possible to brush only&#xD;
                   once (that is persist='').&#xD;
                   DATABRUSH IS A STRUCTURE.&#xD;
                   If databrush is a structure, it is possible to use all&#xD;
                   optional arguments of function selectdataFS.m and the&#xD;
                   following fields&#xD;
                   - databrush.persist = repeated brushng enabled. Persist is an empty value or a scalar&#xD;
                     containing the strings 'on' or 'off'.&#xD;
                     The default value of persist is '', that is brushing&#xD;
                     is allowed only once.&#xD;
                     If persist is 'on' or 'off' brushing can be done as&#xD;
                     many time as the user requires.&#xD;
                     If persist='on' then the unit(s) currently brushed&#xD;
                     are added to those previously brushed. it is&#xD;
                     possible, every time a new brushing is done, to use a&#xD;
                     different color for the brushed units.&#xD;
                     If persist='off' every time a new brush is performed&#xD;
                     units previously brushed are removed.&#xD;
                   - databrush.Label = add labels of brushed units in the&#xD;
                     malfwdplot.&#xD;
                   - databrush.labeladd = add labels of brushed units in spm.&#xD;
                     Character. [] (default) | '1'. &#xD;
                     If databrush.labeladd='1', we label in the scatter&#xD;
                     plot matrix the units of the last selected group with&#xD;
                     the unit row index in matrices X and y. The default&#xD;
                     value is labeladd='', i.e. no label is added.&#xD;
                   </LongDesc>
         <Example> 'databrush',1&#xD;
                   </Example>
         <DataType>single | double | struct</DataType>
         <Struct>
            <ItemCell>
               <Value>persist</Value>
               <Description>repeated brushng enabled. Persist is an empty value or a scalar&#xD;
                     containing the strings 'on' or 'off'.&#xD;
                     The default value of persist is '', that is brushing&#xD;
                     is allowed only once.&#xD;
                     If persist is 'on' or 'off' brushing can be done as&#xD;
                     many time as the user requires.&#xD;
                     If persist='on' then the unit(s) currently brushed&#xD;
                     are added to those previously brushed. it is&#xD;
                     possible, every time a new brushing is done, to use a&#xD;
                     different color for the brushed units.&#xD;
                     If persist='off' every time a new brush is performed&#xD;
                     units previously brushed are removed.&#xD;
                   </Description>
            </ItemCell>
            <ItemCell>
               <Value>Label</Value>
               <Description>add labels of brushed units in the&#xD;
                     malfwdplot.&#xD;
                   </Description>
            </ItemCell>
            <ItemCell>
               <Value>labeladd</Value>
               <Description>add labels of brushed units in spm.&#xD;
                     Character. [] (default) | '1'. &#xD;
                     If databrush.labeladd='1', we label in the scatter&#xD;
                     plot matrix the units of the last selected group with&#xD;
                     the unit row index in matrices X and y. The default&#xD;
                     value is labeladd='', i.e. no label is added.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>nameY</Name>
         <ShortDesc>cell array of strings of length v containing the labels&#xD;
                   of the variables of the dataset</ShortDesc>
         <TypeInd>Cell of strings</TypeInd>
         <LongDesc>If it&#xD;
                   is empty (default) the sequence Y1, ..., Yv will be used&#xD;
                   automatically&#xD;
                   </LongDesc>
         <Example> 'nameY',{'var1', var2, 'var3'}&#xD;
                   </Example>
         <DataType>cell of strings</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>display or save used options</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which&#xD;
                   controls whether to display or to save&#xD;
                   as output the options inside structures standard,&#xD;
                   fground and bground which have been used to draw the&#xD;
                   plot.&#xD;
                   plotopt=malfwdplot(out,'msg',1) enables to save inside&#xD;
                   cell  plotopt the options which have been used to draw&#xD;
                   the three types of trajectories (standard, foreground&#xD;
                   and background)&#xD;
                   plotopt=malfwdplot(out,'msg',2) saves inside cell plotopt&#xD;
                   the options which have been used and prints them on the&#xD;
                   screen&#xD;
                   </LongDesc>
         <Example> 'msg',1&#xD;
                   </Example>
         <DataType>single or double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>plotopt</Name>
         <ShortDesc> Cell array&#xD;
               of strings</ShortDesc>
         <TypeInd>options which have been used to create the plot.</TypeInd>
         <LongDesc> Store all options which have been used to&#xD;
               generate the plot inside cell plotopt.</LongDesc>
         <Struct> </Struct>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson, Riani and Cerioli (2004), Exploring Multivariate Data with&#xD;
   the Forward Search,&#xD;
   Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>resfwdplot</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Produce monitoring MD plot with all the default options.</Title>
         <Desc>&#xD;
     Generate input structure for malfwdplot&#xD;</Desc>
         <MATLABcode>
    n=100;&#xD;
    p=4;&#xD;
    state1=141243498;&#xD;
    randn('state', state1);&#xD;
    Y=randn(n,p);&#xD;
    kk=[1:10];&#xD;
    Y(kk,:)=Y(kk,:)+4;&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'plots',1,'init',30);&#xD;
    % Produce monitoring MD plot with all the default options&#xD;
    malfwdplot(out)&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure standard.</Title>
         <Desc>&#xD;
     Initialize structure standard&#xD;</Desc>
         <MATLABcode>
    standard=struct;&#xD;
    standard.LineStyle={'-';'-.';':'};&#xD;
    % Specify the line width&#xD;
    standard.LineWidth=0.5;&#xD;
    malfwdplot(out,'standard',standard)&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>&#xD;
     Initialize structure fground&#xD;</Desc>
         <MATLABcode>
    fground = struct;&#xD;
    % Specify which trajectories have to be highlighted&#xD;
    fground.funit=[2 5 20 23 35 45];&#xD;
    % Specify the steps in which labels have to be put&#xD;
    n=size(Y,1);&#xD;
    fground.flabstep=[n/2 n*0.75 n+0.5];;&#xD;
    % Specify the line width of the highlighted trajectories&#xD;
    fground.LineWidth=3;&#xD;
    % Produce a monitoring MD plot in which labels are put for units&#xD;
    % [2 5 20 23 35 45] in steps [n/2 n*0.75 n+0.5] of the search&#xD;
    malfwdplot(out,'fground',fground)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure bground.</Title>
         <Desc/>
         <MATLABcode>
    bground = struct;&#xD;
    % Specify a threshold to define the "background" trajectories&#xD;
    bground.bthresh=2;&#xD;
    % Trajectories whose MD is always between -btresh and +bthresh&#xD;
    % are shown as specified in bground.bstyle&#xD;
    bground.bstyle='faint';&#xD;
    malfwdplot(out,'bground',bground)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt;
       Example of the use of option databrush.</Title>
         <Desc>&#xD;
       (brushing is done only once using a rectangular selection tool)&#xD;</Desc>
         <MATLABcode>
    malfwdplot(out,'databrush',1)&#xD;
    %   An equivalent statement is&#xD;
    databrush=struct;&#xD;
    databrush.selectionmode='Rect';&#xD;
    malfwdplot(out,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>&#xD;
     load Swiss banknotes&#xD;</Desc>
         <MATLABcode>
    Y=load('swiss_banknotes.txt');&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'init',30);&#xD;
&#xD;
    % Initialize structure fground&#xD;
    fground = struct;&#xD;
    % Specify which trajectories have to be highlighted&#xD;
    fground.funit=out.Un(end-15:end,2);&#xD;
    % Specify the steps in which labels have to be put&#xD;
    n=size(Y,1);&#xD;
    fground.flabstep=[n/2 n*0.75 n+0.5];;&#xD;
    % Specify the line width of the highlighted trajectories&#xD;
    fground.LineWidth=3;&#xD;
    % Produce a monitoring MD plot in which labels are put for units&#xD;
    % out.Un(end-15:end,2)in steps [n/2 n*0.75 n+0.5] of the search&#xD;
    malfwdplot(out,'fground',fground)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option datatooltip.</Title>
         <Desc>&#xD;
       Gives the user the possibility of clicking on the different points&#xD;
       and have information about the unit selected, the step of entry&#xD;
       into the subset and the associated label&#xD;</Desc>
         <MATLABcode>
    malfwdplot(out,'datatooltip',1);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option datatooltip personalized.</Title>
         <Desc>&#xD;
     Gives the user the possibility of clicking on the different points&#xD;
     and have information about the unit selected, the step of entry&#xD;
     into the subset and the associated label.&#xD;</Desc>
         <MATLABcode>
    datatooltip = struct;&#xD;
    % In this example the style of the datatooltip is 'datatip'. Click on a&#xD;
    % trajectory when the resfwdplot is displayed.&#xD;
    %&#xD;
    datatooltip.DisplayStyle = 'datatip';&#xD;
    malfwdplot(out,'datatooltip',datatooltip);&#xD;
    %&#xD;
    % Now we use the default style, which is 'window'.&#xD;
    datatooltip.DisplayStyle = 'window';&#xD;
    malfwdplot(out,'datatooltip',datatooltip);&#xD;
&#xD;
    % Here we specify the RGB color used to highlight the selected trajectory.&#xD;
    % Note that we can obtain the RGB vector with our MATLAB class FSColors.&#xD;
    %&#xD;
    datatooltip = struct;&#xD;
&#xD;
    datatooltip.LineColor = FSColors.yellowish.RGB;&#xD;
    malfwdplot(out,'datatooltip',datatooltip);&#xD;
    % now LineColor is not a valid RGB vector, but red (default) will be used&#xD;
    datatooltip.LineColor = [123 41 12 32 1];&#xD;
    malfwdplot(out,'datatooltip',datatooltip);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt;
     Another example of the use of option datatooltip.</Title>
         <Desc>&#xD;
     The user can highlight the trajectories of the units that are in&#xD;
     the subset at a given step with a mouse click in proximity&#xD;
     of that step. A right click will terminate the exercise.&#xD;
     To activate this modality, we set the field SubsetLinesColor,&#xD;
     which specifies the color used to highlight the trajectories.&#xD;</Desc>
         <MATLABcode>
    datatooltip = struct;&#xD;
    datatooltip.SubsetLinesColor = FSColors.purplish.RGB;&#xD;
    malfwdplot(out,'datatooltip',datatooltip);&#xD;
&#xD;
    % Here we show that the modality is also activated when&#xD;
    % SubsetLinesColor is not a valid RGB vector.&#xD;
    % In this case the default highlight color (blue) is used.&#xD;
    datatooltip = struct;&#xD;
    datatooltip.SubsetLinesColor = 999;&#xD;
    malfwdplot(out,'datatooltip',datatooltip);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt;
       Example of the use of option databrush.</Title>
         <Desc>&#xD;
       (brushing is done only once using a rectangular selection tool)&#xD;</Desc>
         <MATLABcode>
    malfwdplot(out,'databrush',1)&#xD;
    %   An equivalent statement is&#xD;
    databrush=struct;&#xD;
    databrush.selectionmode='Rect';&#xD;
    malfwdplot(out,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt;
       Example of the use of brush using a rectangular selection tool and&#xD;
       a cyan colour.</Title>
         <Desc/>
         <MATLABcode>
    databrush=struct;&#xD;
    databrush.selectionmode='Rect';&#xD;
    databrush.FlagColor='c';&#xD;
    malfwdplot(out,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt;
       Example of the use of brush using multile selection circular tools.</Title>
         <Desc/>
         <MATLABcode>
    databrush=struct;&#xD;
    databrush.selectionmode='Brush';&#xD;
    malfwdplot(out,'databrush',databrush);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 6.&lt;/i&gt;
       Example of the use of brush using lasso selection tool and fleur&#xD;
       pointer.</Title>
         <Desc/>
         <MATLABcode>
    databrush=struct;&#xD;
    databrush.selectionmode='lasso';&#xD;
    databrush.Pointer='fleur';&#xD;
    malfwdplot(out,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 7.&lt;/i&gt;
       Example of the use of rectangular brush.</Title>
         <Desc>&#xD;
        Labels are added for the brushed units. Persistent labels appear in the plot which has&#xD;
       been brushed&#xD;</Desc>
         <MATLABcode>
    databrush=struct;&#xD;
    databrush.selectionmode='Rect';&#xD;
    databrush.Label='on';&#xD;
    databrush.RemoveLabels='off';&#xD;
    malfwdplot(out,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 8.&lt;/i&gt;
       Example of the use of persistent non cumulative brush.</Title>
         <Desc> Every time a&#xD;
       brushing action is performed previous highlightments are removed&#xD;</Desc>
         <MATLABcode>
    databrush=struct;&#xD;
    databrush.selectionmode='Rect';&#xD;
    databrush.persist='off';&#xD;
    databrush.Label='on';&#xD;
    databrush.RemoveLabels='off';&#xD;
    malfwdplot(out,'databrush',databrush);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 9.&lt;/i&gt;
       Example of the use of persistent cumulative brush.</Title>
         <Desc> Every time a&#xD;
       brushing action is performed current highlightments are added to&#xD;
       previous highlightments&#xD;</Desc>
         <MATLABcode>
    databrush=struct;&#xD;
    databrush.selectionmode='Rect';&#xD;
    databrush.persist='on';&#xD;
    databrush.Label='on';&#xD;
    databrush.RemoveLabels='off';&#xD;
    malfwdplot(out,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc>&#xD;
     load Swiss banknotes&#xD;</Desc>
         <MATLABcode>
    Y=load('swiss_banknotes.txt');&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'init',30);&#xD;
&#xD;
    % Initialize structure fground&#xD;
    fground = struct;&#xD;
    % Specify which trajectories have to be highlighted&#xD;
    fground.funit=out.Un(end-15:end,2);&#xD;
    % Specify the steps in which labels have to be put&#xD;
    n=size(Y,1);&#xD;
    fground.flabstep=[n/2 n*0.75 n+0.5];;&#xD;
    % Specify the line width of the highlighted trajectories&#xD;
    fground.LineWidth=3;&#xD;
    % Produce a monitoring MD plot in which labels are put for units&#xD;
    % out.Un(end-15:end,2)in steps [n/2 n*0.75 n+0.5] of the search&#xD;
    % and store the options to produce the plot inside plotopt&#xD;
    plotopt=malfwdplot(out,'fground',fground,'msg',2)&#xD;
    % In order to reuse the options which have been stored inside plotopt&#xD;
    % use the following sintax&#xD;
    % malfwdplot(out,plotopt{:})&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>