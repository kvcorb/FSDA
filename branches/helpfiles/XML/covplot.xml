<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->covplot</Title>
   <Purpose><!--This is the second line of the .m file-->covplot plots the trajectories of the elements of the covariance (correlation) matrix monitored
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Data to plot.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure containing the following fields out.S2cov= (n-init+1) x (v*(v+1)/2+1) matrix containing the monitoring of the elements of the covariance matrix in each step of the forward search:
1st col = fwd search index (from init to n);
2nd col = monitoring of S(1,1);
3rd col = monitoring of S(1,2);
...;
(compulsory argument).
out.Un= matrix containing the order of entry of each unit (necessary if datatooltip is true).
out.Y = n x v data matrix; n observations and v variables.</LongDesc>
         <Example> </Example>
         <DataType>struct</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>S2cov</Value>
               <Description>(n-init+1) x (v*(v+1)/2+1) matrix containing the monitoring&#xD;
               of the elements of the covariance matrix in each step&#xD;
               of the forward search: &#xD;
               1st col = fwd search index (from init to n); &#xD;
               2nd col = monitoring of S(1,1); &#xD;
               3rd col = monitoring of S(1,2); &#xD;
               ...; &#xD;
               (compulsory argument).</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true).</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>n x v data matrix; n observations&#xD;
               and v variables.</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>standard</Name>
         <ShortDesc>Appearance of the plot.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure which defines the appearance of the plot in terms of xlim, ylim, axes labels and their font size style, color of the lines, etc.
The structure contains the following fields:
standard.SizeAxesNum = scalar specifying the fontsize of the axes numbers. Default value is 10.
standard.xlim = two elements vector with minimum and maximum of the x axis. Default value is '' (automatic scale).
standard.ylim = two elements vector with minimum and maximum of the y axis. Default value is '' (automatic scale).
standard.titl = a label for the title (default: '').
standard.labx = a label for the x-axis (default: 'Subset size m').
standard.laby = a label for the y-axis (default: 'Elements of the correlation (covariance) matrix) standard.SizeAxesLab = Scalar specifying the fontsize of the labels of the axes. Default value is 12.
standard.LineWidth = scalar specifying line width for the trajectories.
standard.Color = cell array of strings containing the colors to be used for the standard units.
If length(Color)=1 the same color will be used for all units.
If length(Color)=2 half of the trajectories will appear with Color{1} and the other half with Color{2}. And so on with 3 cell elements, etc.
standard.LineStyle = cell containing the line types.</LongDesc>
         <Example>'standard',standard</Example>
         <DataType>structure</DataType>
         <Struct>
            <ItemCell>
               <Value>SizeAxesNum</Value>
               <Description>scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.</Description>
            </ItemCell>
            <ItemCell>
               <Value>xlim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>ylim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>titl</Value>
               <Description>a label for the title (default: '').</Description>
            </ItemCell>
            <ItemCell>
               <Value>labx</Value>
               <Description>a label for the x-axis (default: 'Subset size m').</Description>
            </ItemCell>
            <ItemCell>
               <Value>laby</Value>
               <Description>a label for the y-axis (default: 'Elements of&#xD;
                       the correlation (covariance) matrix)</Description>
            </ItemCell>
            <ItemCell>
               <Value>SizeAxesLab</Value>
               <Description>Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the standard units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line types.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>fground</Name>
         <ShortDesc>Trajectories in foregroud.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure which defines the trajectories in foregroud, that is which trajectories are highlighted and how they are plotted to be distinguishable from the others.
It is possible to control the label, the width, the color, the line type and the marker of the highlighted covariances. The structure fground contains the following fields:
fground.fthresh = (alternative to funit) numeric vector of length 1 or 2 which specifies the highlighted trajectories.
If length(fthresh)=1 the highlighted trajectories are those of units that throughtout the search had at leat once a covariance greater (in absolute value) than thresh. The default value of fthresh is Inf.
If length(fthresh)=2 the highlighted trajectories are those of units that throughtout the search had a covariance at leat once bigger than fthresh(2) or smaller than fthresh(1).
fground.funit = (alternative to fthresh) scalar containing the number of trajectories of the covariances to be highlighted. For example if funit=5 the trajectories with the 5 highest values of the covariances are highlighted.
Notice that if funit is supplied, fthresh is ignored. The default value of funit is 5.
fground.flabstep = numeric vector which specifies the steps of the search where to put labels for the highlighted trajectories (units). The default is to put the labels at the initial and final steps of the search, that is fground.flabstep=[m0 n].
flabstep='' means no label.
fground.LineWidth = scalar specifying line width for the highlighted trajectories (units). Default is 1.
fground.Color = cell array of strings containing the colors to be used for the highlighted trajectories (units).
If length(scolor)==1 the same color will be used for all highlighted units.
If for example length(scolor)=2 and there are 6 highlighted units, 3 highlighted trajectories appear with selunitcolor{1} and 3 highlighted trajectories with selunitcolor{2}.
fground.LineStyle = cell containing the line type of the highlighted trajectories.
fground.fmark = scalar controlling whether to plot highlighted trajectories as markers. If 1 each trajectory is plotted using a different marker else (default) no marker is used.</LongDesc>
         <Example>'fground',fground</Example>
         <DataType>structure</DataType>
         <Struct>
            <ItemCell>
               <Value>fthresh</Value>
               <Description>(alternative to funit) numeric vector of&#xD;
                       length 1 or 2 which specifies the highlighted&#xD;
                       trajectories. &#xD;
                       If length(fthresh)=1 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       at leat once a covariance greater (in absolute value)&#xD;
                       than thresh. The default value of fthresh is Inf. &#xD;
                       If length(fthresh)=2 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       a covariance at leat once bigger than fthresh(2) or&#xD;
                       smaller than fthresh(1).</Description>
            </ItemCell>
            <ItemCell>
               <Value>funit</Value>
               <Description>(alternative to fthresh) scalar containing the&#xD;
                       number of trajectories of the covariances to be&#xD;
                       highlighted. For example if funit=5 the&#xD;
                       trajectories with the 5 highest values of the&#xD;
                       covariances are highlighted.&#xD;
                       Notice that if funit is supplied,&#xD;
                       fthresh is ignored. The default value of funit is&#xD;
                       5.</Description>
            </ItemCell>
            <ItemCell>
               <Value>flabstep</Value>
               <Description>numeric vector which specifies the steps of&#xD;
                       the search where to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search, that is fground.flabstep=[m0 n].&#xD;
                       flabstep='' means no label.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(scolor)==1 the same color will be used for&#xD;
                       all highlighted units. &#xD;
                       If for example length(scolor)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with selunitcolor{1} and 3 highlighted trajectories with&#xD;
                       selunitcolor{2}.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line type of the highlighted&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>fmark</Value>
               <Description>scalar controlling whether to plot highlighted&#xD;
                       trajectories as markers. If 1 each trajectory is plotted using a different marker&#xD;
                       else (default) no marker is used.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Handle of the plot.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String which identifies the handle of the plot which is about to be created. The default is to use tag 'pl_cov'. Note that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created.</LongDesc>
         <Example>'tag','pl_mycov'</Example>
         <DataType>string</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>Information about the unit selected.</ShortDesc>
         <TypeInd>Empty value or structure.</TypeInd>
         <LongDesc>The default is datatooltip=1.
If datatooltip is not empty the user can use the mouse in order to have information about the unit selected, the step in which the unit enters the search and the associated label.
If datatooltip is a structure, it is possible to control the aspect of the data cursor (see function datacursormode for more details or the examples below).
The default options of the structure are DisplayStyle='Window' and SnapToDataVertex='on'.</LongDesc>
         <Example>'datatooltip',''</Example>
         <DataType>Empty value or structure.</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson, Riani and Cerioli (2004), Exploring Multivariate Data with the Forward Search, Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION--></SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>covplot with all default options.</Title>
         <Desc>
            <ItemCell>generate input structure for malfwdplot</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>n=100;</ItemCell>
            <ItemCell>p=4;</ItemCell>
            <ItemCell>state1=141243498;</ItemCell>
            <ItemCell>randn('state', state1);</ItemCell>
            <ItemCell>Y=randn(n,p);</ItemCell>
            <ItemCell>kk=[1:10];</ItemCell>
            <ItemCell>Y(kk,:)=Y(kk,:)+4;</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'init',30);</ItemCell>
            <ItemCell>% Produce monitoring covariances plot with all the default options</ItemCell>
            <ItemCell>covplot(out)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>covplot with optional arguments.</Title>
         <Desc>
            <ItemCell>Example of the use of some options inside structure standard.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>n=100;</ItemCell>
            <ItemCell>p=4;</ItemCell>
            <ItemCell>state1=141243498;</ItemCell>
            <ItemCell>randn('state', state1);</ItemCell>
            <ItemCell>Y=randn(n,p);</ItemCell>
            <ItemCell>kk=[1:10];</ItemCell>
            <ItemCell>Y(kk,:)=Y(kk,:)+4;</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'init',30);</ItemCell>
            <ItemCell>% Initialize structure standard</ItemCell>
            <ItemCell>standard=struct;</ItemCell>
            <ItemCell>standard.LineStyle={'-';'-.';'--'};</ItemCell>
            <ItemCell>% Specify the line width</ItemCell>
            <ItemCell>standard.LineWidth=0.5;</ItemCell>
            <ItemCell>covplot(out,'standard',standard)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>n=100;</ItemCell>
            <ItemCell>p=4;</ItemCell>
            <ItemCell>state1=141243498;</ItemCell>
            <ItemCell>randn('state', state1);</ItemCell>
            <ItemCell>Y=randn(n,p);</ItemCell>
            <ItemCell>kk=[1:10];</ItemCell>
            <ItemCell>Y(kk,:)=Y(kk,:)+4;</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'init',30);</ItemCell>
            <ItemCell>% Initialize structure fground</ItemCell>
            <ItemCell>fground = struct;</ItemCell>
            <ItemCell>% Specify the number of trajectories which have to be highlighted</ItemCell>
            <ItemCell>fground.funit=2;</ItemCell>
            <ItemCell>% Specify the steps in which labels have to be put</ItemCell>
            <ItemCell>n=size(Y,1);</ItemCell>
            <ItemCell>fground.flabstep=[n/2 n*0.75 n+0.5];</ItemCell>
            <ItemCell>% Specify the line width of the highlighted trajectories</ItemCell>
            <ItemCell>fground.LineWidth=3;</ItemCell>
            <ItemCell>% Produce a monitoring residuals plot in which labels are put for units</ItemCell>
            <ItemCell>% [2 5 20 23 35 45] in steps [n/2 n*0.75 n+0.5] of the search</ItemCell>
            <ItemCell>covplot(out,'fground',fground)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option tag.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>n=100;</ItemCell>
            <ItemCell>p=4;</ItemCell>
            <ItemCell>state1=141243498;</ItemCell>
            <ItemCell>randn('state', state1);</ItemCell>
            <ItemCell>Y=randn(n,p);</ItemCell>
            <ItemCell>kk=[1:10];</ItemCell>
            <ItemCell>Y(kk,:)=Y(kk,:)+4;</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs,'init',30);</ItemCell>
            <ItemCell> % Initialize structure fground</ItemCell>
            <ItemCell>fground = struct;</ItemCell>
            <ItemCell>% Specify the number of trajectories which have to be highlighted</ItemCell>
            <ItemCell>fground.funit=2;</ItemCell>
            <ItemCell>% Specify the steps in which labels have to be put</ItemCell>
            <ItemCell>n=size(Y,1);</ItemCell>
            <ItemCell>fground.flabstep=[n/2 n*0.75 n+0.5];</ItemCell>
            <ItemCell>% Specify the line width of the highlighted trajectories</ItemCell>
            <ItemCell>fground.LineWidth=3;</ItemCell>
            <ItemCell>ovplot(out,'fground',fground,'tag','pl_mycov')</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>