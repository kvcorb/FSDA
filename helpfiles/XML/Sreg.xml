<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->Sreg</Title>
   <Purpose><!--This is the second line of the .m file-->Sreg computes S estimators in linear regression</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>y</Name>
         <ShortDesc>Response variable</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>A vector with n elements that contains&#xD;
       the response variable. y can be either a row or a column vector.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>X</Name>
         <ShortDesc>Data matrix of explanatory variables (also called 'regressors') of&#xD;
       dimension (n x p-1)</ShortDesc>
         <TypeInd>Rows of X represent observations, and columns&#xD;
       represent variables</TypeInd>
         <LongDesc>Missing values (NaN's) and infinite values (Inf's) are allowed,&#xD;
       since observations (rows) with missing or infinite values will&#xD;
       automatically be excluded from the computations.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>intercept</Name>
         <ShortDesc>Indicator for constant term</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If 1, a model with&#xD;
               constant term will be fitted (default), if 0, no constant&#xD;
               term will be included.&#xD;
               </LongDesc>
         <Example> 'intercept',1 &#xD;
               </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>bdp</Name>
         <ShortDesc>breakdown point</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>It measures the fraction of outliers&#xD;
               the algorithm should resist. In this case any value greater&#xD;
               than 0 but smaller or equal than 0.5 will do fine.&#xD;
               Note that given bdp nominal&#xD;
               efficiency is automatically determined.&#xD;
                 </LongDesc>
         <Example> 'bdp',0.4&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>rhofunc</Name>
         <ShortDesc>rho function</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>String which specifies the rho function which must be used to&#xD;
               weight the residuals. Possible values are&#xD;
               'bisquare'&#xD;
               'optimal'&#xD;
               'hyperbolic'&#xD;
               'hampel'.&#xD;
               'bisquare' uses Tukey's $\rho$ and $\psi$ functions.&#xD;
               See TBrho.m and TBpsi.m.&#xD;
               'optimal' uses optimal $\rho$ and $\psi$ functions.&#xD;
               See OPTrho.m and OPTpsi.m.&#xD;
               'hyperbolic' uses hyperbolic $\rho$ and $\psi$ functions.&#xD;
               See HYPrho.m and HYPpsi.m.&#xD;
               'hampel' uses Hampel $\rho$ and $\psi$ functions.&#xD;
               See HArho.m and HApsi.m.&#xD;
               The default is bisquare&#xD;
                 </LongDesc>
         <Example> 'rhofunc','optimal' &#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>rhofuncparam</Name>
         <ShortDesc>Additional parameters for the specified rho function</ShortDesc>
         <TypeInd>Scalar or vector</TypeInd>
         <LongDesc>For hyperbolic rho function it is possible to set up the&#xD;
               value of k = sup CVC (the default value of k is 4.5).&#xD;
               For Hampel rho function it is possible to define parameters&#xD;
               a, b and c (the default values are a=2, b=4, c=8)&#xD;
                 </LongDesc>
         <Example> 'rhofuncparam',5 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nsamp</Name>
         <ShortDesc>Number of subsamples which will be extracted to find the&#xD;
                 robust estimator</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nsamp=0 all subsets will be extracted.&#xD;
                 They will be (n choose p).&#xD;
                 If the number of all possible subset is &amp;lt;1000 the&#xD;
                 default is to extract all subsets otherwise just 1000.&#xD;
                 </LongDesc>
         <Example> 'nsamp',1000 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refsteps</Name>
         <ShortDesc>Number of refining iterations</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Number of refining iterationsin each&#xD;
               subsample (default = 3).&#xD;
               refsteps = 0 means "raw-subsampling" without iterations.&#xD;
                 </LongDesc>
         <Example> 'refsteps',10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftol</Name>
         <ShortDesc>tolerance for the refining steps</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>The default value is 1e-6;&#xD;
                 </LongDesc>
         <Example> 'reftol',1e-05 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refstepsbestr</Name>
         <ShortDesc>number of refining iterations for each best subset</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar defining number of refining iterations for each&#xD;
               best subset (default = 50).&#xD;
                 </LongDesc>
         <Example> 'refstepsbestr',10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftolbestr</Name>
         <ShortDesc>Tolerance for the refining steps</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Tolerance for the refining steps&#xD;
               for each of the best subsets&#xD;
               The default value is 1e-8;&#xD;
                 </LongDesc>
         <Example> 'reftolbestr',1e-10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>minsctol</Name>
         <ShortDesc>tolerance for the iterative&#xD;
               procedure for finding the minimum value of the scale</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Value of tolerance for the iterative&#xD;
               procedure for finding the minimum value of the scale&#xD;
               for each subset and each of the best subsets&#xD;
               (It is used by subroutine minscale.m)&#xD;
               The default value is 1e-7;&#xD;
                 </LongDesc>
         <Example> 'minsctol',1e-7 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>bestr</Name>
         <ShortDesc>number of "best betas" to remember</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar defining number of "best betas" to remember from the&#xD;
               subsamples. These will be later iterated until convergence&#xD;
               (default=5)&#xD;
                 </LongDesc>
         <Example> 'bestr',10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>Confidence level which is&#xD;
               used to declare units as outliers</ShortDesc>
         <TypeInd>Scalar&#xD;
               Usually conflev=0</TypeInd>
         <LongDesc>95, 0.975 0.99 (individual alpha)&#xD;
               or 1-0.05/n, 1-0.025/n, 1-0.01/n (simultaneous alpha).&#xD;
               Default value is 0.975&#xD;
                 </LongDesc>
         <Example> 'conflev',0.99&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Level of output to display</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>It controls whether&#xD;
                 to display or not messages on the screen.&#xD;
               If msg==1 (default) messages are displayed&#xD;
               on the screen about estimated time to compute the estimator&#xD;
               and the warnings about&#xD;
               'MATLAB:rankDeficientMatrix', 'MATLAB:singularMatrix' and&#xD;
               'MATLAB:nearlySingularMatrix' are set to off&#xD;
               else no message is displayed on the screen&#xD;
                 </LongDesc>
         <Example> 'msg',0 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on&#xD;
                 matrix y and matrix X. Notice that y and X are left&#xD;
                 unchanged. In other words the additional column of ones&#xD;
                 for the intercept is not added. As default nocheck=0.&#xD;
               </LongDesc>
         <Example> 'nocheck',1 &#xD;
               </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If plots = 1, generates a plot with the robust residuals&#xD;
               against index number. The confidence level used to draw the&#xD;
               confidence bands for the residuals is given by the input&#xD;
               option conflev. If conflev is not specified a nominal 0.975&#xD;
               confidence interval will be used.&#xD;
                 </LongDesc>
         <Example> 'plots',0 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>yxsave</Name>
         <ShortDesc>save option</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>if yxsave is equal to 1, the response&#xD;
               vector y and data matrix X are saved into the output&#xD;
               structure out. Default is 0, i.e. no saving is done.&#xD;
               </LongDesc>
         <Example> 'yxsave',1 &#xD;
               </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc>
            <ItemCell>
               <Value>beta</Value>
               <Description>vector containing the S estimator of regression&#xD;
                       coefficients</Description>
            </ItemCell>
            <ItemCell>
               <Value>scale</Value>
               <Description>scalar containing the estimate of the scale&#xD;
                       (sigma). This is the value of the objective function</Description>
            </ItemCell>
            <ItemCell>
               <Value>bs</Value>
               <Description>p x 1 vector containing the units forming best subset&#xD;
                       associated with S estimate of regression coefficient.</Description>
            </ItemCell>
            <ItemCell>
               <Value>residuals</Value>
               <Description>n x 1 vector containing the estimates of the robust&#xD;
                       scaled residuals</Description>
            </ItemCell>
            <ItemCell>
               <Value>outliers</Value>
               <Description>this output is present only if conflev has been&#xD;
                       specified. It is a vector containing the list of&#xD;
                       the units declared as outliers using confidence&#xD;
                       level specified in input scalar conflev</Description>
            </ItemCell>
            <ItemCell>
               <Value>conflev</Value>
               <Description>confidence level which is used to declare outliers.&#xD;
                       Remark: scalar out.conflev will be used to draw the&#xD;
                       horizontal line (confidence band) in the plot.</Description>
            </ItemCell>
            <ItemCell>
               <Value>singsub</Value>
               <Description>Number of subsets wihtout full rank. Notice that&#xD;
                       out.singsub &amp;gt; 0.1*(number of subsamples) produces a&#xD;
                       warning</Description>
            </ItemCell>
            <ItemCell>
               <Value>weights</Value>
               <Description>n x 1 vector containing the estimates of the weights</Description>
            </ItemCell>
            <ItemCell>
               <Value>class</Value>
               <Description>'S'</Description>
            </ItemCell>
            <ItemCell>
               <Value>rhofunc</Value>
               <Description>string identifying the rho function which has been&#xD;
                       used</Description>
            </ItemCell>
            <ItemCell>
               <Value>rhofuncparam</Value>
               <Description>vector which contains the additional parameters&#xD;
                       for the specified rho function which have been&#xD;
                       used. For hyperbolic rho function the value of&#xD;
                       k =sup CVC. For Hampel rho function the parameters&#xD;
                       a, b and c</Description>
            </ItemCell>
            <ItemCell>
               <Value>y</Value>
               <Description>response vector Y. The field is present if option&#xD;
                       yxsave is set to 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>X</Value>
               <Description>data matrix X. The field is present if option&#xD;
                       yxsave is set to 1.</Description>
            </ItemCell>
         </LongDesc>
      </Item>
      <Item>
         <Name>varargout</Name>
         <ShortDesc>C        : matrix </ShortDesc>
         <TypeInd>Indices of the subsamples &#xD;
                       extracted for computing the estimate (the so called&#xD;
                       elemental sets).</TypeInd>
         <LongDesc> </LongDesc>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--> &#xD;
&#xD;
 This function follows the lines of MATLAB/R code developed during the&#xD;
 years by many authors.&#xD;
 For more details see http://www.econ.kuleuven.be/public/NDBAE06/programs/&#xD;
 and the R library robustbase http://robustbase.r-forge.r-project.org/&#xD;
 The core of these routines, e.g. the resampling approach, however, has&#xD;
 been completely redesigned, with considerable increase of the&#xD;
 computational performance.&#xD;
&#xD;
 </Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Maronna, R.A., Martin D. and Yohai V.J. (2006), Robust Statistics, Theory&#xD;
 and Methods, Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>MMreg</Item>
      <Item>Taureg</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Sreg with all default options.</Title>
         <Desc>&#xD;
     Run this code to see the output shown in the help file&#xD;</Desc>
         <MATLABcode>
    n=200;&#xD;
    p=3;&#xD;
    randn('state', 123456);&#xD;
    X=randn(n,p);&#xD;
    % Uncontaminated data&#xD;
    y=randn(n,1);&#xD;
    % Contaminated data&#xD;
    ycont=y;&#xD;
    ycont(1:5)=ycont(1:5)+6;&#xD;
    [out]=Sreg(ycont,X);&#xD;
    laby='Scaled S residuals'; &#xD;
    titl='';&#xD;
   resindexplot(out.residuals,'title',titl,'laby',laby,'numlab','')&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Sreg with optional input arguments.</Title>
         <Desc>&#xD;
     Sreg with optimal rho function. Run this code to see the output shown in the help file&#xD;</Desc>
         <MATLABcode>
    n=200;&#xD;
    p=3;&#xD;
    randn('state', 123456);&#xD;
    X=randn(n,p);&#xD;
    % Uncontaminated data&#xD;
    y=randn(n,1);&#xD;
    % Contaminated data&#xD;
    ycont=y;&#xD;
    ycont(1:5)=ycont(1:5)+6;&#xD;
    [out]=Sreg(ycont,X,'rhofunc','optimal');&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Sreg with hyperbolic rho function.</Title>
         <Desc>&#xD;
     Run this code to see the output shown in the help file&#xD;</Desc>
         <MATLABcode>
    n=200;&#xD;
    p=3;&#xD;
    randn('state', 123456);&#xD;
    X=randn(n,p);&#xD;
    % Uncontaminated data&#xD;
    y=randn(n,1);&#xD;
    % Contaminated data&#xD;
    ycont=y;&#xD;
    ycont(1:5)=ycont(1:5)+6;&#xD;
    [out]=Sreg(ycont,X,'rhofunc','hyperbolic');&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>