<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->wraptextFS</Title>
   <Purpose><!--This is the second line of the .m file--> wraptextFS formats long strings into wrapped text of specified width.
</Purpose>
   <Description><!--Description section-->This function not only does text wrapping, but also enables us:
1) to control left margin of the text;
2) to control the maximum width of the text or the right margin;
3) to add a (comment) sign at the beginning of each row of the wrapped text;
4) to indent the first line of the text.
5) to personalize comments, and left margin for comments.
This function uses routine strjoin and therefore can be used just by those who have a version of MATLAB&amp;gt;=2013a
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>str</Name>
         <ShortDesc>Input text.</ShortDesc>
         <TypeInd>Character vector.</TypeInd>
         <LongDesc>String which has to be analysed and formatted.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>startcolumn</Name>
         <ShortDesc>Left margin of the text.</ShortDesc>
         <TypeInd>Scalar (non negative integer).</TypeInd>
         <LongDesc>This option controls the left margin of the text. The default value of startcolumn is 1.</LongDesc>
         <Example>'startcolumn',10</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>endcolumn</Name>
         <ShortDesc>Right margin of the text.</ShortDesc>
         <TypeInd>Scalar (non negative integer).</TypeInd>
         <LongDesc>This option controls the right margin of the text.
The default value of endcolumn is 75.</LongDesc>
         <Example>'endcolumn',50</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>width</Name>
         <ShortDesc>width of the text.</ShortDesc>
         <TypeInd>Scalar (non negative integer).</TypeInd>
         <LongDesc>This option controls the width of the text.
The default value of width is 65.
Remark: it is necessary just to give two values among, width, startcolumn and endcolumn because the third is automatically determined</LongDesc>
         <Example>'width',50</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>firstline</Name>
         <ShortDesc>indentation for first line.</ShortDesc>
         <TypeInd>Boolean.</TypeInd>
         <LongDesc>If firstline is true then the first line starts in column 3 and not in column startcolumn, while the text in all the other columns starts as specified by option startcolumn.
The default value of firstline is false</LongDesc>
         <Example>'firstline',true</Example>
         <DataType>Boolean</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>comment</Name>
         <ShortDesc>specify whether text is a Matlab comment.</ShortDesc>
         <TypeInd>Boolean or structure.</TypeInd>
         <LongDesc>If comment is true then the first character in each row will be the percentage sign (comment symbol in Matlab). The default value of comment is false. If comment is a structure it is possible to personalize the symbol to put in from of each row, and the left margin of the comment symbol. More precisely, if comment is a structure it may contain the following fields:
comment.commentsign = character(s) to be put at the beginning of each row. String which identifies comment sign.
comment.startcolumn = starting column to include commentsign.</LongDesc>
         <Example>'comment',true</Example>
         <DataType>Boolean</DataType>
         <Struct>
            <ItemCell>
               <Value>commentsign</Value>
               <Description>character(s) to be put at the beginning of&#xD;
               each row. String which identifies comment sign.</Description>
            </ItemCell>
            <ItemCell>
               <Value>startcolumn</Value>
               <Description>starting column to include&#xD;
               commentsign.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>code</Name>
         <ShortDesc>specify whether text is a Matlab code (with comments).</ShortDesc>
         <TypeInd>Boolean.</TypeInd>
         <LongDesc>If code than the extra space on the left is not trimmed. The default value of code is false. Option code must be set to true when we have to translate to .m file code which contains wanted indentation.</LongDesc>
         <Example>'code',false</Example>
         <DataType>Boolean</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>strFormatted</Name>
         <ShortDesc>Character</ShortDesc>
         <TypeInd>Output text.</TypeInd>
         <LongDesc>Formatted string.
Text starts in column specified by option startcolumn, the first line may have an indentation, and length of the text in each row cannot exceed the prespecified width.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION-->&#xD;
&#xD;
  This file had been inspired by function wraptext written by  Chad A. Greene of the University of Texas&#xD;
 https://www.mathworks.com/matlabcentral/fileexchange/53176-wraptext&#xD;
&#xD;
&#xD;
 
</Acknowledgements>
   <References><!--REFERENCES SECTION--></References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>strtrim</Item>
      <Item>removeExtraSpacesLF</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>wraptextFS with all default options.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>str='Paene insularum, Sirmio, insularumque ocelle, quascumque in liquentibus stagnis marique vasto fert uterque Neptunus, quam te libenter quamque laetus inviso, vix mi ipse credens Thuniam atque Bithunos liquisse campos et videre te in tuto. o quid solutis est beatius curis, cum mens onus reponit, ac peregrino labore fessi venimus larem ad nostrum, desideratoque acquiescimus lecto? hoc est quod unum est pro laboribus tantis. salve, o venusta Sirmio, atque ero gaude gaudente, vosque, o Lydiae lacus undae, ridete quidquid est domi cachinnorum.';</ItemCell>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    Newstr=wraptextFS(str)</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>start text in column 3 and put percentage sign at the beginning of each line.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    Newstr=wraptextFS(str,'comment',true,'startcolumn',3)</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of specification of startcolumn and text width.</Title>
         <Desc>
            <ItemCell>Start text in column 5, the maximum text width is 40.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    Newstr=wraptextFS(str,'comment',true,'startcolumn',10,'width',40)</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Add an indentation for first line.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    Newstr=wraptextFS(str,'comment',true,'startcolumn',10,'width',40,'firstline',true)</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Use the width of command window.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    startcolumn=10;</ItemCell>
            <ItemCell>    cms = get(0,'CommandWindowSize');</ItemCell>
            <ItemCell>    width = cms(1)-10;</ItemCell>
            <ItemCell>    Newstr=wraptextFS(str,'comment',false,'startcolumn',startcolumn,'width',width)</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of input option comment supplied as structure.</Title>
         <Desc>
            <ItemCell>Symbol '$$$' is included at the beginning of each row in column 5.</ItemCell>
            <ItemCell>The width of the text is 60 and starts in column 12.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>comment=struct;</ItemCell>
            <ItemCell>comment.commentsign='$$$';</ItemCell>
            <ItemCell>comment.startcolumn=5;</ItemCell>
            <ItemCell>startcolumn=12;</ItemCell>
            <ItemCell>width=60;</ItemCell>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>   Newstr=wraptextFS(str,'comment',comment,'startcolumn',startcolumn,'width',width);</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of use of option code.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>if verLessThan('matlab','8.1') ==1</ItemCell>
            <ItemCell>    warning('This function uses routine strjoin and works just with Matlab &amp;gt;=2013a')</ItemCell>
            <ItemCell>else</ItemCell>
            <ItemCell>    out=xmlreadFS('tclust');</ItemCell>
            <ItemCell>    ii=2;</ItemCell>
            <ItemCell>    startcolumnEx=5;</ItemCell>
            <ItemCell>    endcolumn=60;</ItemCell>
            <ItemCell>    Ex=out.Ex;</ItemCell>
            <ItemCell>    comment=struct;</ItemCell>
            <ItemCell>    comment.commentsign='%';</ItemCell>
            <ItemCell>    comment.startcolumn=startcolumnEx;</ItemCell>
            <ItemCell>    endcolumnEx=60;</ItemCell>
            <ItemCell>    i=2; jj=3;</ItemCell>
            <ItemCell>    Exi=strtrim(Ex{i,jj});</ItemCell>
            <ItemCell>    Exi{3,1}='%                        This is an example with extra spaces on the left which are trimmed';</ItemCell>
            <ItemCell>    Exi{10,1}='for i=1:10';</ItemCell>
            <ItemCell>    Exi{11,1}='    disp(i)';</ItemCell>
            <ItemCell>    % In this case the extra space on the left is wanted and it is not deleted</ItemCell>
            <ItemCell>    Exi{12,1}='end';</ItemCell>
            <ItemCell>    Eximod=Exi;</ItemCell>
            <ItemCell>    for ii=1:size(Exi,1)</ItemCell>
            <ItemCell>        % We must check whether it is comment or not</ItemCell>
            <ItemCell>        % If it is a comment if the first character is symbol %</ItemCell>
            <ItemCell>        Exii=Exi{ii,1};</ItemCell>
            <ItemCell>        if ~isempty(Exii)</ItemCell>
            <ItemCell>            if strcmp(Exii(1),'%')</ItemCell>
            <ItemCell>                % In this case strtrim is invoked inside wraptextFS (code is</ItemCell>
            <ItemCell>                % false)</ItemCell>
            <ItemCell>                descriFormatted=wraptextFS( Exii(2:end),'startcolumn',startcolumnEx,'endcolumn',endcolumn,'firstline',false,'comment',comment,'code',false);</ItemCell>
            <ItemCell>            else</ItemCell>
            <ItemCell>                descriFormatted=wraptextFS( Exii,'startcolumn',startcolumnEx,'endcolumn',endcolumnEx,'firstline',false,'comment',false,'code',true);</ItemCell>
            <ItemCell>            end</ItemCell>
            <ItemCell>        end</ItemCell>
            <ItemCell>        Eximod{ii,1}=descriFormatted;</ItemCell>
            <ItemCell>    end</ItemCell>
            <ItemCell>    % Before formatting</ItemCell>
            <ItemCell>    disp(Exi)</ItemCell>
            <ItemCell>    % After formatting</ItemCell>
            <ItemCell>    disp([Eximod{:}])</ItemCell>
            <ItemCell>end</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>