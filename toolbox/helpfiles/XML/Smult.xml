<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->Smult</Title>
   <Purpose><!--This is the second line of the .m file-->Smult computes S estimators in multivariate analysis
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>Y</Name>
         <ShortDesc>Input data.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>n x v data matrix; n observations and v variables. Rows of Y represent observations, and columns represent variables.
Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.</LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>bdp</Name>
         <ShortDesc>breakdown point.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>It measures the fraction of outliers the algorithm should resist. In this case any value greater than 0 but smaller or equal than 0.5 will do fine (default=0.5).
Note that given bdp nominal efficiency is automatically determined.</LongDesc>
         <Example>'bdp',0.4</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nsamp</Name>
         <ShortDesc>Number of subsamples which will be extracted to find the robust estimator.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nsamp=0 all subsets will be extracted.
They will be (n choose p).
If the number of all possible subset is &amp;lt;1000 the default is to extract all subsets otherwise just 1000.</LongDesc>
         <Example>'nsamp',1000</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refsteps</Name>
         <ShortDesc>Number of refining iterations.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Number of refining iterationsin each subsample (default = 3).
refsteps = 0 means "raw-subsampling" without iterations.</LongDesc>
         <Example>'refsteps',0</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftol</Name>
         <ShortDesc>scalar.</ShortDesc>
         <TypeInd>Default value of tolerance for the refining steps.</TypeInd>
         <LongDesc>The default value is 1e-6;</LongDesc>
         <Example>'reftol',1e-8</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refstepsbestr</Name>
         <ShortDesc>number of refining iterations for each best subset.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar defining number of refining iterations for each best subset (default = 50).</LongDesc>
         <Example>'refstepsbestr',10</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftolbestr</Name>
         <ShortDesc>Tolerance for the refining steps.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Tolerance for the refining steps for each of the best subsets The default value is 1e-8;</LongDesc>
         <Example>'reftolbestr',1e-10</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>minsctol</Name>
         <ShortDesc>tolerance for the iterative procedure for finding the minimum value of the scale.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Value of tolerance for the iterative procedure for finding the minimum value of the scale for each subset and each of the best subsets (It is used by subroutine minscale.m) The default value is 1e-7;</LongDesc>
         <Example>'minsctol',1e-7</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>bestr</Name>
         <ShortDesc>number of "best betas" to remember.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar defining number of "best betas" to remember from the subsamples. These will be later iterated until convergence (default=5)</LongDesc>
         <Example>'bestr',10</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>Confidence level which is used to declare units as outliers.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Usually conflev=0.95, 0.975 0.99 (individual alpha) or 1-0.05/n, 1-0.025/n, 1-0.01/n (simultaneous alpha).
Default value is 0.975</LongDesc>
         <Example>'conflev',0.99</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on matrix Y. As default nocheck=0.</LongDesc>
         <Example>'nocheck',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen.</ShortDesc>
         <TypeInd>Scalar or structure.</TypeInd>
         <LongDesc>If plots is a structure or scalar equal to 1, generates:
(1) a plot of Mahalanobis distances against index number. The confidence level used to draw the confidence bands for the MD is given by the input option conflev. If conflev is not specified a nominal 0.975 confidence interval will be used.
(2) a scatter plot matrix with the outliers highlighted.
If plots is a structure it may contain the following fields plots.labeladd = if this option is '1', the outliers in the spm are labelled with their unit row index. The default value is labeladd='', i.e. no label is added.
plots.nameY = cell array of strings containing the labels of the variables. As default value, the labels which are added are Y1, ...Yv.</LongDesc>
         <Example>'plots',0</Example>
         <DataType>single | double</DataType>
         <Struct>
            <ItemCell>
               <Value>labeladd</Value>
               <Description>if this option is '1', the outliers in the&#xD;
                       spm are labelled with their unit row index. The&#xD;
                       default value is labeladd='', i.e. no label is&#xD;
                       added.</Description>
            </ItemCell>
            <ItemCell>
               <Value>nameY</Value>
               <Description>cell array of strings containing the labels of&#xD;
                       the variables. As default value, the labels which are&#xD;
                       added are Y1, ...Yv.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Level of output to display.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If msg==1 (default) messages are displayed on the screen about estimated time to compute the final estimator else no message is displayed on the screen</LongDesc>
         <Example>'msg',0</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ysave</Name>
         <ShortDesc>save input matrix Y.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar that is set to 1 to request that the data matrix Y is saved into the output structure out. This feature is meant at simplifying the use of function malindexplot.
Default is 0, i.e. no saving is done.</LongDesc>
         <Example>'ysave',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>loc</Value>
               <Description>1 x v vector containing S estimate of location</Description>
            </ItemCell>
            <ItemCell>
               <Value>shape</Value>
               <Description>v x v matrix containing robust estimate of the shape matrix. Remark det|shape|=1</Description>
            </ItemCell>
            <ItemCell>
               <Value>scale</Value>
               <Description>scalar, robust estimate of the scale</Description>
            </ItemCell>
            <ItemCell>
               <Value>cov</Value>
               <Description>out.scale^2 * out.shape = robust estimate of covariance matrix</Description>
            </ItemCell>
            <ItemCell>
               <Value>bs</Value>
               <Description>(v+1) x 1 vector containing the units forming best subset associated with S estimate of location.</Description>
            </ItemCell>
            <ItemCell>
               <Value>md</Value>
               <Description>n x 1 vector containing the estimates of the robust Mahalanobis distances (in squared units)</Description>
            </ItemCell>
            <ItemCell>
               <Value>outliers</Value>
               <Description>A vector containing the list of the units declared as outliers using confidence level specified in input scalar conflev</Description>
            </ItemCell>
            <ItemCell>
               <Value>conflev</Value>
               <Description>Confidence level that was used to declare outliers</Description>
            </ItemCell>
            <ItemCell>
               <Value>singsub</Value>
               <Description>Number of subsets without full rank. Notice that out.singsub &amp;gt; 0.1*(number of subsamples) produces a warning</Description>
            </ItemCell>
            <ItemCell>
               <Value>weights</Value>
               <Description>n x 1 vector containing the estimates of the weights</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>Data matrix Y. The field is present if option ysave is set to 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>class</Value>
               <Description>'Smult'</Description>
            </ItemCell>
         </Structure>
      </Item>
      <Item>
         <Name>varargout</Name>
         <ShortDesc>C : matrix</ShortDesc>
         <TypeInd>Indices of the subsamples extracted for computing the estimate (the so called elemental sets).</TypeInd>
         <LongDesc> </LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--> &#xD;
&#xD;
 This function follows the lines of MATLAB/R code developed during the&#xD;
 years by many authors.&#xD;
 For more details see http://www.econ.kuleuven.be/public/NDBAE06/programs/&#xD;
 and the R library robustbase http://robustbase.r-forge.r-project.org/&#xD;
 The core of these routines, e.g. the resampling approach, however, has&#xD;
 been completely redesigned, with considerable increase of the&#xD;
 computational performance.&#xD;
&#xD;
 
</Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Maronna, R.A., Martin D. and Yohai V.J. (2006), Robust Statistics, Theory and Methods, Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>MMmult</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Smult with all default options.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>v=3;</ItemCell>
            <ItemCell>randn('state', 123456);</ItemCell>
            <ItemCell>Y=randn(n,v);</ItemCell>
            <ItemCell>% Contaminated data</ItemCell>
            <ItemCell>Ycont=Y;</ItemCell>
            <ItemCell>Ycont(1:5,:)=Ycont(1:5,:)+3;</ItemCell>
            <ItemCell>[out]=Smult(Ycont);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Smult with optional arguments.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>v=3;</ItemCell>
            <ItemCell>randn('state', 123456);</ItemCell>
            <ItemCell>Y=randn(n,v);</ItemCell>
            <ItemCell>% Contaminated data</ItemCell>
            <ItemCell>Ycont=Y;</ItemCell>
            <ItemCell>Ycont(1:5,:)=Ycont(1:5,:)+3;</ItemCell>
            <ItemCell>[out]=Smult(Ycont,'plots',1);</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Smult with exctracted subsamples.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>v=3;</ItemCell>
            <ItemCell>randn('state', 123456);</ItemCell>
            <ItemCell>Y=randn(n,v);</ItemCell>
            <ItemCell>% Contaminated data</ItemCell>
            <ItemCell>Ycont=Y;</ItemCell>
            <ItemCell>Ycont(1:5,:)=Ycont(1:5,:)+3;</ItemCell>
            <ItemCell>[out,C]=Smult(Ycont);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>