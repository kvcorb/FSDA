##   Build CI test and Coverage Report for FSDA Toolbox in Azure Pipeline
#
#  ____    ____    ____    ______      ______                ___    __                       
# /\  _`\ /\  _`\ /\  _`\ /\  _  \    /\__  _\              /\_ \  /\ \                      
# \ \ \L\_\ \,\L\_\ \ \/\ \ \ \L\ \   \/_/\ \/   ___     ___\//\ \ \ \ \____    ___   __  _  
#  \ \  _\/\/_\__ \\ \ \ \ \ \  __ \     \ \ \  / __`\  / __`\\ \ \ \ \ '__`\  / __`\/\ \/'\ 
#   \ \ \/   /\ \L\ \ \ \_\ \ \ \/\ \     \ \ \/\ \L\ \/\ \L\ \\_\ \_\ \ \L\ \/\ \L\ \/>  </ 
#    \ \_\   \ `\____\ \____/\ \_\ \_\     \ \_\ \____/\ \____//\____\\ \_,__/\ \____//\_/\_\
#     \/_/    \/_____/\/___/  \/_/\/_/      \/_/\/___/  \/___/ \/____/ \/___/  \/___/ \//\/_/
#                                                                                           
#                                                                                           

jobs:
- job: Test
  strategy:
      matrix:
        regression:
          categoryName: 'regression'
        regressionTS:
          categoryName: 'regressionTS'
        regressionLTSts:
          categoryName: 'regressionLTSts'
        regressionEXT:
          categoryName: 'regressionEXT'
        graphics:
          categoryName: 'graphics'
        multivariate:
          categoryName: 'multivariate'
        multivariate-clustering:
          categoryName: 'multivariate-clustering'
        regression-clustering:
          categoryName: 'regression-clustering'
        mixsim:
          categoryName: 'mixsim'
        utilities:
          categoryName: 'utilities'
        tclustMULT:
          categoryName: 'tclustMULT'
  pool:
      vmImage: 'Ubuntu 16.04'
  variables:
      CATEGORY_TO_TEST: $(categoryName)
  timeoutInMinutes: 365 
  steps:
    - script: wget -qO- --retry-connrefused https://storage.googleapis.com/matlabimagesus/public/install.sh | sudo -E bash
    - script: matlab -batch "run runAllMyTestsFS.m" 
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml'  
    - script: |
        bash <(curl -s https://codecov.io/bash)
      displayName: 'Upload to codecov.io'
    - task: PublishPipelineArtifact@1
      condition: always()
      inputs:
        path: $(System.DefaultWorkingDirectory)/tests-$(categoryName)
        artifact: Test-$(categoryName)

