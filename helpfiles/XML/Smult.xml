<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->Smult</Title>
   <Purpose><!--This is the second line of the .m file-->Smult computes S estimators in multivariate analysis</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>Y</Name>
         <ShortDesc>Input data</ShortDesc>
         <TypeInd>Matrix</TypeInd>
         <LongDesc>n x v data matrix; n observations and v variables. Rows of&#xD;
               Y represent observations, and columns represent variables.&#xD;
               Missing values (NaN's) and infinite values (Inf's) are&#xD;
               allowed, since observations (rows) with missing or infinite&#xD;
               values will automatically be excluded from the&#xD;
               computations.&#xD;
                </LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>bdp</Name>
         <ShortDesc>breakdown point</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>It measures the fraction of outliers&#xD;
               the algorithm should resist. In this case any value greater&#xD;
               than 0 but smaller or equal than 0.5 will do fine (default=0.5).&#xD;
               Note that given bdp nominal&#xD;
               efficiency is automatically determined.&#xD;
                 </LongDesc>
         <Example> 'bdp',0.4&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nsamp</Name>
         <ShortDesc>Number of subsamples which will be extracted to find the&#xD;
                 robust estimator</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nsamp=0 all subsets will be extracted.&#xD;
                 They will be (n choose p).&#xD;
                 If the number of all possible subset is &amp;lt;1000 the&#xD;
                 default is to extract all subsets otherwise just 1000.&#xD;
                 </LongDesc>
         <Example> 'nsamp',1000 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refsteps</Name>
         <ShortDesc>Number of refining iterations</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Number of refining iterationsin each&#xD;
               subsample (default = 3).&#xD;
               refsteps = 0 means "raw-subsampling" without iterations.&#xD;
                 </LongDesc>
         <Example> 'refsteps',0 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftol</Name>
         <ShortDesc>scalar</ShortDesc>
         <TypeInd>Default value of tolerance for the refining steps</TypeInd>
         <LongDesc>The default value is 1e-6;&#xD;
                 </LongDesc>
         <Example> 'reftol',1e-8 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refstepsbestr</Name>
         <ShortDesc>number of refining iterations for each best subset</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar defining number of refining iterations for each&#xD;
               best subset (default = 50).&#xD;
                 </LongDesc>
         <Example> 'refstepsbestr',10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftolbestr</Name>
         <ShortDesc>Tolerance for the refining steps</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Tolerance for the refining steps&#xD;
               for each of the best subsets&#xD;
               The default value is 1e-8;&#xD;
                 </LongDesc>
         <Example> 'reftolbestr',1e-10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>minsctol</Name>
         <ShortDesc>tolerance for the iterative&#xD;
               procedure for finding the minimum value of the scale</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Value of tolerance for the iterative&#xD;
               procedure for finding the minimum value of the scale&#xD;
               for each subset and each of the best subsets&#xD;
               (It is used by subroutine minscale.m)&#xD;
               The default value is 1e-7;&#xD;
                 </LongDesc>
         <Example> 'minsctol',1e-7 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>bestr</Name>
         <ShortDesc>number of "best betas" to remember</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar defining number of "best betas" to remember from the&#xD;
               subsamples. These will be later iterated until convergence&#xD;
               (default=5)&#xD;
                 </LongDesc>
         <Example> 'bestr',10 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>Confidence level which is&#xD;
               used to declare units as outliers</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Usually conflev=0.95, 0.975 0.99 (individual alpha)&#xD;
               or 1-0.05/n, 1-0.025/n, 1-0.01/n (simultaneous alpha).&#xD;
               Default value is 0.975&#xD;
                 </LongDesc>
         <Example> 'conflev',0.99&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on&#xD;
               matrix Y. As default nocheck=0.&#xD;
               </LongDesc>
         <Example> 'nocheck',1 &#xD;
               </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen</ShortDesc>
         <TypeInd>Scalar or structure</TypeInd>
         <LongDesc>If plots is a structure or scalar equal to 1, generates: &#xD;
               (1) a plot of Mahalanobis distances against index number. The&#xD;
               confidence level used to draw the confidence bands for&#xD;
               the MD is given by the input option conflev. If conflev is&#xD;
               not specified a nominal 0.975 confidence interval will be&#xD;
               used.&#xD;
               (2) a scatter plot matrix with the outliers highlighted. &#xD;
               If plots is a structure it may contain the following fields&#xD;
                   plots.labeladd = if this option is '1', the outliers in the&#xD;
                       spm are labelled with their unit row index. The&#xD;
                       default value is labeladd='', i.e. no label is&#xD;
                       added.&#xD;
                   plots.nameY = cell array of strings containing the labels of&#xD;
                       the variables. As default value, the labels which are&#xD;
                       added are Y1, ...Yv.&#xD;
                 </LongDesc>
         <Example> 'plots',0 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct>
            <ItemCell>
               <Value>labeladd</Value>
               <Description>if this option is '1', the outliers in the&#xD;
                       spm are labelled with their unit row index. The&#xD;
                       default value is labeladd='', i.e. no label is&#xD;
                       added.</Description>
            </ItemCell>
            <ItemCell>
               <Value>nameY</Value>
               <Description>cell array of strings containing the labels of&#xD;
                       the variables. As default value, the labels which are&#xD;
                       added are Y1, ...Yv.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>msg</Name>
         <ShortDesc>Level of output to display</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If msg==1 (default) messages are displayed&#xD;
               on the screen about estimated time to compute the final estimator&#xD;
               else no message is displayed on the screen&#xD;
                 </LongDesc>
         <Example> 'msg',0 &#xD;
                 </Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ysave</Name>
         <ShortDesc>save input matrix Y</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar that is set to 1 to request that the data matrix Y&#xD;
               is saved into the output structure out. This feature is&#xD;
               meant at simplifying the use of function malindexplot.&#xD;
               Default is 0, i.e. no saving is done. &#xD;
               </LongDesc>
         <Example> 'ysave',1 &#xD;
               </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc>
            <ItemCell>
               <Value>loc</Value>
               <Description>1 x v  vector containing S estimate of location</Description>
            </ItemCell>
            <ItemCell>
               <Value>shape</Value>
               <Description>v x v matrix containing robust estimate of the shape&#xD;
                   matrix. Remark det|shape|=1</Description>
            </ItemCell>
            <ItemCell>
               <Value>scale</Value>
               <Description>scalar, robust estimate of the scale</Description>
            </ItemCell>
            <ItemCell>
               <Value>cov</Value>
               <Description>out.scale^2 * out.shape = robust estimate of&#xD;
                   covariance matrix</Description>
            </ItemCell>
            <ItemCell>
               <Value>bs</Value>
               <Description>(v+1) x 1 vector containing the units forming best subset&#xD;
                    associated with S estimate of location.</Description>
            </ItemCell>
            <ItemCell>
               <Value>md</Value>
               <Description>n x 1 vector containing the estimates of the robust&#xD;
                    Mahalanobis distances (in squared units)</Description>
            </ItemCell>
            <ItemCell>
               <Value>outliers</Value>
               <Description>A vector containing the list of the units declared as&#xD;
                   outliers using confidence level specified in input&#xD;
                   scalar conflev</Description>
            </ItemCell>
            <ItemCell>
               <Value>conflev</Value>
               <Description>Confidence level that was used to declare outliers</Description>
            </ItemCell>
            <ItemCell>
               <Value>singsub</Value>
               <Description>Number of subsets without full rank. Notice that&#xD;
                    out.singsub &amp;gt; 0.1*(number of subsamples) produces a&#xD;
                    warning</Description>
            </ItemCell>
            <ItemCell>
               <Value>weights</Value>
               <Description>n x 1 vector containing the estimates of the weights</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>Data matrix Y. The field is present if option ysave&#xD;
                    is set to 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>class</Value>
               <Description>'S'</Description>
            </ItemCell>
         </LongDesc>
      </Item>
      <Item>
         <Name>varargout</Name>
         <ShortDesc>C        : matrix </ShortDesc>
         <TypeInd>Indices of the subsamples &#xD;
                       extracted for computing the estimate (the so called&#xD;
                       elemental sets).</TypeInd>
         <LongDesc> </LongDesc>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--> &#xD;
&#xD;
 This function follows the lines of MATLAB/R code developed during the&#xD;
 years by many authors.&#xD;
 For more details see http://www.econ.kuleuven.be/public/NDBAE06/programs/&#xD;
 and the R library robustbase http://robustbase.r-forge.r-project.org/&#xD;
 The core of these routines, e.g. the resampling approach, however, has&#xD;
 been completely redesigned, with considerable increase of the&#xD;
 computational performance.&#xD;
&#xD;
 </Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Maronna, R.A., Martin D. and Yohai V.J. (2006), Robust Statistics, Theory&#xD;
 and Methods, Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>MMmult</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Smult with all default options.</Title>
         <Desc/>
         <MATLABcode>
    n=200;&#xD;
    v=3;&#xD;
    randn('state', 123456);&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [out]=Smult(Ycont);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Smult with optional arguments.</Title>
         <Desc/>
         <MATLABcode>
    n=200;&#xD;
    v=3;&#xD;
    randn('state', 123456);&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [out]=Smult(Ycont,'plots',1);&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Smult with exctracted subsamples.</Title>
         <Desc/>
         <MATLABcode>
    n=200;&#xD;
    v=3;&#xD;
    randn('state', 123456);&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [out,C]=Smult(Ycont);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>