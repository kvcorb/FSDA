<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->mmdplot</Title>
   <Purpose><!--This is the second line of the .m file-->mmdplot plots the trajectory of minimum Mahalanobis distance (mmd)
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Structure containing monitoring of mdr.</ShortDesc>
         <TypeInd>Structure.</TypeInd>
         <LongDesc>Structure containing the following fields.
out.mmd = a matrix containing the monitoring of minimum Mahalanobis distance in each step of the forward search. The first column of mdr must contain the fwd search index This matrix can be created using function FSMeda (compulsory argument).
If this matrix has three columns in the third colum there is the monitoring of the (m+1)-th Mahalanobis distance out.Un = matrix containing the order of entry of each unit (necessary if datatooltip is true or databrush is not empty) out.Y = the original n x v data matrix (necessary only if option databrush is not empty)</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>mmd</Value>
               <Description>a matrix containing the monitoring of minimum Mahalanobis &#xD;
               distance in each step of the forward search. The first&#xD;
               column of mdr must contain the fwd search index This matrix&#xD;
               can be created using function FSMeda (compulsory argument).&#xD;
               If this matrix has three columns in the third colum there&#xD;
               is the monitoring of the (m+1)-th Mahalanobis distance</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true or databrush is not empty)</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>the original n x v data matrix (necessary only if&#xD;
               option databrush is not empty)</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>quant</Name>
         <ShortDesc>quantiles for which envelopes have to be computed.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>1 x k vector containing quantiles for which envelopes have to be computed. The default is to produce 1%, 50% and 99% envelopes.</LongDesc>
         <Example>'quant',[0.01 0.99]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>mplus1</Name>
         <ShortDesc>add (m+1) order statistic curve.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If mplus1=1 it is also possible to plot the curve associated with (m+1)th order statistic.
The default is mplus1=0</LongDesc>
         <Example>'mplus1',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>envm</Name>
         <ShortDesc>sample size to use.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which specifies the size of the sample which is used to superimpose the envelope. The default is to add an envelope based on all the observations (size n envelope)</LongDesc>
         <Example>'envm',n</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>min and max for x axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>vector with two elements controlling minimum and maximum on the x axis. Default value is mmd(1,1)-3 and mmd(end,1)*1.3</LongDesc>
         <Example>'xlimx',[20 100]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>min and max for x axis.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and maximum on the y axis. Default value is min(mmd(:,2)) and max(mmd(:,2));</LongDesc>
         <Example>'ylimy',[2 6]</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>Line width.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the width of the lines associated with the envelopes. Default is lwdenv=1</LongDesc>
         <Example>'lwdenv',2</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>plot handle.</ShortDesc>
         <TypeInd>String.</TypeInd>
         <LongDesc>String which identifies the handle of the plot which is about to be created. The default is to use tag 'pl_mmd'. Notice that if the program finds a plot which has a tag equal to the one specified by the user, then the output of the new plot overwrites the existing one in the same window else a new window is created</LongDesc>
         <Example>'tag','mymmd'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>interactive clicking.</ShortDesc>
         <TypeInd>Empty value (default) or structure.</TypeInd>
         <LongDesc>If datatooltip is not empty the user can use the mouse in order to have information about the unit seected, the step in which the unit enters the search and the associated label. If datatooltip is a structure, it is possible to control the aspect of the data cursor (see function datacursormode for more details or the examples below). The default options of the structure are DisplayStyle='Window' and SnapToDataVertex='on'.</LongDesc>
         <Example>'datatooltip',1</Example>
         <DataType>empty value, numeric or structure</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>label</Name>
         <ShortDesc>rwo labels.</ShortDesc>
         <TypeInd>Cell.</TypeInd>
         <LongDesc>Cell containing the labels of the units (optional argument used when datatooltip=1. If this field is not present labels row1, ..., rown will be automatically created and included in the pop up datatooltip window)</LongDesc>
         <Example>'label',{'Smith','Johnson','Robert','Stallone'}</Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>interactive mouse brushing.</ShortDesc>
         <TypeInd>Empty value (default), scalar or structure.</TypeInd>
         <LongDesc>DATABRUSH IS AN EMPTY VALUE .
If databrush is an empty value (default), no brushing is done. The activation of this option (databrush is a scalar or a structure) enables the user to select a set of trajectories in the current plot and to see them highlighted in the spm (notice that if the spm does not exist it is automatically created). In addition, brushed units can be highlighted in the monitoring MD plot Note that the window style of the other figures is set equal to that which contains the monitoring residual plot. In other words, if the monitoring residual plot is docked all the other figures will be docked too.
DATABRUSH IS A SCALAR.
If databrush is a scalar the default selection tool is a rectangular brush and it is possible to brush only once (that is persist='').
DATABRUSH IS A STRUCTURE.
If databrush is a structure, it is possible to use all optional arguments of function selectdataFS.m and the following optional argument:
persist. Persist is an empty value or a scalar containing the strings 'on' or 'off' If persist = 'on' or 'off' brusing can be done as many time as the user requires. If persist='on' then the unit(s) currently brushed are added to those previously brushed. If persist='off' every time a new brush is performed units previously brushed are removed. The default value of persist is '' that is brushing is allowed only once. If persist is 'on' it is possible, every time a new brushing is done, to use a different color for the brushed units labeladd. If this option is '1', we label the units of the last selected group with the unit row index in matrices X and y. The default value is labeladd='', i.e. no label is added.
% Remark: if databrush is a struct, it is possible to specify all optional arguments of function selectdataFS inside the curly brackets of option databrush.</LongDesc>
         <Example>'databrush',1</Example>
         <DataType>single | double | struct</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>Size of axes labels.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls the fontsize of the labels of the axes. Default value is 12</LongDesc>
         <Example>'FontSize',14</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>Size of axes numbers.</ShortDesc>
         <TypeInd>Scalar which controls the fontsize of the numbers of the axes.</TypeInd>
         <LongDesc>Default value is 10</LongDesc>
         <Example>'SizeAxesNum',14</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nameY</Name>
         <ShortDesc>Regressors names.</ShortDesc>
         <TypeInd>Cell array of strings.</TypeInd>
         <LongDesc>Cell array of strings of length v containing the labels of the varibales of the original data matrix. If it is empty (default) the sequence Y1, ..., Yp will be created automatically</LongDesc>
         <Example>'nameY',{'Age','Income','Married','Profession'}</Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwd</Name>
         <ShortDesc>Curves line width.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar which controls linewidth of the curve which contains the monitoring of minimum Mahalanobis distance.
Default line width=2</LongDesc>
         <Example>'lwd',3</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>titl</Name>
         <ShortDesc>main title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>A label for the title (default: '')</LongDesc>
         <Example>'namey','Plot title'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>x axis title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>A label for the x-axis (default: 'Subset size m')</LongDesc>
         <Example>'labx','Subset size m'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>y axis title.</ShortDesc>
         <TypeInd>Character.</TypeInd>
         <LongDesc>A label for the y-axis (default: 'Minimum Mahalnobis distance')</LongDesc>
         <Example>'laby','mmd'</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>scaled</Name>
         <ShortDesc>scaled or unscaled envelopes.</ShortDesc>
         <TypeInd>Boolean.</TypeInd>
         <LongDesc>Use reference envelopes scaled or unscaled).
If scaled=1 the envelopes are produced for scaled Mahalanobis distances (no consistency factor is applied) else the traditional consistency factor is applied Default is to use unscaled envelopes</LongDesc>
         <Example>'scaled',0</Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson and Riani (2000), Robust Diagnostic Regression Analysis, Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION--></SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Example of mmdplot.</Title>
         <Desc>
            <ItemCell>Steps common to all the examples</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>Y=load('head.txt');</ItemCell>
            <ItemCell>[fre]=unibiv(Y);</ItemCell>
            <ItemCell>%create an initial subset with the 4 observations, which fell the smallest</ItemCell>
            <ItemCell>%number of times outside the robust bivariate ellipses, and with the</ItemCell>
            <ItemCell>%lowest Mahalanobis Distance.</ItemCell>
            <ItemCell>fre=sortrows(fre,[3 4]);</ItemCell>
            <ItemCell>m0=20;</ItemCell>
            <ItemCell>bs=fre(1:m0,1);</ItemCell>
            <ItemCell>[out]=FSMeda(Y,bs);</ItemCell>
            <ItemCell>mmdplot(out)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Example of the use of function mmd with personalized envelopes.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>mmdplot(out,'quant',[0.99;0.9999]);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt; mmdplot with option dataooltip.</Title>
         <Desc>
            <ItemCell>Example of the use of function mmdplot with datatooltip passed as scalar (that is using default options for datacursor (i.e.</ItemCell>
            <ItemCell>DisplayStyle =window)</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>mmdplot(out,'datatooltip',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt; mmdplot with option dataooltip passed as structure.</Title>
         <Desc>
            <ItemCell>Example of the use of function mmdplot with datatooltip passed as structure</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>clear tooltip</ItemCell>
            <ItemCell>tooltip.SnapToDataVertex='on'</ItemCell>
            <ItemCell>tooltip.DisplayStyle='datatip'</ItemCell>
            <ItemCell>mmdplot(out,'datatooltip',tooltip);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option envm.</Title>
         <Desc>
            <ItemCell>In this case the resuperimposed envelope is based on n-2 observations</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>mmdplot(out,'envm',size(Y,1)-2);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 3.&lt;/i&gt; Example of the use of function mdrplot with databrush.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>mmdplot(out,'databrush',1);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 4.&lt;/i&gt; Example of databrush passed as structure.</Title>
         <Desc>
            <ItemCell>Example where databrush is a structure</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.selectionmode='Lasso'</ItemCell>
            <ItemCell>mmdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 5.&lt;/i&gt; Example of the use of brush using brush mode.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.selectionmode='Brush'</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>mmdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 6.&lt;/i&gt; Example of the use of persistent non cumulative brush.</Title>
         <Desc>
            <ItemCell>Every time a brushing action is performed previous highlightments are removed</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.persist='off'</ItemCell>
            <ItemCell>databrush.Label='on';</ItemCell>
            <ItemCell>databrush.RemoveLabels='off';</ItemCell>
            <ItemCell>mmdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 7.&lt;/i&gt; Example of the use of persistent cumulative brush.</Title>
         <Desc>
            <ItemCell>Every time a brushing action is performed current highlightments are added to previous highlightments</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>databrush=struct</ItemCell>
            <ItemCell>databrush.persist='on';</ItemCell>
            <ItemCell>databrush.selectionmode='Rect'</ItemCell>
            <ItemCell>mmdplot(out,'databrush',databrush)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>