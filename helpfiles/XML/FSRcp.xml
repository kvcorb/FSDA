<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->FSRcp</Title>
   <Purpose><!--This is the second line of the .m file-->FSRcp monitors Cp and AIC for all models of interest of size smallp</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>y</Name>
         <ShortDesc>A vector with n elements that contains the response variable</ShortDesc>
         <TypeInd>Missing values (NaN's) and infinite values (Inf's) are&#xD;
               allowed, since observations (rows) with missing or infinite&#xD;
               values will automatically be excluded from the&#xD;
               computations</TypeInd>
         <LongDesc> </LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>X</Name>
         <ShortDesc>Data matrix of explanatory variables (also called&#xD;
               'regressors') of dimension (n x (bigP-1))</ShortDesc>
         <TypeInd>The intercept will be added in automatic way, so that the&#xD;
               dimension of the full model is bigP&#xD;
               Rows of X represent observations, and columns represent&#xD;
               variables</TypeInd>
         <LongDesc>Missing values (NaN's) and infinite values&#xD;
               (Inf's) are allowed, since observations (rows) with missing&#xD;
               or infinite values will automatically be excluded from the&#xD;
               computations.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>smallp</Name>
         <ShortDesc>scalar which specifies the number of variables in the&#xD;
               reduced models which will be considered</ShortDesc>
         <TypeInd>For example if&#xD;
               smallp=3, all possible subsets containing 2 columns of&#xD;
               matrix X will be considered</TypeInd>
         <LongDesc>Notice that the dimension of&#xD;
               each submodel is 3 because to each submodel the column of&#xD;
               ones is added automatically</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>intercept</Name>
         <ShortDesc>Indicator for constant term</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If 1, a model with constant term will be fitted (default),&#xD;
                       if 0, no constant term will be included.&#xD;
                       </LongDesc>
         <Example> 'intercept',1&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on&#xD;
                       matrix y and matrix X. Note that y and X are left&#xD;
                       unchanged. In other words the additioanl column of ones&#xD;
                       for the intercept is not added. As default nocheck=1.&#xD;
                       </LongDesc>
         <Example> 'nocheck',1&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>h</Name>
         <ShortDesc>number of observations that have determined the least&#xD;
                       trimmed squares estimator</ShortDesc>
         <TypeInd>Integer</TypeInd>
         <LongDesc>h is an integer greater than&#xD;
                       smallp+1 but smaller then n. The default value of h is&#xD;
                       [(n+smallp+1)/2]&#xD;
                       </LongDesc>
         <Example> 'h',3&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lms</Name>
         <ShortDesc>Criterion to use to find the initlal  subset to&#xD;
                       initialize the search</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If lms=1 (default) Least Median of Squares is&#xD;
                       computed, else Least Trimmed of Squares is computed.&#xD;
                       </LongDesc>
         <Example> 'lms',1&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nomes</Name>
         <ShortDesc>Displaying time message</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nomes is equal to 1 (default) no message about&#xD;
                       estimated time to compute LMS (LTS) for each considered&#xD;
                       model is displayed, else a message about estimated time&#xD;
                       is displayed.&#xD;
                       </LongDesc>
         <Example> 'lms',1&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nsamp</Name>
         <ShortDesc>Number of subsamples which will be extracted to find the&#xD;
                       robust estimator</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If nsamp=0 all subsets will be extracted.&#xD;
                       They will be (n choose smallp).&#xD;
                       %                       Remark: if the number of all possible subset is &amp;lt;1000 the&#xD;
                       default is to extract all subsets otherwise just 1000.&#xD;
</LongDesc>
         <Example> 'nsamp',1000&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>init</Name>
         <ShortDesc>Search initialization</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>It specifies the initial subset size to start&#xD;
                       monitoring the required quantities, if init is not&#xD;
                       specified it will be set equal to&#xD;
                       smallp+1, if the sample size is smaller than 40;&#xD;
                       min(3*smallp+1,floor(0.5*(n+smallp+1))), otherwise.&#xD;
                       </LongDesc>
         <Example> 'init',100 starts monitoring from step m=100&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>aic</Name>
         <ShortDesc>Akaike's information criterion</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If aic=1 the value of AIC is also stored in each&#xD;
                       step of the search else (default) only Mallows Cp is stored&#xD;
                       </LongDesc>
         <Example> 'aic',1&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labels</Name>
         <ShortDesc>names of the explanatory variables</ShortDesc>
         <TypeInd>Cell array of strings</TypeInd>
         <LongDesc>Cell array of strings of length bigP-1 containing the  names of the explanatory variables.&#xD;
                       If labels is a missing  value the following sequence of strings will be&#xD;
                       automatically created for X&#xD;
                      (1,2,3,4,5,6,7,8,9,A,B,C,D,E,E,G,H,I,J,K,...,Z)&#xD;
                       </LongDesc>
         <Example> 'labels',{'Time','1','2','3','4','5','6','7','8'}&#xD;
                       </Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>fin_step</Name>
         <ShortDesc>portion of the search which has to be&#xD;
                 monitored to choose the best models</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If fin_step is an integer greater&#xD;
                 or equal 1, it refers to the number of steps.&#xD;
                 For example if fin_step=10 the program considers the last&#xD;
                 10 steps to choose the best models.&#xD;
                 If fin_step is a real number alpha (0&amp;lt;alpha&amp;lt;0.5) in the&#xD;
                 interval (0 0.5] than the program considers the last&#xD;
                 round(n*alpha) steps. As default fin_step=round(n*0.2)&#xD;
                 that is the last 20% of the steps are considered.&#xD;
                       %                 Remark1: the number of best models to consider is&#xD;
                 controlled by scalar first_k (see below).&#xD;
%                 Remark2: if fin_step is an empty value, no selection is&#xD;
                 done and all trajectories of Cp are displayed (in this&#xD;
                 case the value of first_k below is ignored, all models are&#xD;
                 considered of interest and output matrix outCp.Ajout is&#xD;
                 equal to an empty value).&#xD;
</LongDesc>
         <Example> 'fin_step',1&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>first_k</Name>
         <ShortDesc>number of best models to&#xD;
                      consider in each of the last fin_step</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>For example if first_k=5 in each of the last fin_step, the models which had&#xD;
                       the 5 smallest values of Cp are considered. As default&#xD;
                       first_k=3&#xD;
                       </LongDesc>
         <Example> 'first_k',5&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>Excl</Name>
         <ShortDesc>Matrix which contains the models which surely do not have&#xD;
                 to be considered</ShortDesc>
         <TypeInd>Matrix</TypeInd>
         <LongDesc>As default Excl=''&#xD;
                   For example if smallp=3, bigP=6 and&#xD;
                   Excl = [23; 24; 27]; the three models 23, 24, and 27 are skipped&#xD;
                       </LongDesc>
         <Example> 'Excl',[23; 24]&#xD;
                       </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ExclThresh</Name>
         <ShortDesc>Exclusion threshold</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Exclusion threshold associated to the upper&#xD;
                 percentage point of the F distribution of Cp which&#xD;
                 defines the threshold for declaring models as unuseful.&#xD;
                 The default value of ExclThresh is 0.99999 that is the&#xD;
                 models whose minimum value of Cp in the part of the&#xD;
                 search defined by fin_step is above ExclThresh are stored&#xD;
                 in output matrix outCp.Ajout. Notice that ExclThresh must&#xD;
                 be smaller than 1&#xD;
                 </LongDesc>
         <Example> 'ExclThresh',0.6&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>If plots==1 a plot is created on the screen which&#xD;
                 contains the trajectories of Cp monitored along the&#xD;
                 search with confidence bands&#xD;
                 If plots==2 two plots are generated. The first contains&#xD;
                 the trajectories of Cp monitored along the search with&#xD;
                 confidence bands. The second contains the trajectories of&#xD;
                 AIC monitored along the search&#xD;
                 else (default) no plot is shown on the screen&#xD;
                 </LongDesc>
         <Example> 'plots',1&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labout</Name>
         <ShortDesc>If labout=1 the output LABOUT contains the list of models&#xD;
                 whose Cp values are inacceptable</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Default: no&#xD;
                 model is created.&#xD;
                 %                 Remark: the options below only work if plots is equal 1.&#xD;
&#xD;
</LongDesc>
         <Example> 'labout',1&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>quant</Name>
         <ShortDesc>It specifies the quantiles which are used to&#xD;
                 produce Cp envelopes</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>The elements of quant are numbers&#xD;
                 between 0 and 1. The default value of quant is&#xD;
                 quant=[0.025 0.5 0.975];&#xD;
                 </LongDesc>
         <Example> 'quant',0.1&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>steps</Name>
         <ShortDesc>It specifies in which steps of the plot which&#xD;
                 monitors Cp it is necessary to include the labels of the&#xD;
                 models which have been previously chosen</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>The default is to write the labels of the models in steps&#xD;
                 round([n*0.6  n*0.8  n]);&#xD;
                 </LongDesc>
         <Example> 'steps',[4 8]&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>titl</Name>
         <ShortDesc>a label for the title</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>default is ['Forward Cp' p= num2str(smallp)]&#xD;
                 </LongDesc>
         <Example> 'titl','my title'&#xD;
                 </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>a label for the x-axis</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>default: 'Subset size m'&#xD;
                 </LongDesc>
         <Example> 'labx','my label'&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>a label for the y-axis</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>default:''&#xD;
                 </LongDesc>
         <Example> 'laby','my label'&#xD;
                 </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>minimum and maximum on the x axis</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>Default value is '' (automatic scale)&#xD;
                 </LongDesc>
         <Example> 'xlimx',[0 1]&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>minimum and maximum on the y axis</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>Default value is '' (automatic scale)&#xD;
                 </LongDesc>
         <Example> 'ylimx',[0 1]&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwd</Name>
         <ShortDesc>linewidth of the curves which contain the score test</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Default line width=2&#xD;
                 </LongDesc>
         <Example> 'linewidth',6&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>width of the lines associated&#xD;
                 with the envelopes</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Default is lwdenv=1&#xD;
                 </LongDesc>
         <Example> 'lwdenv',6&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>font size of the labels of&#xD;
                 the axes and of the labels inside the plot</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Default value is 12&#xD;
                 </LongDesc>
         <Example> 'FontSize',20&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>size of the numbers of the axes</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Default value is 10&#xD;
                 </LongDesc>
         <Example> 'SizeAxesNum',30&#xD;
                 </Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>selunitcolor</Name>
         <ShortDesc>colors to be used for the Cp trajectories</ShortDesc>
         <TypeInd>Cell array of strings</TypeInd>
         <LongDesc>If selunittype is not specified or if&#xD;
                 it is an empty value default Matlab colors are used.&#xD;
                 </LongDesc>
         <Example> 'selunitcolor',{'b';'g';'r'}&#xD;
                 </Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>selunittype</Name>
         <ShortDesc>line types of the Cp trajectories</ShortDesc>
         <TypeInd>Cell array of strings</TypeInd>
         <LongDesc>If selunittype is not specified or if&#xD;
                 it is an empty value all possible line styles are used.&#xD;
                 </LongDesc>
         <Example> 'selunittype',{'-';'--';':';'-.'}&#xD;
                 </Example>
         <DataType>cell</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>outCp</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc>
            <ItemCell>
               <Value>MAL</Value>
               <Description>(n-init+1) x (k+1) matrix.&#xD;
                 Mallows Cp monitored along the search:&#xD;
                   1st col is fwd search index;&#xD;
                   2nd col is associated with first selected model;&#xD;
                   3rd col is associated with second selected model;&#xD;
                   ...;&#xD;
                   (k+1)th col is associated with k-th selected model.&#xD;
                   Notice that k&amp;lt;=(n choose smallp) and that all&#xD;
                   models contain the constant.</Description>
            </ItemCell>
            <ItemCell>
               <Value>AIC</Value>
               <Description>(n-init+1) x (k+1) matrix.&#xD;
                AIC monitored along the search:&#xD;
                   1st col is fwd search index;&#xD;
                   2nd col is associated with first selected model;&#xD;
                   3rd col is associated with second selected model;&#xD;
                   ...;&#xD;
                   (k+1)th col is associated with k-th selected model.&#xD;
                   Remark 1: k&amp;lt;=(n choose smallp).&#xD;
                   Remark 2: all models contain the constant.&#xD;
                   Remark 3: matrix AIC is produced only if input option&#xD;
                   aic=1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>UnAll</Value>
               <Description>cell of dimension k. Each element of the cell is a&#xD;
                   (n-init) x 11 matrix containing the unit(s) included&#xD;
                   in the subset at each step of the search.&#xD;
                   REMARK: in every step the new subset is compared with the old&#xD;
                   subset. Un contains the unit(s) present in the new&#xD;
                   subset but not in the old one.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LAB</Value>
               <Description>cell array of strings of length k containing the labels of the&#xD;
                   models which have been extracted. First element of LAB&#xD;
                   is associated with second column of matrix MAL...</Description>
            </ItemCell>
            <ItemCell>
               <Value>Ajout</Value>
               <Description>numeric matrix which contains the list of the models whose Cp&#xD;
                   values are inacceptable.&#xD;
                   The number of columns of matrix Ajout is equal to&#xD;
                   smallp-1&#xD;
                   This information is useful because in this way it is&#xD;
                   possible to skip the computation of the submodels of&#xD;
                   the rows of matrix Ajout.&#xD;
                   For example if smallp=3, bigP=6 and&#xD;
                   Ajout = [ 23; 24; 27 ]&#xD;
                   the three models 23, 24, and 27 always have Cp values&#xD;
                   much greater than the threshold (that is variables&#xD;
                   2,3,4,7 are considered unimportant).</Description>
            </ItemCell>
            <ItemCell>
               <Value>LABout</Value>
               <Description>it is created only if option labout=1. LABout&#xD;
                   is a cell array of strings which which contains as&#xD;
                   strings the list of models which are inacceptable.</Description>
            </ItemCell>
         </LongDesc>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>ATKINSON A.C, RIANI M. (2008). A robust and diagnostic information&#xD;
   criterion for selecting regression models. JOURNAL OF THE JAPAN&#xD;
   STATISTICAL SOCIETY. ISSN: 1882-2754. Vol. 38, No. 1, pp. 3-14</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>FSR</Item>
      <Item>FSReda</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>FSRcp with all default options.</Title>
         <Desc>&#xD;
     Extract the best models of size 4, also store AIC.&#xD;
     Common part to all examples: load Ozone dataset.&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    smallp=4;&#xD;
    [Cpmon]=FSRcp(y,X,smallp);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>FSRcp with optional arguments.</Title>
         <Desc>&#xD;
     Extract the best models of size 4, store AIC and show the plots&#xD;
     of Cp and AIC.&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    smallp=4;&#xD;
    [outCp]=FSRcp(y,X,smallp,'plots',1);&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Use labels defined by the user.</Title>
         <Desc>&#xD;
     Extract the best models of size 4 and show the plot of Cp. All the&#xD;
     default options are used, apart from labels, therefore the plot of Cp&#xD;
     and the output matrix Cpmon.MAL only contains the searches associated&#xD;
     with the smallest 3 values of Cp in the last 16 steps of the search.&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    smallp=4;&#xD;
    labels={'Time','1','2','3','4','5','6','7','8'};&#xD;
    [Cpmon]=FSRcp(y,X,smallp,'plots',1,'labels',labels);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Extract and show the trajectories of all models of size 4 of Cp.</Title>
         <Desc>&#xD;
     Notice that in this last case the forward plot becomes&#xD;
     unreadable.&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    smallp=4;&#xD;
    [Cpmon]=FSRcp(y,X,smallp,'plots',1,'fin_step','');&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Extract the best models of size 5 and plot monitoring of Cp.</Title>
         <Desc>&#xD;
     Extract 1000 subsets to initialize the search and use labels defined&#xD;
     by the user.&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    smallp=5;&#xD;
    labels={'Time','1','2','3','4','5','6','7','8'};&#xD;
    [Cpmon]=FSRcp(y,X,smallp,'nsamp',1000,'plots',1,'labels',labels);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Extract the best models of size 6 and 5 and plot monitoring of Cp.</Title>
         <Desc>&#xD;
     Extract 1000 subsets to initialize the search andse labels defined by&#xD;
     the user. Exclude the searches of the models which were unacceptable&#xD;
     for smallp=5.&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    smallp=6;&#xD;
    labels={'Time','1','2','3','4','5','6','7','8'};&#xD;
    [Cpmon6]=FSRcp(y,X,smallp,'nsamp',1000,'plots',1,'labels',labels);&#xD;
    smallp=5;&#xD;
    [Cpmon5]=FSRcp(y,X,smallp,'nsamp',1000,'Excl',Cpmon6.Ajout,'plots',1,'labels',labels);&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Customizing the graphical options.</Title>
         <Desc>&#xD;
     In the following example we play with the graphical options&#xD;</Desc>
         <MATLABcode>
    X=load('ozone.txt');&#xD;
    % Transform the response using logs&#xD;
    X(:,end)=log(X(:,end));&#xD;
    % Add a time trend&#xD;
    X=[(-40:39)' X];&#xD;
    % Define y&#xD;
    y=X(:,end);&#xD;
    % Define X&#xD;
    X=X(:,1:end-1);&#xD;
    labels={'Time','1','2','3','4','5','6','7','8'};&#xD;
   [Cpmon]=FSRcp(y,X,smallp,'plots',1,'labels',labels,'xlimx',[40 80],'lwdenv',5,'lwd',4,'FontSize',25,'SizeAxesNum',20);&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>