<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->covplot</Title>
   <Purpose><!--This is the second line of the .m file-->covplot plots the trajectories of the elements of the covariance (correlation) matrix monitored</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc>Data to plot</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure containing the following fields&#xD;
  out.S2cov=   (n-init+1) x (v*(v+1)/2+1) matrix containing the monitoring&#xD;
               of the elements of the covariance matrix in each step&#xD;
               of the forward search: &#xD;
               1st col = fwd search index (from init to n); &#xD;
               2nd col = monitoring of S(1,1); &#xD;
               3rd col = monitoring of S(1,2); &#xD;
               ...; &#xD;
               (compulsory argument).&#xD;
     out.Un=   matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true).&#xD;
     out.Y =   n x v data matrix; n observations&#xD;
               and v variables. &#xD;
      </LongDesc>
         <Example> </Example>
         <DataType>struct</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>S2cov</Value>
               <Description>(n-init+1) x (v*(v+1)/2+1) matrix containing the monitoring&#xD;
               of the elements of the covariance matrix in each step&#xD;
               of the forward search: &#xD;
               1st col = fwd search index (from init to n); &#xD;
               2nd col = monitoring of S(1,1); &#xD;
               3rd col = monitoring of S(1,2); &#xD;
               ...; &#xD;
               (compulsory argument).</Description>
            </ItemCell>
            <ItemCell>
               <Value>Un</Value>
               <Description>matrix containing the order of entry of each unit&#xD;
               (necessary if datatooltip is true).</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>n x v data matrix; n observations&#xD;
               and v variables.</Description>
            </ItemCell>
         </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>standard</Name>
         <ShortDesc>Appearance of the plot</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure which defines the appearance of the plot&#xD;
                   in terms of xlim, ylim, axes labels and their font size&#xD;
                   style, color of the lines, etc. &#xD;
                   The structure contains the following fields:&#xD;
                   standard.SizeAxesNum = scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.&#xD;
                   standard.xlim = two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).&#xD;
                   standard.ylim = two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).&#xD;
                   standard.titl = a label for the title (default: '').&#xD;
                   standard.labx = a label for the x-axis (default: 'Subset size m').&#xD;
                   standard.laby = a label for the y-axis (default: 'Elements of&#xD;
                       the correlation (covariance) matrix)&#xD;
                   standard.SizeAxesLab = Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.&#xD;
                   standard.LineWidth = scalar specifying line width for the&#xD;
                       trajectories.&#xD;
                   standard.Color = cell array of strings containing the colors to&#xD;
                       be used for the standard units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.&#xD;
                   standard.LineStyle = cell containing the line types.&#xD;
                   </LongDesc>
         <Example> 'standard',standard&#xD;
                   </Example>
         <DataType>structure</DataType>
         <Struct>
            <ItemCell>
               <Value>SizeAxesNum</Value>
               <Description>scalar specifying the fontsize of the&#xD;
                       axes numbers. Default value is 10.</Description>
            </ItemCell>
            <ItemCell>
               <Value>xlim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the x axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>ylim</Value>
               <Description>two elements vector with minimum and maximum of&#xD;
                       the y axis. Default value is '' (automatic scale).</Description>
            </ItemCell>
            <ItemCell>
               <Value>titl</Value>
               <Description>a label for the title (default: '').</Description>
            </ItemCell>
            <ItemCell>
               <Value>labx</Value>
               <Description>a label for the x-axis (default: 'Subset size m').</Description>
            </ItemCell>
            <ItemCell>
               <Value>laby</Value>
               <Description>a label for the y-axis (default: 'Elements of&#xD;
                       the correlation (covariance) matrix)</Description>
            </ItemCell>
            <ItemCell>
               <Value>SizeAxesLab</Value>
               <Description>Scalar specifying the fontsize of the&#xD;
                       labels of the axes. Default value is 12.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the standard units.&#xD;
                       If length(Color)=1 the same color will be used for&#xD;
                       all units.&#xD;
                       If length(Color)=2 half of the trajectories will&#xD;
                       appear with Color{1} and the other half with&#xD;
                       Color{2}. And so on with 3 cell elements, etc.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line types.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>fground</Name>
         <ShortDesc>Trajectories in foregroud</ShortDesc>
         <TypeInd>Structure</TypeInd>
         <LongDesc>Structure which defines the trajectories in foregroud,&#xD;
                   that is which trajectories are highlighted and how&#xD;
                   they are plotted to be distinguishable from the others.&#xD;
                   It is possible to control the label, the width, the&#xD;
                   color, the line type and the marker of the highlighted&#xD;
                   covariances. The structure fground contains the following&#xD;
                   fields:&#xD;
                   fground.fthresh = (alternative to funit) numeric vector of&#xD;
                       length 1 or 2 which specifies the highlighted&#xD;
                       trajectories. &#xD;
                       If length(fthresh)=1 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       at leat once a covariance greater (in absolute value)&#xD;
                       than thresh. The default value of fthresh is Inf. &#xD;
                       If length(fthresh)=2 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       a covariance at leat once bigger than fthresh(2) or&#xD;
                       smaller than fthresh(1).&#xD;
                   fground.funit = (alternative to fthresh) scalar containing the&#xD;
                       number of trajectories of the covariances to be&#xD;
                       highlighted. For example if funit=5 the&#xD;
                       trajectories with the 5 highest values of the&#xD;
                       covariances are highlighted.&#xD;
                       Notice that if funit is supplied,&#xD;
                       fthresh is ignored. The default value of funit is&#xD;
                       5.&#xD;
                   fground.flabstep = numeric vector which specifies the steps of&#xD;
                       the search where to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search, that is fground.flabstep=[m0 n].&#xD;
                       flabstep='' means no label.&#xD;
                   fground.LineWidth = scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.&#xD;
                   fground.Color = cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(scolor)==1 the same color will be used for&#xD;
                       all highlighted units. &#xD;
                       If for example length(scolor)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with selunitcolor{1} and 3 highlighted trajectories with&#xD;
                       selunitcolor{2}. &#xD;
                   fground.LineStyle = cell containing the line type of the highlighted&#xD;
                       trajectories.&#xD;
                   fground.fmark  = scalar controlling whether to plot highlighted&#xD;
                       trajectories as markers. If 1 each trajectory is plotted using a different marker&#xD;
                       else (default) no marker is used.&#xD;
                   </LongDesc>
         <Example> 'fground',fground&#xD;
                   </Example>
         <DataType>structure</DataType>
         <Struct>
            <ItemCell>
               <Value>fthresh</Value>
               <Description>(alternative to funit) numeric vector of&#xD;
                       length 1 or 2 which specifies the highlighted&#xD;
                       trajectories. &#xD;
                       If length(fthresh)=1 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       at leat once a covariance greater (in absolute value)&#xD;
                       than thresh. The default value of fthresh is Inf. &#xD;
                       If length(fthresh)=2 the highlighted trajectories&#xD;
                       are those of units that throughtout the search had&#xD;
                       a covariance at leat once bigger than fthresh(2) or&#xD;
                       smaller than fthresh(1).</Description>
            </ItemCell>
            <ItemCell>
               <Value>funit</Value>
               <Description>(alternative to fthresh) scalar containing the&#xD;
                       number of trajectories of the covariances to be&#xD;
                       highlighted. For example if funit=5 the&#xD;
                       trajectories with the 5 highest values of the&#xD;
                       covariances are highlighted.&#xD;
                       Notice that if funit is supplied,&#xD;
                       fthresh is ignored. The default value of funit is&#xD;
                       5.</Description>
            </ItemCell>
            <ItemCell>
               <Value>flabstep</Value>
               <Description>numeric vector which specifies the steps of&#xD;
                       the search where to put labels for the highlighted&#xD;
                       trajectories (units). The default is to put the&#xD;
                       labels at the initial and final steps of the search, that is fground.flabstep=[m0 n].&#xD;
                       flabstep='' means no label.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineWidth</Value>
               <Description>scalar specifying line width for the&#xD;
                       highlighted trajectories (units). Default is 1.</Description>
            </ItemCell>
            <ItemCell>
               <Value>Color</Value>
               <Description>cell array of strings containing the colors to&#xD;
                       be used for the highlighted trajectories (units).&#xD;
                       If length(scolor)==1 the same color will be used for&#xD;
                       all highlighted units. &#xD;
                       If for example length(scolor)=2 and there are 6 highlighted units,&#xD;
                       3 highlighted trajectories appear with selunitcolor{1} and 3 highlighted trajectories with&#xD;
                       selunitcolor{2}.</Description>
            </ItemCell>
            <ItemCell>
               <Value>LineStyle</Value>
               <Description>cell containing the line type of the highlighted&#xD;
                       trajectories.</Description>
            </ItemCell>
            <ItemCell>
               <Value>fmark</Value>
               <Description>scalar controlling whether to plot highlighted&#xD;
                       trajectories as markers. If 1 each trajectory is plotted using a different marker&#xD;
                       else (default) no marker is used.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Handle of the plot</ShortDesc>
         <TypeInd>String</TypeInd>
         <LongDesc>String which identifies the handle of the plot which&#xD;
                   is about to be created. The default is to use tag&#xD;
                   'pl_cov'. Note that if the program finds a plot which&#xD;
                   has a tag equal to the one specified by the user, then&#xD;
                   the output of the new plot overwrites the existing one&#xD;
                   in the same window else a new window is created.&#xD;
                   </LongDesc>
         <Example> 'tag','pl_mycov'&#xD;
                   </Example>
         <DataType>string</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>datatooltip</Name>
         <ShortDesc>Information about the unit selected</ShortDesc>
         <TypeInd>Empty value or structure</TypeInd>
         <LongDesc>The default is datatooltip=1.&#xD;
                   If datatooltip is not empty the user can use the mouse&#xD;
                   in order to have information about the unit selected,&#xD;
                   the step in which the unit enters the search and the&#xD;
                   associated label.&#xD;
                   If datatooltip is a structure, it is possible to&#xD;
                   control the aspect of the data cursor (see function&#xD;
                   datacursormode for more details or the examples below).&#xD;
                   The default options of the structure are&#xD;
                   DisplayStyle='Window' and SnapToDataVertex='on'.&#xD;
                   </LongDesc>
         <Example> 'datatooltip',''&#xD;
                   </Example>
         <DataType>Empty value or structure.</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Atkinson, Riani and Cerioli (2004), Exploring Multivariate Data with&#xD;
   the Forward Search,&#xD;
   Springer Verlag, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION--></SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>covplot with all default options.</Title>
         <Desc>&#xD;
     generate input structure for malfwdplot&#xD;</Desc>
         <MATLABcode>
    n=100;&#xD;
    p=4;&#xD;
    state1=141243498;&#xD;
    randn('state', state1);&#xD;
    Y=randn(n,p);&#xD;
    kk=[1:10];&#xD;
    Y(kk,:)=Y(kk,:)+4;&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'init',30);&#xD;
    % Produce monitoring covariances plot with all the default options&#xD;
    covplot(out)&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>covplot with optional arguments.</Title>
         <Desc>&#xD;
     Example of the use of some options inside structure standard.&#xD;</Desc>
         <MATLABcode>
    n=100;&#xD;
    p=4;&#xD;
    state1=141243498;&#xD;
    randn('state', state1);&#xD;
    Y=randn(n,p);&#xD;
    kk=[1:10];&#xD;
    Y(kk,:)=Y(kk,:)+4;&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'init',30);&#xD;
    % Initialize structure standard&#xD;
    standard=struct;&#xD;
    standard.LineStyle={'-';'-.';'--'};&#xD;
    % Specify the line width&#xD;
    standard.LineWidth=0.5;&#xD;
    covplot(out,'standard',standard)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Example of the use of some options inside structure fground.</Title>
         <Desc/>
         <MATLABcode>
    n=100;&#xD;
    p=4;&#xD;
    state1=141243498;&#xD;
    randn('state', state1);&#xD;
    Y=randn(n,p);&#xD;
    kk=[1:10];&#xD;
    Y(kk,:)=Y(kk,:)+4;&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'init',30);    &#xD;
    % Initialize structure fground&#xD;
    fground = struct;&#xD;
    % Specify the number of trajectories which have to be highlighted&#xD;
    fground.funit=2;&#xD;
    % Specify the steps in which labels have to be put&#xD;
    n=size(Y,1);&#xD;
    fground.flabstep=[n/2 n*0.75 n+0.5];&#xD;
    % Specify the line width of the highlighted trajectories&#xD;
    fground.LineWidth=3;&#xD;
    % Produce a monitoring residuals plot in which labels are put for units&#xD;
    % [2 5 20 23 35 45] in steps [n/2 n*0.75 n+0.5] of the search&#xD;
    covplot(out,'fground',fground)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Example of the use of option tag.</Title>
         <Desc/>
         <MATLABcode>
    n=100;&#xD;
    p=4;&#xD;
    state1=141243498;&#xD;
    randn('state', state1);&#xD;
    Y=randn(n,p);&#xD;
    kk=[1:10];&#xD;
    Y(kk,:)=Y(kk,:)+4;&#xD;
    [fre]=unibiv(Y);&#xD;
    m0=20;&#xD;
    bs=fre(1:m0,1);&#xD;
    [out]=FSMeda(Y,bs,'init',30);    &#xD;
     % Initialize structure fground&#xD;
    fground = struct;&#xD;
    % Specify the number of trajectories which have to be highlighted&#xD;
    fground.funit=2;&#xD;
    % Specify the steps in which labels have to be put&#xD;
    n=size(Y,1);&#xD;
    fground.flabstep=[n/2 n*0.75 n+0.5];&#xD;
    % Specify the line width of the highlighted trajectories&#xD;
    fground.LineWidth=3;&#xD;
   covplot(out,'fground',fground,'tag','pl_mycov')&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>