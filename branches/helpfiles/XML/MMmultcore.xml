<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->MMmultcore</Title>
   <Purpose><!--This is the second line of the .m file-->MMmultcore computes multivariate MM estimators for a selected fixed scale
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>Y</Name>
         <ShortDesc>Input data.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>n x v data matrix; n observations and v variables. Rows of Y represent observations, and columns represent variables.
Missing values (NaN's) and infinite values (Inf's) are allowed, since observations (rows) with missing or infinite values will automatically be excluded from the computations.</LongDesc>
         <Example> </Example>
         <DataType>single|double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>loc0</Name>
         <ShortDesc>initial estimate of location.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>Vector containing initial estimate of location (generally an S estimate with high breakdown point, eg 0.5)</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>shape0</Name>
         <ShortDesc>initial estimate of shape.</ShortDesc>
         <TypeInd>Matrix.</TypeInd>
         <LongDesc>v x v matrix containing initial estimate of shape (generally an S estimate with high breakdown point, eg 0.5)</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>auxscale</Name>
         <ShortDesc>initial estimate of scale.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar containing estimate of the scale (generally an S estimate with high breakdown point).</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>eff</Name>
         <ShortDesc>nominal efficiency.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar defining nominal efficiency (i.e. a number between 0.5 and 0.99). The default value is 0.95 Asymptotic nominal efficiency is:
$(\int \psi' d\Phi)^2 / (\psi^2 d\Phi)$ For example if eff=0.95 and v=3, c=5.49 in case of location efficiency or c=6.096 in case of shape efficiency</LongDesc>
         <Example>'eff',0.99</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>effshape</Name>
         <ShortDesc>locacation or scale effiicency.</ShortDesc>
         <TypeInd>dummy scalar.</TypeInd>
         <LongDesc>If effshape=1 efficiency refers to shape efficiency else (default) efficiency refers to location</LongDesc>
         <Example>'effshape',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>refsteps</Name>
         <ShortDesc>Maximum iterations.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar defining maximum number of iterations in the MM loop. Default value is 100.</LongDesc>
         <Example>'refsteps',10</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>reftol</Name>
         <ShortDesc>Tolerance.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar controlling tolerance in the MM loop.
Default value is 1e-7</LongDesc>
         <Example>'tol',1e-10</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>Confidence level which is used to declare units as outliers.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Usually conflev=0.95, 0.975 0.99 (individual alpha) or 1-0.05/n, 1-0.025/n, 1-0.01/n (simultaneous alpha).
Default value is 0.975</LongDesc>
         <Example>'conflev',0.99</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>plots</Name>
         <ShortDesc>Plot on the screen.</ShortDesc>
         <TypeInd>Scalar or structure.</TypeInd>
         <LongDesc>If plots = 1, generates a plot of Mahalanobis distances against index number. The confidence level used to draw the confidence bands for the MD is given by the input option conflev. If conflev is not specified a nominal 0.975 confidence interval will be used.</LongDesc>
         <Example>'plots',0</Example>
         <DataType>single | double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nocheck</Name>
         <ShortDesc>Check input arguments.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>If nocheck is equal to 1 no check is performed on matrix Y. As default nocheck=0.</LongDesc>
         <Example>'nocheck',1</Example>
         <DataType>double</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ysave</Name>
         <ShortDesc>input data matrix Y is saved into the output structure out.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar that is set to 1 to request that the data matrix Y is saved into the output structure out. This feature is meant at simplifying the use of function malindexplot.
Default is 0, i.e. no saving is done.</LongDesc>
         <Example> </Example>
         <DataType> </DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>out</Name>
         <ShortDesc> </ShortDesc>
         <TypeInd> </TypeInd>
         <LongDesc> </LongDesc>
         <Structure>
            <ItemCell>
               <Value>loc</Value>
               <Description>v x 1 vector. Estimate of location after refsteps refining steps</Description>
            </ItemCell>
            <ItemCell>
               <Value>shape</Value>
               <Description>v x v matrix. Estimate of the shape matrix after refsteps refining steps</Description>
            </ItemCell>
            <ItemCell>
               <Value>cov</Value>
               <Description>v x v matrix. Estimate of the covariance matrix after refsteps refining steps</Description>
            </ItemCell>
            <ItemCell>
               <Value>md</Value>
               <Description>n x 1 vector containing the estimates of the robust Mahalanobis distances (in squared units)</Description>
            </ItemCell>
            <ItemCell>
               <Value>outliers</Value>
               <Description>A vector containing the list of the units declared as outliers using confidence level specified in input scalar conflev</Description>
            </ItemCell>
            <ItemCell>
               <Value>conflev</Value>
               <Description>Confidence level that was used to declare outliers</Description>
            </ItemCell>
            <ItemCell>
               <Value>weights</Value>
               <Description>n x 1 vector. Weights assigned to each observation</Description>
            </ItemCell>
            <ItemCell>
               <Value>class</Value>
               <Description>'MM' out.Y : Data matrix Y. The field is present if option ysave is set to 1.</Description>
            </ItemCell>
         </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->This routine does iterative reweighted least squares (IRWLS) steps from "initial location" (loc0) and shape matrix (shape0) keeping the estimate of the scale (auxscale) fixed.
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION-->&#xD;
&#xD;
 This function follows the lines of MATLAB/R code developed during the&#xD;
 years by many authors.&#xD;
 For more details see http://www.econ.kuleuven.be/public/NDBAE06/programs/&#xD;
 and the R library robustbase http://robustbase.r-forge.r-project.org/.&#xD;
 The core of these routines, e.g. the resampling approach, however, has&#xD;
 been completely redesigned, with considerable increase of the&#xD;
 computational performance.&#xD;
&#xD;
 
</Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Maronna, R.A., Martin D. and Yohai V.J. (2006), Robust Statistics, Theory and Methods, Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>Smult</Item>
      <Item>MMmult</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>MMmultcore with all default options.</Title>
         <Desc>
            <ItemCell>Determine, e.g., an S estimate and extract the required arguments for the MM estimate.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>v=3;</ItemCell>
            <ItemCell>randn('state', 123456);</ItemCell>
            <ItemCell>Y=randn(n,v);</ItemCell>
            <ItemCell>% Contaminated data</ItemCell>
            <ItemCell>Ycont=Y;</ItemCell>
            <ItemCell>Ycont(1:5,:)=Ycont(1:5,:)+3;</ItemCell>
            <ItemCell>[out]=Smult(Ycont);</ItemCell>
            <ItemCell>outMM=MMmultcore(Ycont,out.loc,out.shape,out.scale)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>MMmultcore with optional arguments.</Title>
         <Desc>
            <ItemCell>Determine, e.g., an S estimate and extract the required arguments for the MM estimate.</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>n=200;</ItemCell>
            <ItemCell>v=3;</ItemCell>
            <ItemCell>randn('state', 123456);</ItemCell>
            <ItemCell>Y=randn(n,v);</ItemCell>
            <ItemCell>% Contaminated data</ItemCell>
            <ItemCell>Ycont=Y;</ItemCell>
            <ItemCell>Ycont(1:5,:)=Ycont(1:5,:)+3;</ItemCell>
            <ItemCell>[out]=Smult(Ycont,'plots',1);</ItemCell>
            <ItemCell>outMM=MMmultcore(Ycont,out.loc,out.shape,out.scale,'plots',1,'nocheck',1)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>