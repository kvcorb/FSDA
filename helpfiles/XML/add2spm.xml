<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->add2spm</Title>
   <Purpose><!--This is the second line of the .m file-->add2spm adds objects (personalized clickable multilegends and text labels) to the scatter plot matrix</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>H</Name>
         <ShortDesc>handles to the lines on the graphs</ShortDesc>
         <TypeInd>2D or 3D array</TypeInd>
         <LongDesc>H is an array of handles to the&#xD;
                   lines on the graphs. The array's third dimension&#xD;
                   corresponds to groups in the grouping variable. &#xD;
                   For more details see the output arguments of gplotmatrix.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>AX</Name>
         <ShortDesc>handles to the axes of the individual plots</ShortDesc>
         <TypeInd>Matrix</TypeInd>
         <LongDesc>AX is a&#xD;
                   matrix of handles to the axes of the individual plots.&#xD;
                   For more details see the output arguments of gplotmatrix.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>BigAx</Name>
         <ShortDesc>handle to big (invisible) axes framing the&#xD;
                   entire plot matrix</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>For more details see the output arguments of gplotmatrix.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>labeladd</Name>
         <ShortDesc>add labels for a group of units</ShortDesc>
         <TypeInd>Char</TypeInd>
         <LongDesc>Default is '', i.e. no&#xD;
               labels are added to the symbols inside each scatter.&#xD;
               If set to '1', add labels to the units of the last data&#xD;
               group (or the group with the largest value of the grouping&#xD;
               variable) in each panel of the scatter matrix. The labels&#xD;
               which are added are based on the content of the 'UserData'&#xD;
               field of the last group. This can be achieved by means of&#xD;
               instruction set(H(:,:,end), 'UserData' , unit_labels),&#xD;
               where unit_labels is a column vector of numbers or strings.&#xD;
               See last example below for a concrete case.&#xD;
               </LongDesc>
         <Example> 'labeladd','1'&#xD;
               </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>userleg</Name>
         <ShortDesc>user legend</ShortDesc>
         <TypeInd>Char</TypeInd>
         <LongDesc>It is used to control the legend of the plot.&#xD;
               - Default is ''. In this case, existing legends are left as&#xD;
                 they are and simply made clickable; however, if there is&#xD;
                 no legend, a default one is created using the syntax&#xD;
                 'Group 1', 'Group 2', etc.&#xD;
               - If it is set to '1', the legends are updated depending on&#xD;
                 the context of use and are made clickable. The context is&#xD;
                 determined by the occurence of specific words in the Tag&#xD;
                 of the current figure. The strings/contexts currently&#xD;
                 addressed are:&#xD;
                 'outlier' (for 'Outliers' and 'Normal units'),&#xD;
                 'brush'   (for 'Brushed units 1', 'Brushed units 2', etc.),&#xD;
                 'group'   (for 'Group 1', 'Group 2', etc.),&#xD;
                 ''         i.e. the Tag of the figure is not defined;&#xD;
                            in this case the legend takes the values in&#xD;
                            the DisplayName property of the scatter&#xD;
                            matrix. This is determined by the 'group'     &#xD;
                            option of the spmplot or gplotmatrix functions. &#xD;
               - If it is a cell of strings, e.g. {'FIAT' ; 'BMW' ; 'VOLVO'},&#xD;
                 then such strings are used for the legend.&#xD;
               </LongDesc>
         <Example> 'userleg','1'&#xD;
               </Example>
         <DataType>char</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->
   add2spm is essentially used within FSDA function spmplot.m. However its&#xD;
   logic can be also demonstrated with MATLAB function gplotmatrix.m, as in&#xD;
   the examples below.&#xD;
&#xD;
 As default add2spm makes legends in the existing scatter plot matrix&#xD;
 clickable or creates a clickable multilegend if the legend does not&#xD;
 exist.&#xD;
&#xD;
 Using varargin it is possible to:&#xD;
 1. Personalize the legend of groups in the scatterplot matrix. See option&#xD;
    'userleg'.&#xD;
 2. Add labels of the units belonging to the last data group (or to the&#xD;
   group with the largest value in the grouping variable) of each scatter&#xD;
   (panel). See option 'labeladd'.&#xD;
&#xD;
 </MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Tufte E.R. (1983). The visual display of quantitative information. Graphics Press, Cheshire</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>spmplot</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>add2spm with all default options.</Title>
         <Desc>&#xD;
     load Fisher iris  data&#xD;</Desc>
         <MATLABcode>
    load fisheriris;&#xD;
    % Create scatter plot matrix with specific legends&#xD;
    [H,AX,BigAx]=gplotmatrix(meas,[],species);&#xD;
    % [H,AX,BigAx]=gplotmatrix(meas,[],species,[],[],[],[],'grpbars')&#xD;
    add2spm(H,AX,BigAx)&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>add2spm with optional arguments.</Title>
         <Desc>&#xD;
     Use of userleg variable. Set some multivariate data and some groups.&#xD;</Desc>
         <MATLABcode>
    y = randn(100,3);&#xD;
    group = ones(100,1); group(1:10,1) = 444; group(11:20,1) = 777;&#xD;
&#xD;
    % Make a scatterplot using gplotmatrix defaults.&#xD;
    % The legends automatically created are '1','444' and '777'.&#xD;
    [H,AX,BigAx] = gplotmatrix(y,[],group,'brk','.ox');&#xD;
&#xD;
    % with add2spm with default options, the gplotmatrix legends&#xD;
    % will become clickable.&#xD;
    add2spm(H,AX,BigAx);&#xD;
&#xD;
    % by running add2spm with option 'userleg' set to '1', and by setting&#xD;
    % the figure Tag to a string containing the word 'group', the clickable&#xD;
    % legends will become 'group 1', 'group 2' and 'group 3'.&#xD;
    [H,AX,BigAx] = gplotmatrix(y,[],group,'brk','.ox');&#xD;
    set(gcf, 'Tag', 'this is a string with group')&#xD;
    add2spm(H,AX,BigAx,'userleg','1');&#xD;
&#xD;
    % by running add2spm with 'userleg', {'my group 1' ; 'my group 4' ; 'my&#xD;
    % group 7'} the legends change as desired.&#xD;
    [H,AX,BigAx] = gplotmatrix(y,[],group,'brk','.ox');&#xD;
    add2spm(H,AX,BigAx,'userleg',{'FIAT' ; 'BMW' ; 'VOLVO'});&#xD;
&#xD;
    % Now create a group on units contaminated by outliers. By running&#xD;
    % add2spm with option 'userleg' set to '1', and by setting the figure&#xD;
    % Tag to a string containing the word 'outlier', the clickable legends&#xD;
    % become 'normal units' and 'outliers'. Remark: the keep the proper&#xD;
    % order of the legends, it is sufficient to reserve for the outlier id&#xD;
    % variable the largest id number.&#xD;
    y = randn(100,2); y(25:35,:) = y(25:35,:) + 10;&#xD;
    group = ones(100,1);group(25:35,1) = 5;&#xD;
    figure('Tag','this is a dataset with outliers');&#xD;
    [H,AX,BigAx] = gplotmatrix(y,[],group,'br','ox');&#xD;
    add2spm(H,AX,BigAx,'userleg','1');&#xD;
&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Use of labeladd.</Title>
         <Desc/>
         <MATLABcode>
    close all;&#xD;
    % 'labeladd' is set to '1' to add labels found in the UserData&#xD;
    % property of the last group in each panel of the scatter matrix.&#xD;
    % It can be retrieved from H(1,end,end) (i.e. first row, last column,&#xD;
    % last group of the scatter matrix handles).&#xD;
&#xD;
    y = rand(100,3);&#xD;
    group = ones(100,1); group(1:5,1) = 5; group(10:15,1) = 10;&#xD;
    [H,AX,BigAx] = gplotmatrix(y,[],group,'brk','.ox');&#xD;
&#xD;
    % column vector of labels is set to the integers from 1 to size of last&#xD;
    % data group&#xD;
    labels = (1:numel(get(H(1,end,end),'YData')))';&#xD;
&#xD;
    % assign labels to the 'UserData' property of the last data group&#xD;
    set(H(:,:,1), 'UserData' , labels);&#xD;
&#xD;
    % try add2spm with 'labeladd' option set to '1'&#xD;
    add2spm(H,AX,BigAx,'labeladd','1');&#xD;
&#xD;</MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>