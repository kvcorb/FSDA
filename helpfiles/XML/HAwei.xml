<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->HAwei</Title>
   <Purpose><!--This is the second line of the .m file-->HAwei computes weight function psi(u)/u using Hampel proposal
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>u</Name>
         <ShortDesc>scaled residuals or Mahalanobis distances.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>n x 1 vector containing residuals or Mahalanobis distances for the n units of the sample</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ctuning</Name>
         <ShortDesc>tuning parameters.</ShortDesc>
         <TypeInd>Scalar or Vector.</TypeInd>
         <LongDesc>Scalar or vector of length 4 which specifies the value of the tuning constant c (scalar greater than 0 which controls the robustness/efficiency of the estimator) and the prefixed values of paramters a, b, c:
ctuning(1) = tuning constant which will multiply parameters a, b and c of Hampel rho (psi) function;
ctuning(2) = paramter a of Hampel rho (psi) function;
ctuning(3) = paramter b of Hampel rho (psi) function;
ctuning(4) = paramter c of Hampel rho (psi) function.
Remark: if length(ctuning)==1 values of a, b and c will be set to a=2*ctuning b=4*ctuning c=4*ctuning With these choices, if ctuning=1 the resulting influence function is nearly identical to the biweight with parameter 8.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>w</Name>
         <ShortDesc>n x 1 vector</ShortDesc>
         <TypeInd>Hampel weights associated to the residuals or Mahalanobis distances for the n units of the sample.</TypeInd>
         <LongDesc> </LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->Function HAwei transforms vector u as follows
\[
HAwei(u) = \left\{ \begin{array}{cc} 1 &amp; |u| &amp;lt;= a \\
\frac{a}{|u|} &amp; a \leq |u| &amp;lt; b \\
\frac{a}{|u|} \times \frac{c-|u|}{c-b}, &amp; b &amp;lt;= |u| &amp;lt; c \\
0 &amp; |u| &amp;gt;= c \end{array} \right.
\]
where ctun=ctuning(1).
$a$= ctun *ctuning(2).
$b$= ctun *ctuning(3).
$c$= ctun *ctuning(4).
The default is $a$= 2*ctun.
$b$= 4*ctun.
$c$= 8*ctun.
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>D. C. Hoaglin, F. Mosteller, J. W. Tukey (1982), Understanding Robust and Exploratory Data Analysis Wiley, New York.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>TBwei</Item>
      <Item>HYPwei</Item>
      <Item>OPTwei</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Obtain Figure 11.15 (panel b) p.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>%% Obtain Figure 11.15 (panel b) p. 382 of</ItemCell>
            <ItemCell>% Hoaglin et al. (1987)</ItemCell>
            <ItemCell>x=-8:0.01:8;</ItemCell>
            <ItemCell>weiHA=HAwei(x,[1 2 4 8]);</ItemCell>
            <ItemCell>plot(x,weiHA)</ItemCell>
            <ItemCell>xlabel('x','Interpreter','Latex')</ItemCell>
            <ItemCell>ylabel('$W (x) =\psi(x)/x$','Interpreter','Latex')</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>