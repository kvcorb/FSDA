<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->RandIndexFS</Title>
   <Purpose><!--This is the second line of the .m file-->RandIndexFS calculates Rand type Indices to compare two partitions
</Purpose>
   <Description><!--Description section-->Suppose we want to compare two partitions summarized by the contingency table $T=[n_{ij}]$ where $i=1, 2, ..., r$ and $j=1,...,c$ and $n_{ij}$ denotes the number of data points which are in cluster i in the first partition and in cluster j in the second partition. Let A denote the number of all pairs of data points which are either put into the same cluster by both partitions or put into different clusters by both partitions. Conversely, let D denote the number of all pairs of data points that are put into one cluster in one partition, but into different clusters by the other partition. The partitions disagree for all pairs D and agree for all pairs A. A+D=totcomp= total number of comparisons.
We can measure the agreement by the Rand index A/(A+D)=A/(totcomp) which is invariant with respect to permutations of the columns or rows of T.
The index has to be corrected for agreement by chance if the sizes of the clusters are not uniform (which is usually the case). Since the Rand index lies between 0 and 1, the expected value of the Rand index (although not a constant value) must be greater than or equal to 0. On the other hand, the expected value of the adjusted Rand index has value zero and the maximum value of the adjusted Rand index is also 1. Hence, there is a wider range of values that the adjusted Rand index can take on, thus increasing the sensitivity of the index. The formula of the adjusted Rand index (AR) is given below
\[
AR= \frac{\mbox{RI- Expected value of RI}}{\mbox{Max Index - Expected value of RI}}
\]
</Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>c1</Name>
         <ShortDesc>labels of first partition or contingency table.</ShortDesc>
         <TypeInd>A numeric or character vector containining the class labels of the first partition or a 2-dimensional numeric matrix which contains the cross-tabulation of cluster assignments.</TypeInd>
         <LongDesc>Data Types: single | double | char | logical</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>c2</Name>
         <ShortDesc>labels of second partition.</ShortDesc>
         <TypeInd>A numeric or character vector containining the class labels of the second partition.</TypeInd>
         <LongDesc>The length of vector c2 must be equal to the length of vector c1. This second input is required just if c1 is not a 2-dimensional numeric matrix.
Data Types: single | double | char | logical</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>noisecluster</Name>
         <ShortDesc>label or number associated to the 'noise class' or 'noise level'.</ShortDesc>
         <TypeInd>Scalar, numeric or character.</TypeInd>
         <LongDesc>Number or character label which denotes the points which do not belong to any cluster.
These points are not takern into account for the computation of the Rand type indexes</LongDesc>
         <Example>&lt;code&gt;0 (in this case the units which in of the&#xD;
&lt;/code&gt;                 two partitions have 0 class are not taken into account in the&#xD;
                 index calculations)</Example>
         <DataType>double or character</DataType>
         <ReqArg>0</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>AR</Name>
         <ShortDesc>Scalar</ShortDesc>
         <TypeInd>Adjusted Rand index.</TypeInd>
         <LongDesc>A number between -1 and 1.
The adjusted Rand index is the corrected-for-chance version of the Rand index.</LongDesc>
         <Structure> </Structure>
      </Item>
      <Item>
         <Name>RI</Name>
         <ShortDesc>Scalar</ShortDesc>
         <TypeInd>Rand index (unadjusted).</TypeInd>
         <LongDesc>A number between 0 and 1.
Rand index computes the fraction of pairs of objects for which both classification methods agree.
RI ranges from 0 (no pair classified in the same way under both clusterings) to 1 (identical clusterings).</LongDesc>
         <Structure> </Structure>
      </Item>
      <Item>
         <Name>MI</Name>
         <ShortDesc>Scalar</ShortDesc>
         <TypeInd>Mirkin's index.</TypeInd>
         <LongDesc>A number between 0 and 1.
Mirkin's index computes the percentage of pairs of objects for which both classification methods disagree. MI=1-RI.</LongDesc>
         <Structure> </Structure>
      </Item>
      <Item>
         <Name>HI</Name>
         <ShortDesc>Scalar</ShortDesc>
         <TypeInd>Hubert index.</TypeInd>
         <LongDesc>A number between -1 and 1.
HI index is equal to the fraction of pairs of objects for which both classification methods agree minus the fraction of pairs of objects for which both classification methods disagree. HI= RI-MI.</LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION-->&#xD;
&#xD;
 This function follows the lines of MATLAB code developed by&#xD;
 David Corney (2000) 	D.Corney@cs.ucl.ac.uk&#xD;
&#xD;
&#xD;
 
</Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Hubert L. and Arabie P., (1985), Comparing Partitions, Journal of Classification, vol. 2, pp 193-218.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>crosstab</Item>
      <Item>tclust</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>RandindexFS with the contingency table as input.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>T=[1 1 0;</ItemCell>
            <ItemCell>1 2 1;</ItemCell>
            <ItemCell>0 0 4];</ItemCell>
            <ItemCell>ARI=RandIndexFS(T);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>RandindexFS with the two vectors as input.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>% RandindexFS with the two vectors as input.</ItemCell>
            <ItemCell> c=[1 1;</ItemCell>
            <ItemCell>    1 2</ItemCell>
            <ItemCell>    2 1;</ItemCell>
            <ItemCell>    2 2 ;</ItemCell>
            <ItemCell>    2 2;</ItemCell>
            <ItemCell>    2 3;</ItemCell>
            <ItemCell>    3 3;</ItemCell>
            <ItemCell>    3 3;</ItemCell>
            <ItemCell>    3 3;</ItemCell>
            <ItemCell>    3 3];</ItemCell>
            <ItemCell>% c1= numeric vector containing the labels of the first partition</ItemCell>
            <ItemCell>c1=c(:,1);</ItemCell>
            <ItemCell>% c1= numeric vector containing the labels of the second partition</ItemCell>
            <ItemCell>c2=c(:,2);</ItemCell>
            <ItemCell>ARI=RandIndexFS(c1,c2);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Computation of ARI, RI, MI and HI.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>ARI,RI,MI,HI]=RandIndexFS(c1,c2);</ItemCell>
            <ItemCell>disp('Adjusted Rand index')</ItemCell>
            <ItemCell>disp(ARI)</ItemCell>
            <ItemCell>disp('Rand index (RI)')</ItemCell>
            <ItemCell>disp(RI)</ItemCell>
            <ItemCell>disp('Mirkin index = 1-RI')</ItemCell>
            <ItemCell>disp(MI)</ItemCell>
            <ItemCell>disp('Hubert index = RI-MI ')</ItemCell>
            <ItemCell>disp(HI)</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Compare ARI for iris data (true classification against tclust classification).</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>    load fisheriris</ItemCell>
            <ItemCell>    % first partition c1 is the true partition</ItemCell>
            <ItemCell>    c1=species</ItemCell>
            <ItemCell>    % second partition c2 is the output of tclust clustering procedure</ItemCell>
            <ItemCell>    out=tclust(meas,3,0,100,'msg',0);</ItemCell>
            <ItemCell>    c2=out.idx;</ItemCell>
            <ItemCell>    [ARI,RI,MI,HI]=RandIndexFS(c1,c2);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Compare ARI for iris data (exclude unassigned units from tclust).</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>    load fisheriris</ItemCell>
            <ItemCell>    % first partition c1 is the true partition</ItemCell>
            <ItemCell>    c1=species</ItemCell>
            <ItemCell>    % second partition c2 is the output of tclust clustering procedure</ItemCell>
            <ItemCell>    out=tclust(meas,3,0.1,100,'msg',0);</ItemCell>
            <ItemCell>    c2=out.idx;</ItemCell>
            <ItemCell>    % Units inside c2 which contain number 0 are referred to trimmed observations</ItemCell>
            <ItemCell>    noisecluster=0;</ItemCell>
            <ItemCell>    [ARI,RI,MI,HI]=RandIndexFS(c1,c2,noisecluster);</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION--></ExtraEx>
</HelpXML>