<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->malindexplot</Title>
   <Purpose><!--This is the second line of the .m file-->malindexplot plots the Mahalanobis distances versus a selected variable.</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>md</Name>
         <ShortDesc>Mahalanobis distances</ShortDesc>
         <TypeInd>Vector or structure</TypeInd>
         <LongDesc>Vector of Mahalanobis distances (in squared units) or a structure&#xD;
       containing fields md and Y. In this second case ms is a structure with the followign fields: &#xD;
        md.md = contains the Mahalanobis distances;&#xD;
        md.Y = contains the original data matrix whose Mahalanobis&#xD;
        distances have been computed.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct>
            <ItemCell>
               <Value>md</Value>
               <Description>contains the Mahalanobis distances;</Description>
            </ItemCell>
            <ItemCell>
               <Value>Y</Value>
               <Description>contains the original data matrix whose Mahalanobis&#xD;
        distances have been computed.</Description>
            </ItemCell>
         </Struct>
      </Item>
      <Item>
         <Name>v</Name>
         <ShortDesc>Number of variables</ShortDesc>
         <TypeInd>Scalar, the number of variables of the original&#xD;
       data matrix</TypeInd>
         <LongDesc>which have been used to construct md.</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION-->
      <Item>
         <Name>h</Name>
         <ShortDesc>Where to plot</ShortDesc>
         <TypeInd>Axis hadle</TypeInd>
         <LongDesc>The axis handle of the Figure where to send the malindexplot.&#xD;
                   This can be used to host the malindexplot in a subplot of&#xD;
                   a complex figure formed by different panels (e.g. a&#xD;
                   panel with malindexplot from a classical mle estimator and&#xD;
                   another with Mahalanobis distances from a robust&#xD;
                   analysis, see example below).&#xD;
                   </LongDesc>
         <Example> 'h',gca&#xD;
                   </Example>
         <DataType>graphics handle</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>x</Name>
         <ShortDesc>x-axis index</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>The vector to be plotted on the x-axis. Default is the&#xD;
                   sequence 1:length(md).&#xD;
                   </LongDesc>
         <Example> 'x','1:100'&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>labx</Name>
         <ShortDesc>x label</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>A label for the x-axis (default: '').&#xD;
                   </LongDesc>
         <Example> 'labx','unit number'&#xD;
                   </Example>
         <DataType>character</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>laby</Name>
         <ShortDesc>y label</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>A label for the y-axis (default: '').&#xD;
                   </LongDesc>
         <Example> 'laby','MD'&#xD;
                   </Example>
         <DataType>character</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>title</Name>
         <ShortDesc>plot title</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>A label containing the title of the plot. Default is&#xD;
                   'Index plot of Mahalanobid distances'.&#xD;
                   </LongDesc>
         <Example> 'title','Index plot of MD'&#xD;
                   </Example>
         <DataType>character</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>numlab</Name>
         <ShortDesc>number of points to be labelled in the plot</ShortDesc>
         <TypeInd>vector or cell</TypeInd>
         <LongDesc>If numlab is a cell containing scalar k, the units&#xD;
                   with the k largest md are labelled in the plots.&#xD;
                   If numlab is a vector, the units indexed by the vector&#xD;
                   are labelled in the plot.&#xD;
                   Default is numlab={5}, that is units with the 5&#xD;
                   largest md are labelled.&#xD;
                   Use numlab='' for no labelling.&#xD;
                   </LongDesc>
         <Example> 'numlab',{3}&#xD;
                   </Example>
         <DataType>numeric vector or cell.</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>conflev</Name>
         <ShortDesc>confidence interval for the horizontal bands</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>It can be a vector of different confidence level values,&#xD;
                   e.g. [0.95,0.99,0.999]. Confidence interval is based on&#xD;
                   the chi^2 distribution.&#xD;
                   </LongDesc>
         <Example> 'conflev',0.99&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>FontSize</Name>
         <ShortDesc>Labels font size</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls the&#xD;
                   font size of the labels of the&#xD;
                   axes. Default value is 12.&#xD;
                   </LongDesc>
         <Example> 'FontSize',12&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>SizeAxesNum</Name>
         <ShortDesc>Numbers font size</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls the&#xD;
                   fontsize of the numbers of&#xD;
                   the axes. Default value is 10.&#xD;
                   </LongDesc>
         <Example> 'SizeAxesNum',12&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>ylimy</Name>
         <ShortDesc>ylimits</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and&#xD;
                   maximum value of the y axis. Default is '' (automatic&#xD;
                   scale).&#xD;
                   </LongDesc>
         <Example> 'ylimiy',[-3 3]&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>xlimx</Name>
         <ShortDesc>xlimits</ShortDesc>
         <TypeInd>Vector</TypeInd>
         <LongDesc>Vector with two elements controlling minimum and&#xD;
                   maximum value of the x axis. Default is '' (automatic&#xD;
                   scale).&#xD;
                   </LongDesc>
         <Example> 'xlimix',[1 30]&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>lwdenv</Name>
         <ShortDesc>Envelope line width</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar which controls the&#xD;
                   width of the lines associated&#xD;
                   with the envelopes. Default is lwdenv=1.&#xD;
                   </LongDesc>
         <Example> 'lwdenv',4&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>MarkerSize</Name>
         <ShortDesc>Marker size of points</ShortDesc>
         <TypeInd>Scalar</TypeInd>
         <LongDesc>Scalar specifying the size of the marker in points&#xD;
                   (1 point = 1/72 inch). Default is MarkerSize = 6.&#xD;
                   </LongDesc>
         <Example> 'MarkerSize',4&#xD;
                   </Example>
         <DataType>numeric</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>MarkerFaceColor</Name>
         <ShortDesc>Marker fill color of points</ShortDesc>
         <TypeInd>Character or length 3 RGB&#xD;
                   numeric vector</TypeInd>
         <LongDesc>The fill color for markers that are closed shapes&#xD;
                   (circle, square, diamond, pentagram, hexagram, and the&#xD;
                   four triangles).&#xD;
                   </LongDesc>
         <Example> 'MarkerFaceColor','b'&#xD;
                   </Example>
         <DataType>numeric | character</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>tag</Name>
         <ShortDesc>Figure tag</ShortDesc>
         <TypeInd>Character</TypeInd>
         <LongDesc>Tag of the figure which will host the malindexplot. The&#xD;
                   default tag is pl_malindex&#xD;
                   </LongDesc>
         <Example> 'tag','indexPlot'&#xD;
                   </Example>
         <DataType>character</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>databrush</Name>
         <ShortDesc>interactive mouse brushing</ShortDesc>
         <TypeInd>Empty value, scalar or structure</TypeInd>
         <LongDesc>If databrush is an empty value (default), no brushing&#xD;
                   is done.&#xD;
                   The activation of this option (databrush is a scalar or&#xD;
                   a structure) enables the user  to select a set the&#xD;
                   points in the current plot and to see them&#xD;
                   highlighted in the scatter plot matrix (spm).&#xD;
                   If spm does not exist it is automatically created.&#xD;
                   DATABRUSH IS A SCALAR&#xD;
                   If databrush is a scalar the default selection tool is&#xD;
                   a rectangular brush and it is possible to brush only&#xD;
                   once (that is persist='')&#xD;
                   DATABRUSH IS A STRUCTURE&#xD;
                   If databrush is a structure, it is possible to use all&#xD;
                   optional arguments of function selectdataFS.m and the&#xD;
                   following optional argument:&#xD;
                   - persist. Persist is an empty value or a scalar&#xD;
                     containing the strings 'on' or 'off'.&#xD;
                     The default value of persist is '', that is brushing&#xD;
                     is allowed only once.&#xD;
                     If persist is 'on' or 'off' brushing can be done as&#xD;
                     many time as the user requires.&#xD;
                     If persist='on' then the unit(s) currently brushed&#xD;
                     are added to those previously brushed. it is&#xD;
                     possible, every time a new brushing is done, to use a&#xD;
                     different color for the brushed units.&#xD;
                     If persist='off' every time a new brush is performed&#xD;
                     units previously brushed are removed.&#xD;
                   - labeladd. If this option is '1', we label in the&#xD;
                     scatter plot matrix the units of the last selected&#xD;
                     group with the unit row index in matrix Y. The&#xD;
                     default value is labeladd='', i.e. no label is added.&#xD;
                   </LongDesc>
         <Example> 'databrush',1&#xD;
                   </Example>
         <DataType>single | double | struct&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
       The options which follow work in connection with previous option&#xD;
       databrush and produce their effect on the scatter plot matrix of the original data</DataType>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>nameY</Name>
         <ShortDesc>variables labels of the original data matrix</ShortDesc>
         <TypeInd>Cell</TypeInd>
         <LongDesc>Cell&#xD;
                array of strings containing the labels of the&#xD;
                variables. As default value, the labels which are added&#xD;
                are Y1, ..., Yv. This option is used just if previous&#xD;
                option databrush is not empty.&#xD;
                   </LongDesc>
         <Example> 'nameY',{'Y_1' Y_2'}&#xD;
                   </Example>
         <DataType>character</DataType>
         <Struct> </Struct>
      </Item>
   </OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION--></OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION--></MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Rousseeuw PJ, Leroy AM (1987): Robust regression and outlier detection,&#xD;
   Wiley.</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>resfwdplot</Item>
      <Item>resindexplot</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title>Mahalanobis distance plot of 100 random numbers.</Title>
         <Desc> &#xD;
       Numbers are from from the chi2 with 5 degrees of freedom&#xD;</Desc>
         <MATLABcode>
     malindexplot(chi2rnd(5,100,1),5)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>Compare traditional md with robust md for the stack loss data.</Title>
         <Desc/>
         <MATLABcode>
    load('stack_loss.txt');&#xD;
    X=stack_loss(:,1:3);&#xD;
    [n,v]=size(X);&#xD;
    % Define confidence level&#xD;
    conflev=[0.95,0.99];&#xD;
    figure;&#xD;
    h1=subplot(2,1,1);&#xD;
    % Compute traditional Mahalanobis distances&#xD;
    mdtrad=mahal(X,X);&#xD;
    malindexplot(mdtrad,v,'h',h1,'conflev',conflev,'labx','Index number','laby','Traditional md');&#xD;
&#xD;
    % Compute robust md&#xD;
    [out]=FSM(X,'init',5,'plots',0);&#xD;
    seq=1:size(X,1);&#xD;
    good=setdiff(seq,out.outliers);&#xD;
    mdrob=mahal(X,X(good,:));&#xD;
    &#xD;
    h2=subplot(2,1,2);&#xD;
    malindexplot(mdrob,v,'h',h2,'conflev',conflev,'labx','Index number','laby','Robust md','title','');&#xD;
&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>&lt;i&gt;Interactive example 1.&lt;/i&gt;
       Index plot Mahalanobis distance with databrush option.</Title>
         <Desc/>
         <MATLABcode>
    n=200;&#xD;
    v=3;&#xD;
    randn('state', 123456);&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [RAW,REW]=mcd(Ycont);&#xD;
    RAW.Y=Ycont;&#xD;
    malindexplot(RAW,v,'databrush',1)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
      <Item>
         <Title>&lt;i&gt;Interactive example 2.&lt;/i&gt;
       Index plot Mahalanobis distance with personalized databrush option.</Title>
         <Desc/>
         <MATLABcode>
    n=200;&#xD;
    v=3;&#xD;
    randn('state', 123456);&#xD;
    Y=randn(n,v);&#xD;
    % Contaminated data&#xD;
    Ycont=Y;&#xD;
    Ycont(1:5,:)=Ycont(1:5,:)+3;&#xD;
    [RAW,REW]=mcd(Ycont);&#xD;
    RAW.Y=Ycont;&#xD;
    databrush=struct;&#xD;
    databrush.selectionmode='Brush'; % Brush selection&#xD;
    databrush.persist='on'; % Enable repeated mouse selections&#xD;
    databrush.Label='on'; % Write labels of the units while selecting&#xD;
    databrush.RemoveLabels='on'; % Remove labels after selection&#xD;
    databrush.RemoveTool    = 'off'; % Do not remove yellow tool after selection&#xD;
    databrush.RemoveFlagged = 'off'; % Do not remove filled red color for selected points after selection&#xD;
    databrush.labeladd = '1'; % Write number of seleceted units in the scatter plot matrix&#xD;
    malindexplot(RAW,v,'databrush',databrush)&#xD;</MATLABcode>
         <Exec>0</Exec>
      </Item>
   </ExtraEx>
</HelpXML>