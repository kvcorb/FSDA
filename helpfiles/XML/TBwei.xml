<?xml version="1.0" encoding="utf-8"?>
<HelpXML>
   <Title><!--This is simply the filename-->TBwei</Title>
   <Purpose><!--This is the second line of the .m file-->TBwei computes weight function psi(u)/u for Tukey's biweight  
</Purpose>
   <Description><!--Description section--></Description>
   <InpArgs><!--REQUIRED INPUT ARGUMENT SECTION-->
      <Item>
         <Name>u</Name>
         <ShortDesc>scaled residuals or Mahalanobis distances.</ShortDesc>
         <TypeInd>Vector.</TypeInd>
         <LongDesc>n x 1 vector containing residuals or Mahalanobis distances for the n units of the sample</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
      <Item>
         <Name>c</Name>
         <ShortDesc>tuning parameters.</ShortDesc>
         <TypeInd>Scalar.</TypeInd>
         <LongDesc>Scalar greater than 0 which controls the robustness/efficiency of the estimator (beta in regression or mu in the location case ...)</LongDesc>
         <Example> </Example>
         <DataType>single| double</DataType>
         <ReqArg>1</ReqArg>
         <Struct> </Struct>
      </Item>
   </InpArgs>
   <OptArgs><!--OPTIONAL (NAME/PAIRS) INPUT ARGUMENT SECTION--></OptArgs>
   <OutArgs><!--OUTPUT ARGUMENT SECTION-->
      <Item>
         <Name>w</Name>
         <ShortDesc>n x 1 vector</ShortDesc>
         <TypeInd>Tukey's biweight weights associated to the scaled residuals or Mahalanobis distances for the n units of the sample.</TypeInd>
         <LongDesc> </LongDesc>
         <Structure> </Structure>
      </Item>
   </OutArgs>
   <MoreAbout><!--MORE ABOUT SECTION-->Function TBwei transforms vector u as follows
\[
TBwei(u)= \left\{ \begin{array}{cc} (c^2/6) psi(u)/u = (c^2/6) \left[ 1-(u/c) \right]^2 if |u/c| \leq 1 \\
0 &amp; |u/c|&amp;gt;1 \\
\end{array} \right.
\]
See p. 30 of Maronna et al. (2006) Remark: Tukey's biweight psi-function is almost linear around u = 0 in accordance with Winsor's principle that all distributions are normal in the middle.
This means that $\psi (u)/u$ is approximately constant over the linear region of \psi, so the points in that region tend to get equal weight.
</MoreAbout>
   <Acknowledgements><!--ACKNOWLEDGEMENTS SECTION--></Acknowledgements>
   <References><!--REFERENCES SECTION-->
      <Item>Maronna, R.A., Martin D. and Yohai V.J. (2006), Robust Statistics, Theory and Methods, Wiley, New York.</Item>
      <Item>Riani M., Cerioli A., Torti F. (2014). On consistency factors and efficiency of robust S-estimators, TEST, Volume 23, Issue 2, pp 356-387.
DOI: 10.1007/s11749-014-0357-7</Item>
   </References>
   <SeeAlso><!--SEE ALSO SECTION-->
      <Item>HYPwei</Item>
      <Item>HAwei</Item>
      <Item>OPTwei</Item>
   </SeeAlso>
   <Ex><!--EXAMPLES SECTION-->
      <Item>
         <Title> </Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>x=-6:0.01:6;</ItemCell>
            <ItemCell>weiTB=TBwei(x,2);</ItemCell>
            <ItemCell>plot(x,weiTB)</ItemCell>
            <ItemCell>xlabel('x','Interpreter','Latex')</ItemCell>
            <ItemCell>ylabel('$W (x) =\psi(x)/x$','Interpreter','Latex')</ItemCell>
         </MATLABcode>
         <Exec>0</Exec>
      </Item>
   </Ex>
   <ExtraEx><!--EXTRA EXAMPLES SECTION-->
      <Item>
         <Title>Compare four different weight functions.</Title>
         <Desc> </Desc>
         <MATLABcode>
            <ItemCell>FontSize=14;</ItemCell>
            <ItemCell>x=-6:0.01:6;</ItemCell>
            <ItemCell>ylim1=-0.05;</ItemCell>
            <ItemCell>ylim2=1.05;</ItemCell>
            <ItemCell>xlim1=min(x);</ItemCell>
            <ItemCell>xlim2=max(x);</ItemCell>
            <ItemCell>LineWidth=2;</ItemCell>
            <ItemCell>subplot(2,2,1)</ItemCell>
            <ItemCell>ceff095HU=HUeff(0.95,1);</ItemCell>
            <ItemCell>weiHU=HUwei(x,ceff095HU);</ItemCell>
            <ItemCell>plot(x,weiHU,'LineWidth',LineWidth)</ItemCell>
            <ItemCell>xlabel('$u$','Interpreter','Latex','FontSize',FontSize)</ItemCell>
            <ItemCell>title('Huber','FontSize',FontSize)</ItemCell>
            <ItemCell>ylim([ylim1 ylim2])</ItemCell>
            <ItemCell>xlim([xlim1 xlim2])</ItemCell>
            <ItemCell>subplot(2,2,2)</ItemCell>
            <ItemCell>ceff095HA=HAeff(0.95,1);</ItemCell>
            <ItemCell>weiHA=HAwei(x,ceff095HA);</ItemCell>
            <ItemCell>plot(x,weiHA,'LineWidth',LineWidth)</ItemCell>
            <ItemCell>xlabel('$u$','Interpreter','Latex','FontSize',FontSize)</ItemCell>
            <ItemCell>title('Hampel','FontSize',FontSize)</ItemCell>
            <ItemCell>ylim([ylim1 ylim2])</ItemCell>
            <ItemCell>xlim([xlim1 xlim2])</ItemCell>
            <ItemCell>subplot(2,2,3)</ItemCell>
            <ItemCell>ceff095TB=TBeff(0.95,1);</ItemCell>
            <ItemCell>weiTB=TBwei(x,ceff095TB);</ItemCell>
            <ItemCell>plot(x,weiTB,'LineWidth',LineWidth)</ItemCell>
            <ItemCell>xlabel('$u$','Interpreter','Latex','FontSize',FontSize)</ItemCell>
            <ItemCell>title('Tukey biweight','FontSize',FontSize)</ItemCell>
            <ItemCell>ylim([ylim1 ylim2])</ItemCell>
            <ItemCell>xlim([xlim1 xlim2])</ItemCell>
            <ItemCell>subplot(2,2,4)</ItemCell>
            <ItemCell>ceff095HYP=HYPeff(0.95,1);</ItemCell>
            <ItemCell>ktuning=4.5;</ItemCell>
            <ItemCell>weiHYP=HYPwei(x,[ceff095HYP,ktuning]);</ItemCell>
            <ItemCell>plot(x,weiHYP,'LineWidth',LineWidth)</ItemCell>
            <ItemCell>xlabel('$u$','Interpreter','Latex','FontSize',FontSize)</ItemCell>
            <ItemCell>title('Hyperbolic','FontSize',FontSize)</ItemCell>
            <ItemCell>ylim([ylim1 ylim2])</ItemCell>
            <ItemCell>xlim([xlim1 xlim2])</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
      <Item>
         <Title>Compare two weight functions for 2 different values of c.</Title>
         <Desc>
            <ItemCell>In the first we fix the bdp (value of efficiency is automatically given) , while in the second we find the efficiency (the value of bdp is automatically given)</ItemCell>
         </Desc>
         <MATLABcode>
            <ItemCell>close all</ItemCell>
            <ItemCell>x=-6:0.01:6;</ItemCell>
            <ItemCell>lwd=2;</ItemCell>
            <ItemCell>hold('on')</ItemCell>
            <ItemCell>c=TBbdp(0.5,1);</ItemCell>
            <ItemCell>rhoTB=TBwei(x,c);</ItemCell>
            <ItemCell>plot(x,rhoTB,'LineStyle','-','LineWidth',lwd)</ItemCell>
            <ItemCell>c=TBeff(0.95,1);</ItemCell>
            <ItemCell>rhoTB=TBwei(x,c);</ItemCell>
            <ItemCell>plot(x,rhoTB,'LineStyle','-.','LineWidth',lwd)</ItemCell>
            <ItemCell>xlabel('$x$','Interpreter','Latex','FontSize',16)</ItemCell>
            <ItemCell>ylabel('TB weight function $\psi_c(x)/x$','Interpreter','Latex','FontSize',20)</ItemCell>
         </MATLABcode>
         <Exec>1</Exec>
      </Item>
   </ExtraEx>
</HelpXML>